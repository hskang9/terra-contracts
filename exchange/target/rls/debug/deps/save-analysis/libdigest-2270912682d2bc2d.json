{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1","program":"/Users/hyungsukkang/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","digest","/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=2270912682d2bc2d","-C","extra-filename=-2270912682d2bc2d","--out-dir","/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps","-L","dependency=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps","--extern","generic_array=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps/libgeneric_array-8a765200b306622e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/hyungsukkang/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps/libdigest-2270912682d2bc2d.rmeta"},"prelude":{"crate_id":{"name":"digest","disambiguator":[11532930736329595461,16706684304467549847]},"crate_root":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src","external_crates":[{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5693088722327716739,2147858288623464010]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15524063101320593432,10022011492683157993]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14556973752653035032,10499433159243229334]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[6524170118306894397,17302580365150100100]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":5,"id":{"name":"typenum","disambiguator":[17692424399484018721,470952353816787855]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[12669636623235690034,8759211680751900309]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":7,"id":{"name":"alloc","disambiguator":[1934112228416746928,18062520869078565162]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":8,"id":{"name":"libc","disambiguator":[18272308394612376465,2983342869845535113]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":9,"id":{"name":"unwind","disambiguator":[7982440001281678496,5082264322901945876]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":10,"id":{"name":"cfg_if","disambiguator":[17333179571007866912,15310387900280001912]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[17767206385810259554,6284392829264960128]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[6917085151040958166,7936695879549379973]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[14883612992525439991,13188753928230923968]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":14,"id":{"name":"hashbrown","disambiguator":[8362867231865330830,11957228790523419708]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":15,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13374155178358367403,7714447127929209529]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[7401024017757537210,13419518921059338139]}}],"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":0,"byte_end":4578,"line_start":1,"line_end":141,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1165,"byte_end":1182,"line_start":33,"line_end":33,"column_start":17,"column_end":34},"alias_span":null,"name":"InvalidOutputSize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1200,"byte_end":1206,"line_start":34,"line_end":34,"column_start":17,"column_end":23},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1252,"byte_end":1261,"line_start":36,"line_end":36,"column_start":21,"column_end":30},"alias_span":null,"name":"DynDigest","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":0,"byte_end":4578,"line_start":1,"line_end":141,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":44},{"krate":0,"index":68},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":103}],"decl_id":null,"docs":" This crate provides traits which describe functionality of cryptographic hash\n functions.","sig":null,"attributes":[{"value":"! This crate provides traits which describe functionality of cryptographic hash","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":0,"byte_end":81,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"! functions.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":82,"byte_end":96,"line_start":2,"line_end":2,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":97,"byte_end":100,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! Traits in this repository can be separated into two levels:","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":101,"byte_end":164,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"! - Low level traits: `Input`, `BlockInput`, `Reset`, `FixedOutput`,","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":165,"byte_end":235,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"! `VariableOutput`, `ExtendableOutput`. These traits atomically describe","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":236,"byte_end":310,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"! available functionality of hash function implementations.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":311,"byte_end":372,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"! - Convenience trait: `Digest`, `DynDigest`. They are wrappers around","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":373,"byte_end":445,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"! low level traits for most common hash-function use-cases.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":446,"byte_end":507,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":508,"byte_end":511,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Additionally hash functions implement traits from `std`: `Default`, `Clone`,","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":512,"byte_end":592,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! `Write`. (the latter depends on enabled-by-default `std` crate feature)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":593,"byte_end":668,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":669,"byte_end":672,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The `Digest` trait is the most commonly used trait.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":673,"byte_end":728,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"no_std","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":729,"byte_end":739,"line_start":15,"line_end":15,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":4951,"byte_end":4957,"line_start":9,"line_end":9,"column_start":11,"column_end":17},"name":"Digest","qualname":"::digest::Digest","value":"Digest","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" The `Digest` trait specifies an interface common for digest functions.","sig":null,"attributes":[{"value":"/ The `Digest` trait specifies an interface common for digest functions.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":4707,"byte_end":4781,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":4782,"byte_end":4785,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It's a convenience wrapper around `Input`, `FixedOutput`, `Reset`, `Clone`,","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":4786,"byte_end":4865,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ and `Default` traits. It also provides additional convenience methods.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":4866,"byte_end":4940,"line_start":8,"line_end":8,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":4969,"byte_end":4979,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"OutputSize","qualname":"::digest::Digest::OutputSize","value":"type OutputSize: ArrayLength<u8>;","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5040,"byte_end":5043,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"new","qualname":"::digest::Digest::new","value":"fn () -> Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Create new hasher instance\n","sig":null,"attributes":[{"value":"/ Create new hasher instance","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5002,"byte_end":5032,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5176,"byte_end":5181,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"input","qualname":"::digest::Digest::input","value":"fn <B> (&mut self, data: B) -> ()","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Digest input data.","sig":null,"attributes":[{"value":"/ Digest input data.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5060,"byte_end":5082,"line_start":14,"line_end":14,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5087,"byte_end":5090,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This method can be called repeatedly for use with streaming messages.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5095,"byte_end":5168,"line_start":16,"line_end":16,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5274,"byte_end":5279,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"chain","qualname":"::digest::Digest::chain","value":"fn <B> (self, data: B) -> Self","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Digest input data in a chained manner.\n","sig":null,"attributes":[{"value":"/ Digest input data in a chained manner.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5224,"byte_end":5266,"line_start":19,"line_end":19,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5399,"byte_end":5405,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"result","qualname":"::digest::Digest::result","value":"fn (self) -> GenericArray<u8, Self::OutputSize>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Retrieve result and consume hasher instance.\n","sig":null,"attributes":[{"value":"/ Retrieve result and consume hasher instance.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5343,"byte_end":5391,"line_start":22,"line_end":22,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5610,"byte_end":5622,"line_start":29,"line_end":29,"column_start":8,"column_end":20},"name":"result_reset","qualname":"::digest::Digest::result_reset","value":"fn (&mut self) -> GenericArray<u8, Self::OutputSize>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Retrieve result and reset hasher instance.","sig":null,"attributes":[{"value":"/ Retrieve result and reset hasher instance.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5456,"byte_end":5502,"line_start":25,"line_end":25,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5507,"byte_end":5510,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This method sometimes can be more efficient compared to hasher","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5515,"byte_end":5581,"line_start":27,"line_end":27,"column_start":5,"column_end":71}},{"value":"/ re-creation.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5586,"byte_end":5602,"line_start":28,"line_end":28,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5733,"byte_end":5738,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"reset","qualname":"::digest::Digest::reset","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Reset hasher instance to its initial state.\n","sig":null,"attributes":[{"value":"/ Reset hasher instance to its initial state.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5678,"byte_end":5725,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5797,"byte_end":5808,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"output_size","qualname":"::digest::Digest::output_size","value":"fn () -> usize","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Get output size of the hasher\n","sig":null,"attributes":[{"value":"/ Get output size of the hasher","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5756,"byte_end":5789,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":6092,"byte_end":6098,"line_start":45,"line_end":45,"column_start":8,"column_end":14},"name":"digest","qualname":"::digest::Digest::digest","value":"fn (data: &[u8]) -> GenericArray<u8, Self::OutputSize>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Convenience function to compute hash of the `data`. It will handle\n hasher creation, data feeding and finalization.","sig":null,"attributes":[{"value":"/ Convenience function to compute hash of the `data`. It will handle","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5826,"byte_end":5896,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/ hasher creation, data feeding and finalization.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5901,"byte_end":5952,"line_start":38,"line_end":38,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5957,"byte_end":5960,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5965,"byte_end":5977,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5982,"byte_end":5985,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5990,"byte_end":6008,"line_start":42,"line_end":42,"column_start":5,"column_end":23}},{"value":"/ println!(\"{:x}\", sha2::Sha256::digest(b\"Hello world\"));","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":6013,"byte_end":6072,"line_start":43,"line_end":43,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":6077,"byte_end":6084,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7359,"byte_end":7368,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"DynDigest","qualname":"::dyn_digest::DynDigest","value":"DynDigest","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" The `DynDigest` trait is a modification of `Digest` trait suitable\n for trait objects.\n","sig":null,"attributes":[{"value":"/ The `DynDigest` trait is a modification of `Digest` trait suitable","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7255,"byte_end":7325,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ for trait objects.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7326,"byte_end":7348,"line_start":8,"line_end":8,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7491,"byte_end":7496,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"input","qualname":"::dyn_digest::DynDigest::input","value":"fn (&mut self, data: &[u8]) -> ()","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Digest input data.","sig":null,"attributes":[{"value":"/ Digest input data.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7375,"byte_end":7397,"line_start":10,"line_end":10,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7402,"byte_end":7405,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ This method can be called repeatedly for use with streaming messages.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7410,"byte_end":7483,"line_start":12,"line_end":12,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7580,"byte_end":7592,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"result_reset","qualname":"::dyn_digest::DynDigest::result_reset","value":"fn (&mut self) -> Box<[u8]>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Retrieve result and reset hasher instance\n","sig":null,"attributes":[{"value":"/ Retrieve result and reset hasher instance","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7527,"byte_end":7572,"line_start":15,"line_end":15,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7684,"byte_end":7690,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"result","qualname":"::dyn_digest::DynDigest::result","value":"fn (self: Box<Self>) -> Box<[u8]>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Retrieve result and consume boxed hasher instance\n","sig":null,"attributes":[{"value":"/ Retrieve result and consume boxed hasher instance","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7623,"byte_end":7676,"line_start":18,"line_end":18,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7782,"byte_end":7787,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"reset","qualname":"::dyn_digest::DynDigest::reset","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Reset hasher instance to its initial state.\n","sig":null,"attributes":[{"value":"/ Reset hasher instance to its initial state.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7727,"byte_end":7774,"line_start":21,"line_end":21,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7846,"byte_end":7857,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"output_size","qualname":"::dyn_digest::DynDigest::output_size","value":"fn (&self) -> usize","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Get output size of the hasher\n","sig":null,"attributes":[{"value":"/ Get output size of the hasher","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7805,"byte_end":7838,"line_start":24,"line_end":24,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7936,"byte_end":7945,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"box_clone","qualname":"::dyn_digest::DynDigest::box_clone","value":"fn (&self) -> Box<DynDigest>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Clone hasher state into a boxed trait object\n","sig":null,"attributes":[{"value":"/ Clone hasher state into a boxed trait object","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7880,"byte_end":7928,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":8904,"byte_end":8921,"line_start":7,"line_end":7,"column_start":12,"column_end":29},"name":"InvalidOutputSize","qualname":"::errors::InvalidOutputSize","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type for variable hasher initialization\n","sig":null,"attributes":[{"value":"/ The error type for variable hasher initialization","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":8800,"byte_end":8853,"line_start":5,"line_end":5,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":78},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1310,"byte_end":1315,"line_start":39,"line_end":39,"column_start":11,"column_end":16},"name":"Input","qualname":"::Input","value":"Input","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":81}],"decl_id":null,"docs":" Trait for processing input data\n","sig":null,"attributes":[{"value":"/ Trait for processing input data","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1264,"byte_end":1299,"line_start":38,"line_end":38,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1454,"byte_end":1459,"line_start":44,"line_end":44,"column_start":8,"column_end":13},"name":"input","qualname":"::Input::input","value":"fn <B> (&mut self, data: B) -> ()","parent":{"krate":0,"index":78},"children":[],"decl_id":null,"docs":" Digest input data.","sig":null,"attributes":[{"value":"/ Digest input data.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1322,"byte_end":1344,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1349,"byte_end":1352,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This method can be called repeatedly, e.g. for processing streaming","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1357,"byte_end":1428,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/ messages.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1433,"byte_end":1446,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1552,"byte_end":1557,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"chain","qualname":"::Input::chain","value":"fn <B> (mut self, data: B) -> Self","parent":{"krate":0,"index":78},"children":[],"decl_id":null,"docs":" Digest input data in a chained manner.\n","sig":null,"attributes":[{"value":"/ Digest input data in a chained manner.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1502,"byte_end":1544,"line_start":46,"line_end":46,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":83},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1847,"byte_end":1857,"line_start":57,"line_end":57,"column_start":11,"column_end":21},"name":"BlockInput","qualname":"::BlockInput","value":"BlockInput","parent":null,"children":[{"krate":0,"index":84}],"decl_id":null,"docs":" Trait to indicate that digest function processes data in blocks of size\n `BlockSize`.","sig":null,"attributes":[{"value":"/ Trait to indicate that digest function processes data in blocks of size","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1669,"byte_end":1744,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ `BlockSize`.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1745,"byte_end":1761,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1762,"byte_end":1765,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The main usage of this trait is for implementing HMAC generically.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1766,"byte_end":1836,"line_start":56,"line_end":56,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":84},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1869,"byte_end":1878,"line_start":58,"line_end":58,"column_start":10,"column_end":19},"name":"BlockSize","qualname":"::BlockInput::BlockSize","value":"type BlockSize: ArrayLength<u8>;","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1968,"byte_end":1979,"line_start":62,"line_end":62,"column_start":11,"column_end":22},"name":"FixedOutput","qualname":"::FixedOutput","value":"FixedOutput","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"decl_id":null,"docs":" Trait for returning digest result with the fixed size\n","sig":null,"attributes":[{"value":"/ Trait for returning digest result with the fixed size","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1900,"byte_end":1957,"line_start":61,"line_end":61,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":86},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1991,"byte_end":2001,"line_start":63,"line_end":63,"column_start":10,"column_end":20},"name":"OutputSize","qualname":"::FixedOutput::OutputSize","value":"type OutputSize: ArrayLength<u8>;","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2081,"byte_end":2093,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"fixed_result","qualname":"::FixedOutput::fixed_result","value":"fn (self) -> GenericArray<u8, Self::OutputSize>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Retrieve result and consume hasher instance.\n","sig":null,"attributes":[{"value":"/ Retrieve result and consume hasher instance.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2025,"byte_end":2073,"line_start":65,"line_end":65,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":88},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2213,"byte_end":2227,"line_start":70,"line_end":70,"column_start":11,"column_end":25},"name":"VariableOutput","qualname":"::VariableOutput","value":"VariableOutput: core::marker::Sized","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93}],"decl_id":null,"docs":" Trait for returning digest result with the variable size\n","sig":null,"attributes":[{"value":"/ Trait for returning digest result with the variable size","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2142,"byte_end":2202,"line_start":69,"line_end":69,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2511,"byte_end":2514,"line_start":76,"line_end":76,"column_start":8,"column_end":11},"name":"new","qualname":"::VariableOutput::new","value":"fn (output_size: usize) -> Result<Self, InvalidOutputSize>","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Create new hasher instance with the given output size.","sig":null,"attributes":[{"value":"/ Create new hasher instance with the given output size.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2255,"byte_end":2313,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2318,"byte_end":2321,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ It will return `Err(InvalidOutputSize)` in case if hasher can not return","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2326,"byte_end":2402,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ specified output size. It will always return an error if output size","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2407,"byte_end":2479,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ equals to zero.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2484,"byte_end":2503,"line_start":75,"line_end":75,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2655,"byte_end":2666,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"output_size","qualname":"::VariableOutput::output_size","value":"fn (&self) -> usize","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Get output size of the hasher instance provided to the `new` method\n","sig":null,"attributes":[{"value":"/ Get output size of the hasher instance provided to the `new` method","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2576,"byte_end":2647,"line_start":78,"line_end":78,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2874,"byte_end":2889,"line_start":85,"line_end":85,"column_start":8,"column_end":23},"name":"variable_result","qualname":"::VariableOutput::variable_result","value":"fn <F> (self, f: F) -> ()","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Retrieve result via closure and consume hasher.","sig":null,"attributes":[{"value":"/ Retrieve result via closure and consume hasher.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2689,"byte_end":2740,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2745,"byte_end":2748,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Closure is guaranteed to be called, length of the buffer passed to it","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2753,"byte_end":2826,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ will be equal to `output_size`.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2831,"byte_end":2866,"line_start":84,"line_end":84,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3013,"byte_end":3023,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"vec_result","qualname":"::VariableOutput::vec_result","value":"fn (self) -> Vec<u8>","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Retrieve result into vector and consume hasher.\n","sig":null,"attributes":[{"value":"/ Retrieve result into vector and consume hasher.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2926,"byte_end":2977,"line_start":87,"line_end":87,"column_start":5,"column_end":56}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2982,"byte_end":3005,"line_start":88,"line_end":88,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":95},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3327,"byte_end":3336,"line_start":98,"line_end":98,"column_start":11,"column_end":20},"name":"XofReader","qualname":"::XofReader","value":"XofReader","parent":null,"children":[{"krate":0,"index":96}],"decl_id":null,"docs":" Trait for describing readers which are used to extract extendable output\n from XOF (extendable-output function) result.\n","sig":null,"attributes":[{"value":"/ Trait for describing readers which are used to extract extendable output","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3190,"byte_end":3266,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ from XOF (extendable-output function) result.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3267,"byte_end":3316,"line_start":97,"line_end":97,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3426,"byte_end":3430,"line_start":100,"line_end":100,"column_start":8,"column_end":12},"name":"read","qualname":"::XofReader::read","value":"fn (&mut self, buffer: &mut [u8]) -> ()","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Read output into the `buffer`. Can be called unlimited number of times.\n","sig":null,"attributes":[{"value":"/ Read output into the `buffer`. Can be called unlimited number of times.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3343,"byte_end":3418,"line_start":99,"line_end":99,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3536,"byte_end":3552,"line_start":104,"line_end":104,"column_start":11,"column_end":27},"name":"ExtendableOutput","qualname":"::ExtendableOutput","value":"ExtendableOutput: core::marker::Sized","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" Trait which describes extendable-output functions (XOF).\n","sig":null,"attributes":[{"value":"/ Trait which describes extendable-output functions (XOF).","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3465,"byte_end":3525,"line_start":103,"line_end":103,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":98},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3585,"byte_end":3591,"line_start":105,"line_end":105,"column_start":10,"column_end":16},"name":"Reader","qualname":"::ExtendableOutput::Reader","value":"type Reader: XofReader;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3669,"byte_end":3679,"line_start":108,"line_end":108,"column_start":8,"column_end":18},"name":"xof_result","qualname":"::ExtendableOutput::xof_result","value":"fn (self) -> Self::Reader","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Retrieve XOF reader and consume hasher instance.\n","sig":null,"attributes":[{"value":"/ Retrieve XOF reader and consume hasher instance.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3609,"byte_end":3661,"line_start":107,"line_end":107,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3796,"byte_end":3806,"line_start":112,"line_end":112,"column_start":8,"column_end":18},"name":"vec_result","qualname":"::ExtendableOutput::vec_result","value":"fn (self, n: usize) -> Vec<u8>","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Retrieve result into vector of specified length.\n","sig":null,"attributes":[{"value":"/ Retrieve result into vector of specified length.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3708,"byte_end":3760,"line_start":110,"line_end":110,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3765,"byte_end":3788,"line_start":111,"line_end":111,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3984,"byte_end":3989,"line_start":120,"line_end":120,"column_start":11,"column_end":16},"name":"Reset","qualname":"::Reset","value":"Reset","parent":null,"children":[{"krate":0,"index":102}],"decl_id":null,"docs":" Trait for resetting hash instances\n","sig":null,"attributes":[{"value":"/ Trait for resetting hash instances","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3935,"byte_end":3973,"line_start":119,"line_end":119,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":4076,"byte_end":4081,"line_start":122,"line_end":122,"column_start":8,"column_end":13},"name":"reset","qualname":"::Reset::reset","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Reset hasher instance to its initial state and return current state.\n","sig":null,"attributes":[{"value":"/ Reset hasher instance to its initial state and return current state.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3996,"byte_end":4068,"line_start":121,"line_end":121,"column_start":5,"column_end":77}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":6220,"byte_end":6221,"line_start":48,"line_end":48,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":8044,"byte_end":8045,"line_start":31,"line_end":31,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":8663,"byte_end":8666,"line_start":59,"line_end":59,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":8946,"byte_end":8963,"line_start":9,"line_end":9,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":9123,"byte_end":9140,"line_start":16,"line_end":16,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":6220,"byte_end":6221,"line_start":48,"line_end":48,"column_start":67,"column_end":68},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":0,"index":19}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":8044,"byte_end":8045,"line_start":31,"line_end":31,"column_start":70,"column_end":71},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":59},"to":{"krate":0,"index":51}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":8663,"byte_end":8666,"line_start":59,"line_end":59,"column_start":16,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":7,"index":84},"to":{"krate":1,"index":1593}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":8946,"byte_end":8963,"line_start":9,"line_end":9,"column_start":23,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":104},"to":{"krate":1,"index":5983}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":9123,"byte_end":9140,"line_start":16,"line_end":16,"column_start":23,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":104},"to":{"krate":6,"index":1624}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2243,"byte_end":2248,"line_start":70,"line_end":70,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":1,"index":1888},"to":{"krate":0,"index":88}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3568,"byte_end":3573,"line_start":104,"line_end":104,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":1888},"to":{"krate":0,"index":97}}]}