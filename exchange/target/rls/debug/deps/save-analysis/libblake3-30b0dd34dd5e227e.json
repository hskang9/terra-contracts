{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4","program":"/Users/hyungsukkang/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","blake3","--edition=2018","/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=30b0dd34dd5e227e","-C","extra-filename=-30b0dd34dd5e227e","--out-dir","/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps","-L","dependency=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps","--extern","arrayref=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps/libarrayref-a2840686af0433e7.rmeta","--extern","arrayvec=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps/libarrayvec-54172c74a02c7a31.rmeta","--extern","cfg_if=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps/libcfg_if-224cafc4b959bbef.rmeta","--extern","constant_time_eq=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps/libconstant_time_eq-693356d7a77464eb.rmeta","--extern","crypto_mac=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps/libcrypto_mac-bbd9273c5522b676.rmeta","--extern","digest=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps/libdigest-2270912682d2bc2d.rmeta","--cap-lints","allow","-L","native=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/build/blake3-51a57364488b60cc/out","-L","native=/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/build/blake3-51a57364488b60cc/out","--cfg","blake3_sse41_ffi","--cfg","blake3_avx2_ffi","--cfg","blake3_avx512_ffi","-l","static=blake3_sse41_avx2_assembly","-l","static=blake3_avx512_assembly","--error-format=json","--sysroot","/Users/hyungsukkang/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/hyungsukkang/uniswapv1/exchange/target/rls/debug/deps/libblake3-30b0dd34dd5e227e.rmeta"},"prelude":{"crate_id":{"name":"blake3","disambiguator":[9449120456072607599,17586805545141120418]},"crate_root":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src","external_crates":[{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12669636623235690034,8759211680751900309]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5693088722327716739,2147858288623464010]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15524063101320593432,10022011492683157993]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14556973752653035032,10499433159243229334]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1934112228416746928,18062520869078565162]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18272308394612376465,2983342869845535113]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7982440001281678496,5082264322901945876]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17333179571007866912,15310387900280001912]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17767206385810259554,6284392829264960128]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[6917085151040958166,7936695879549379973]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14883612992525439991,13188753928230923968]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8362867231865330830,11957228790523419708]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13374155178358367403,7714447127929209529]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7401024017757537210,13419518921059338139]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","num":15,"id":{"name":"arrayref","disambiguator":[3092053588204099571,17683285733770302437]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","num":16,"id":{"name":"crypto_mac","disambiguator":[17041034360055389213,2166021242530823111]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","num":17,"id":{"name":"subtle","disambiguator":[6576850520393894183,18339371071128514422]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","num":18,"id":{"name":"generic_array","disambiguator":[6524170118306894397,17302580365150100100]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","num":19,"id":{"name":"typenum","disambiguator":[17692424399484018721,470952353816787855]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","num":20,"id":{"name":"digest","disambiguator":[11532930736329595461,16706684304467549847]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":21,"id":{"name":"arrayvec","disambiguator":[10943001904355573668,5489201063570340406]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","num":22,"id":{"name":"cfg_if","disambiguator":[15580027271366134485,15844587480422000058]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","num":23,"id":{"name":"constant_time_eq","disambiguator":[18373732218413764301,7058900501769302434]}}],"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":0,"byte_end":53176,"line_start":1,"line_end":1344,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":0},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83209,"byte_end":83219,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"alias_span":null,"name":"crypto_mac","value":"","parent":{"krate":0,"index":132}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83229,"byte_end":83235,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"alias_span":null,"name":"digest","value":"","parent":{"krate":0,"index":132}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":0,"byte_end":53176,"line_start":1,"line_end":1344,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":52},{"krate":0,"index":63},{"krate":0,"index":82},{"krate":0,"index":113},{"krate":0,"index":132},{"krate":0,"index":166},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":538},{"krate":0,"index":546},{"krate":0,"index":545},{"krate":0,"index":542},{"krate":0,"index":217},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":549},{"krate":0,"index":557},{"krate":0,"index":238},{"krate":0,"index":559},{"krate":0,"index":568},{"krate":0,"index":243},{"krate":0,"index":252},{"krate":0,"index":574},{"krate":0,"index":580},{"krate":0,"index":579},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":269},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":598},{"krate":0,"index":603},{"krate":0,"index":281},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":303},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313}],"decl_id":null,"docs":" The official Rust implementation of the [BLAKE3] cryptographic hash\n function.","sig":null,"attributes":[{"value":"! The official Rust implementation of the [BLAKE3] cryptographic hash","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"! function.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":72,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":90,"byte_end":104,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":105,"byte_end":108,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":109,"byte_end":116,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":117,"byte_end":176,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"! // Hash an input all at once.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":177,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":34}},{"value":"! let hash1 = blake3::hash(b\"foobarbaz\");","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":211,"byte_end":254,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":255,"byte_end":258,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! // Hash an input incrementally.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":259,"byte_end":294,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"! let mut hasher = blake3::Hasher::new();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":295,"byte_end":338,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"! hasher.update(b\"foo\");","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":339,"byte_end":365,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"! hasher.update(b\"bar\");","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":366,"byte_end":392,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"! hasher.update(b\"baz\");","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":393,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"! let hash2 = hasher.finalize();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":420,"byte_end":454,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"! assert_eq!(hash1, hash2);","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":455,"byte_end":484,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":485,"byte_end":488,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":489,"byte_end":556,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! # #[cfg(feature = \"std\")] {","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":557,"byte_end":588,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"! let mut output = [0; 1000];","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":589,"byte_end":620,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"! let mut output_reader = hasher.finalize_xof();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":621,"byte_end":671,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"! output_reader.fill(&mut output);","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":672,"byte_end":708,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"! assert_eq!(&output[..32], hash1.as_bytes());","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":709,"byte_end":757,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"! # }","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":758,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"! # Ok(())","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":766,"byte_end":778,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":779,"byte_end":786,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":787,"byte_end":794,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":795,"byte_end":798,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! # Cargo Features","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":799,"byte_end":819,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":820,"byte_end":823,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! The `rayon` feature provides [Rayon]-based multi-threading, in particular","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":824,"byte_end":901,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"! the [`join::RayonJoin`] type for use with [`Hasher::update_with_join`]. It","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":902,"byte_end":980,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"! is disabled by default, but enabled for [docs.rs].","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":981,"byte_end":1035,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1036,"byte_end":1039,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! The `neon` feature enables ARM NEON support. Currently there is no runtime","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1040,"byte_end":1118,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"! CPU feature detection for NEON, so you must only enable this feature for","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1119,"byte_end":1195,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"! targets that are known to have NEON support. In particular, some ARMv7","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1196,"byte_end":1270,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! targets support NEON, and some don't.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1271,"byte_end":1312,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1313,"byte_end":1316,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! The `std` feature (enabled by default) is required for implementations of","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1317,"byte_end":1394,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"! the [`Write`] and [`Seek`] traits, and also for runtime CPU feature","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1395,"byte_end":1466,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"! detection. If this feature is disabled, the only way to use the SIMD","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1467,"byte_end":1539,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"! implementations in this crate is to enable the corresponding instruction","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1540,"byte_end":1616,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"! sets statically for the entire build, with e.g. `RUSTFLAGS=\"-C","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1617,"byte_end":1683,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"! target-cpu=native\"`. The resulting binary will not be portable to machines.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1684,"byte_end":1763,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1764,"byte_end":1767,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! [BLAKE3]: https://blake3.io","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1768,"byte_end":1799,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"! [Rayon]: https://github.com/rayon-rs/rayon","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1800,"byte_end":1846,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"! [`join::RayonJoin`]: join/enum.RayonJoin.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1847,"byte_end":1896,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"! [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1897,"byte_end":1973,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"! [docs.rs]: https://docs.rs/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":1974,"byte_end":2005,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"! [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":2006,"byte_end":2070,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"! [`Seek`]: https://doc.rust-lang.org/std/io/trait.Seek.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":2071,"byte_end":2133,"line_start":54,"line_end":54,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"guts","qualname":"::guts","value":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":320},{"krate":0,"index":318},{"krate":0,"index":4},{"krate":0,"index":9}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":315},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":53462,"byte_end":53472,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"ChunkState","qualname":"::guts::ChunkState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":53666,"byte_end":53669,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<ChunkState>::new","value":"fn (chunk_counter: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":53894,"byte_end":53897,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"len","qualname":"<ChunkState>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":53873,"byte_end":53882,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":53969,"byte_end":53975,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"update","qualname":"<ChunkState>::update","value":"fn (&mut self, input: &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":53948,"byte_end":53957,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":54077,"byte_end":54085,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ChunkState>::finalize","value":"fn (&self, is_root: bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":54435,"byte_end":54444,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"parent_cv","qualname":"::guts::parent_cv","value":"fn (left_child: &crate::Hash, right_child: &crate::Hash, is_root: bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"platform","qualname":"::platform","value":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":16},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":336},{"krate":0,"index":335},{"krate":0,"index":333},{"krate":0,"index":19},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":48}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":322},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":55999,"byte_end":56014,"line_start":8,"line_end":8,"column_start":27,"column_end":42},"name":"MAX_SIMD_DEGREE","qualname":"::platform::MAX_SIMD_DEGREE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":323},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":56741,"byte_end":56761,"line_start":28,"line_end":28,"column_start":27,"column_end":47},"name":"MAX_SIMD_DEGREE_OR_2","qualname":"::platform::MAX_SIMD_DEGREE_OR_2","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":325},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57098,"byte_end":57106,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Portable","qualname":"::platform::Platform::Portable","value":"Platform::Portable","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":327},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57173,"byte_end":57178,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"SSE41","qualname":"::platform::Platform::SSE41","value":"Platform::SSE41","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57112,"byte_end":57168,"line_start":43,"line_end":43,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57245,"byte_end":57249,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"AVX2","qualname":"::platform::Platform::AVX2","value":"Platform::AVX2","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57184,"byte_end":57240,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57346,"byte_end":57352,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"AVX512","qualname":"::platform::Platform::AVX512","value":"Platform::AVX512","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57255,"byte_end":57280,"line_start":47,"line_end":47,"column_start":5,"column_end":30}},{"value":"cfg(any (target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57285,"byte_end":57341,"line_start":48,"line_end":48,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":324},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57083,"byte_end":57091,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"Platform","qualname":"::platform::Platform","value":"Platform::{Portable, SSE41, AVX2, AVX512}","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57454,"byte_end":57460,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"detect","qualname":"<Platform>::detect","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unreachable_code)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57416,"byte_end":57442,"line_start":55,"line_end":55,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":58166,"byte_end":58177,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"simd_degree","qualname":"<Platform>::simd_degree","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":58779,"byte_end":58796,"line_start":98,"line_end":98,"column_start":12,"column_end":29},"name":"compress_in_place","qualname":"<Platform>::compress_in_place","value":"fn (&self, cv: &mut CVWords, block: &[u8; BLOCK_LEN], block_len: u8, counter: u64, flags: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":59902,"byte_end":59914,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"compress_xof","qualname":"<Platform>::compress_xof","value":"fn (&self, cv: &CVWords, block: &[u8; BLOCK_LEN], block_len: u8, counter: u64, flags: u8) -> [u8; 64]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":61568,"byte_end":61577,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"hash_many","qualname":"<Platform>::hash_many","value":"fn <A> (&self, inputs: &[&A], key: &CVWords, counter: u64, increment_counter: IncrementCounter, flags: u8, flags_start: u8, flags_end: u8, out: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":64165,"byte_end":64173,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"portable","qualname":"<Platform>::portable","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":64288,"byte_end":64293,"line_start":251,"line_end":251,"column_start":12,"column_end":17},"name":"sse41","qualname":"<Platform>::sse41","value":"fn () -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":64220,"byte_end":64276,"line_start":250,"line_end":250,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":64497,"byte_end":64501,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"avx2","qualname":"<Platform>::avx2","value":"fn () -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":64429,"byte_end":64485,"line_start":259,"line_end":259,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":64733,"byte_end":64739,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"avx512","qualname":"<Platform>::avx512","value":"fn () -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":64635,"byte_end":64660,"line_start":268,"line_end":268,"column_start":5,"column_end":30}},{"value":"cfg(any (target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":64665,"byte_end":64721,"line_start":269,"line_end":269,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":65235,"byte_end":65250,"line_start":290,"line_end":290,"column_start":8,"column_end":23},"name":"avx512_detected","qualname":"::platform::avx512_detected","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":65127,"byte_end":65152,"line_start":287,"line_end":287,"column_start":1,"column_end":26}},{"value":"cfg(any (target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":65153,"byte_end":65209,"line_start":288,"line_end":288,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":65210,"byte_end":65227,"line_start":289,"line_end":289,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":65834,"byte_end":65847,"line_start":312,"line_end":312,"column_start":8,"column_end":21},"name":"avx2_detected","qualname":"::platform::avx2_detected","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":65752,"byte_end":65808,"line_start":310,"line_end":310,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":65809,"byte_end":65826,"line_start":311,"line_end":311,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":66349,"byte_end":66363,"line_start":334,"line_end":334,"column_start":8,"column_end":22},"name":"sse41_detected","qualname":"::platform::sse41_detected","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any (target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":66267,"byte_end":66323,"line_start":332,"line_end":332,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":66324,"byte_end":66341,"line_start":333,"line_end":333,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":66813,"byte_end":66835,"line_start":355,"line_end":355,"column_start":8,"column_end":30},"name":"words_from_le_bytes_32","qualname":"::platform::words_from_le_bytes_32","value":"fn (bytes: &[u8; 32]) -> [u32; 8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":66788,"byte_end":66805,"line_start":354,"line_end":354,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":67434,"byte_end":67456,"line_start":369,"line_end":369,"column_start":8,"column_end":30},"name":"words_from_le_bytes_64","qualname":"::platform::words_from_le_bytes_64","value":"fn (bytes: &[u8; 64]) -> [u32; 16]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":67409,"byte_end":67426,"line_start":368,"line_end":368,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":68573,"byte_end":68595,"line_start":391,"line_end":391,"column_start":8,"column_end":30},"name":"le_bytes_from_words_32","qualname":"::platform::le_bytes_from_words_32","value":"fn (words: &[u32; 8]) -> [u8; 32]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":68548,"byte_end":68565,"line_start":390,"line_end":390,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":69179,"byte_end":69201,"line_start":405,"line_end":405,"column_start":8,"column_end":30},"name":"le_bytes_from_words_64","qualname":"::platform::le_bytes_from_words_64","value":"fn (words: &[u32; 16]) -> [u8; 64]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":69154,"byte_end":69171,"line_start":404,"line_end":404,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":132},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":158}],"decl_id":null,"docs":" Implementations of commonly used traits like\n [`digest::Digest`](https://crates.io/crates/digest) and\n [`crypto_mac::Mac`](https://crates.io/crates/crypto-mac).\n","sig":null,"attributes":[{"value":"! Implementations of commonly used traits like","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83029,"byte_end":83077,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"! [`digest::Digest`](https://crates.io/crates/digest) and","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83078,"byte_end":83137,"line_start":2,"line_end":2,"column_start":1,"column_end":60}},{"value":"! [`crypto_mac::Mac`](https://crates.io/crates/crypto-mac).","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83138,"byte_end":83199,"line_start":3,"line_end":3,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":166},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"join","qualname":"::join","value":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" The multi-threading abstractions used by [`Hasher::update_with_join`].","sig":null,"attributes":[{"value":"! The multi-threading abstractions used by [`Hasher::update_with_join`].","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":86716,"byte_end":86790,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":86791,"byte_end":86794,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Different implementations of the `Join` trait determine whether","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":86795,"byte_end":86862,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"! [`Hasher::update_with_join`] performs multi-threading on sufficiently large","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":86863,"byte_end":86942,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! inputs. The `SerialJoin` implementation is single-threaded, and the","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":86943,"byte_end":87014,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! `RayonJoin` implementation (gated by the `rayon` feature) is","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87015,"byte_end":87079,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"! multi-threaded. Interfaces other than [`Hasher::update_with_join`], like","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87080,"byte_end":87156,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"! [`hash`] and [`Hasher::update`], always use `SerialJoin` internally.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87157,"byte_end":87229,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87230,"byte_end":87233,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The `Join` trait is an almost exact copy of the [`rayon::join`] API, and","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87234,"byte_end":87310,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"! `RayonJoin` is the only non-trivial implementation provided. The only","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87311,"byte_end":87384,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"! difference between the function signature in the `Join` trait and the","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87385,"byte_end":87458,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"! underlying one in Rayon, is that the trait method includes two length","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87459,"byte_end":87532,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! parameters. This gives an implementation the option of e.g. setting a","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87533,"byte_end":87606,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! subtree size threshold below which it keeps splits on the same thread.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87607,"byte_end":87681,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"! However, neither of the two provided implementations currently makes use of","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87682,"byte_end":87761,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"! those parameters. Note that in Rayon, the very first `join` call is more","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87762,"byte_end":87838,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"! expensive than subsequent calls, because it moves work from the calling","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87839,"byte_end":87914,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"! thread into the thread pool. That makes a coarse-grained input length","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87915,"byte_end":87988,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"! threshold in the caller more effective than a fine-grained subtree size","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":87989,"byte_end":88064,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"! threshold after the implementation has already started recursing.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88065,"byte_end":88134,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88135,"byte_end":88138,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88139,"byte_end":88152,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88153,"byte_end":88156,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88157,"byte_end":88164,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"! // Hash a large input using multi-threading. Note that multi-threading","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88165,"byte_end":88239,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"! // comes with some overhead, and it can actually hurt performance for small","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88240,"byte_end":88319,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"! // inputs. The meaning of \"small\" varies, however, depending on the","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88320,"byte_end":88391,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"! // platform and the number of threads. (On x86_64, the cutoff tends to be","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88392,"byte_end":88469,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! // around 128 KiB.) You should benchmark your own use case to see whether","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88470,"byte_end":88547,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"! // multi-threading helps.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88548,"byte_end":88577,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"! # #[cfg(feature = \"rayon\")]","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88578,"byte_end":88609,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"! # {","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88610,"byte_end":88617,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! # fn some_large_input() -> &'static [u8] { b\"foo\" }","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88618,"byte_end":88673,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"! let input: &[u8] = some_large_input();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88674,"byte_end":88716,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"! let mut hasher = blake3::Hasher::new();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88717,"byte_end":88760,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"! hasher.update_with_join::<blake3::join::RayonJoin>(input);","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88761,"byte_end":88823,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"! let hash = hasher.finalize();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88824,"byte_end":88857,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88858,"byte_end":88865,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88866,"byte_end":88873,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88874,"byte_end":88877,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! [`Hasher::update_with_join`]: ../struct.Hasher.html#method.update_with_join","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88878,"byte_end":88957,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! [`Hasher::update`]: ../struct.Hasher.html#method.update","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":88958,"byte_end":89017,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"! [`hash`]: ../fn.hash.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89018,"byte_end":89047,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"! [`rayon::join`]: https://docs.rs/rayon/1.3.0/rayon/fn.join.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89048,"byte_end":89115,"line_start":45,"line_end":45,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89274,"byte_end":89278,"line_start":50,"line_end":50,"column_start":11,"column_end":15},"name":"Join","qualname":"::join::Join","value":"Join","parent":null,"children":[{"krate":0,"index":168}],"decl_id":null,"docs":" The trait that abstracts over single-threaded and multi-threaded recursion.","sig":null,"attributes":[{"value":"/ The trait that abstracts over single-threaded and multi-threaded recursion.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89117,"byte_end":89196,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89197,"byte_end":89200,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ See the [`join` module docs](index.html) for more details.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89201,"byte_end":89263,"line_start":49,"line_end":49,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89288,"byte_end":89292,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"join","qualname":"::join::Join::join","value":"fn <A, B, RA, RB> (oper_a: A, oper_b: B, len_a: usize, len_b: usize) -> (RA, RB)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":173},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89807,"byte_end":89817,"line_start":65,"line_end":65,"column_start":10,"column_end":20},"name":"SerialJoin","qualname":"::join::SerialJoin","value":"SerialJoin::{}","parent":null,"children":[],"decl_id":null,"docs":" The trivial, serial implementation of `Join`. The left and right sides are\n executed one after the other, on the calling thread. The standalone hashing\n functions and the `Hasher::update` method use this implementation\n internally.","sig":null,"attributes":[{"value":"/ The trivial, serial implementation of `Join`. The left and right sides are","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89486,"byte_end":89564,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed one after the other, on the calling thread. The standalone hashing","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89565,"byte_end":89644,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ functions and the `Hasher::update` method use this implementation","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89645,"byte_end":89714,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ internally.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89715,"byte_end":89730,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89731,"byte_end":89734,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ See the [`join` module docs](index.html) for more details.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89735,"byte_end":89797,"line_start":64,"line_end":64,"column_start":1,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":3400,"byte_end":3407,"line_start":106,"line_end":106,"column_start":11,"column_end":18},"name":"OUT_LEN","qualname":"::OUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a [`Hash`](struct.Hash.html), 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a [`Hash`](struct.Hash.html), 32.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":3329,"byte_end":3389,"line_start":105,"line_end":105,"column_start":1,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":3470,"byte_end":3477,"line_start":109,"line_end":109,"column_start":11,"column_end":18},"name":"KEY_LEN","qualname":"::KEY_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a key, 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a key, 32.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":3422,"byte_end":3459,"line_start":108,"line_end":108,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":3653,"byte_end":3662,"line_start":114,"line_end":114,"column_start":11,"column_end":20},"name":"BLOCK_LEN","qualname":"::BLOCK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":3701,"byte_end":3710,"line_start":116,"line_end":116,"column_start":11,"column_end":20},"name":"CHUNK_LEN","qualname":"::CHUNK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":3751,"byte_end":3760,"line_start":118,"line_end":118,"column_start":11,"column_end":20},"name":"MAX_DEPTH","qualname":"::MAX_DEPTH","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":538},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7034,"byte_end":7038,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"Hash","qualname":"::Hash","value":"","parent":null,"children":[],"decl_id":null,"docs":" An output of the default size, 32 bytes, which provides constant-time\n equality checking.","sig":null,"attributes":[{"value":"/ An output of the default size, 32 bytes, which provides constant-time","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5436,"byte_end":5509,"line_start":164,"line_end":164,"column_start":1,"column_end":74}},{"value":"/ equality checking.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5510,"byte_end":5532,"line_start":165,"line_end":165,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5533,"byte_end":5536,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ `Hash` implements [`From`] and [`Into`] for `[u8; 32]`, and it provides an","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5537,"byte_end":5615,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/ explicit [`as_bytes`] method returning `&[u8; 32]`. However, byte arrays","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5616,"byte_end":5692,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ and slices don't provide constant-time equality checking, which is often a","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5693,"byte_end":5771,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ security requirement in software that handles private data. `Hash` doesn't","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5772,"byte_end":5850,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ implement [`Deref`] or [`AsRef`], to avoid situations where a type","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5851,"byte_end":5921,"line_start":171,"line_end":171,"column_start":1,"column_end":71}},{"value":"/ conversion happens implicitly and the constant-time property is","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5922,"byte_end":5989,"line_start":172,"line_end":172,"column_start":1,"column_end":68}},{"value":"/ accidentally lost.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":5990,"byte_end":6012,"line_start":173,"line_end":173,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6013,"byte_end":6016,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ `Hash` provides the [`to_hex`] method for converting to hexadecimal. It","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6017,"byte_end":6092,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ doesn't directly support converting from hexadecimal, but here's an example","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6093,"byte_end":6172,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ of doing that with the [`hex`] crate:","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6173,"byte_end":6214,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6215,"byte_end":6218,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6219,"byte_end":6226,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6227,"byte_end":6286,"line_start":180,"line_end":180,"column_start":1,"column_end":60}},{"value":"/ use std::convert::TryInto;","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6287,"byte_end":6317,"line_start":181,"line_end":181,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6318,"byte_end":6321,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ let hash_hex = \"d74981efa70a0c880b8d8c1985d075dbcbf679b99a5f9914e5aaf96b831a9e24\";","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6322,"byte_end":6408,"line_start":183,"line_end":183,"column_start":1,"column_end":87}},{"value":"/ let hash_bytes = hex::decode(hash_hex)?;","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6409,"byte_end":6453,"line_start":184,"line_end":184,"column_start":1,"column_end":45}},{"value":"/ let hash_array: [u8; blake3::OUT_LEN] = hash_bytes[..].try_into()?;","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6454,"byte_end":6525,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"/ let hash: blake3::Hash = hash_array.into();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6526,"byte_end":6573,"line_start":186,"line_end":186,"column_start":1,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6574,"byte_end":6586,"line_start":187,"line_end":187,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6587,"byte_end":6594,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6595,"byte_end":6602,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6603,"byte_end":6606,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`From`]: https://doc.rust-lang.org/std/convert/trait.From.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6607,"byte_end":6674,"line_start":191,"line_end":191,"column_start":1,"column_end":68}},{"value":"/ [`Into`]: https://doc.rust-lang.org/std/convert/trait.Into.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6675,"byte_end":6742,"line_start":192,"line_end":192,"column_start":1,"column_end":68}},{"value":"/ [`as_bytes`]: #method.as_bytes","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6743,"byte_end":6777,"line_start":193,"line_end":193,"column_start":1,"column_end":35}},{"value":"/ [`Deref`]: https://doc.rust-lang.org/stable/std/ops/trait.Deref.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6778,"byte_end":6850,"line_start":194,"line_end":194,"column_start":1,"column_end":73}},{"value":"/ [`AsRef`]: https://doc.rust-lang.org/std/convert/trait.AsRef.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6851,"byte_end":6920,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ [`to_hex`]: #method.to_hex","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6921,"byte_end":6951,"line_start":196,"line_end":196,"column_start":1,"column_end":31}},{"value":"/ [`hex`]: https://crates.io/crates/hex","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":6952,"byte_end":6993,"line_start":197,"line_end":197,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7270,"byte_end":7278,"line_start":206,"line_end":206,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash>::as_bytes","value":"fn (&self) -> &[u8; OUT_LEN]","parent":null,"children":[],"decl_id":null,"docs":" The bytes of the `Hash`. Note that byte arrays don't provide\n constant-time equality checking, so if  you need to compare hashes,\n prefer the `Hash` type.\n","sig":null,"attributes":[{"value":"/ The bytes of the `Hash`. Note that byte arrays don't provide","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7072,"byte_end":7136,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ constant-time equality checking, so if  you need to compare hashes,","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7141,"byte_end":7212,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/ prefer the `Hash` type.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7217,"byte_end":7244,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7249,"byte_end":7258,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7728,"byte_end":7734,"line_start":216,"line_end":216,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Hash>::to_hex","value":"fn (&self) -> ArrayString<[u8; 2 * OUT_LEN]>","parent":null,"children":[],"decl_id":null,"docs":" The hexadecimal encoding of the `Hash`. The returned [`ArrayString`] is\n a fixed size and doesn't allocate memory on the heap. Note that\n [`ArrayString`] doesn't provide constant-time equality checking, so if\n you need to compare hashes, prefer the `Hash` type.","sig":null,"attributes":[{"value":"/ The hexadecimal encoding of the `Hash`. The returned [`ArrayString`] is","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7333,"byte_end":7408,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ a fixed size and doesn't allocate memory on the heap. Note that","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7413,"byte_end":7480,"line_start":211,"line_end":211,"column_start":5,"column_end":72}},{"value":"/ [`ArrayString`] doesn't provide constant-time equality checking, so if","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7485,"byte_end":7559,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ you need to compare hashes, prefer the `Hash` type.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7564,"byte_end":7619,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7624,"byte_end":7627,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`ArrayString`]: https://docs.rs/arrayvec/0.5.1/arrayvec/struct.ArrayString.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7632,"byte_end":7716,"line_start":215,"line_end":215,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":14381,"byte_end":14384,"line_start":441,"line_end":441,"column_start":5,"column_end":8},"name":"Yes","qualname":"::IncrementCounter::Yes","value":"IncrementCounter::Yes","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":14390,"byte_end":14392,"line_start":442,"line_end":442,"column_start":5,"column_end":7},"name":"No","qualname":"::IncrementCounter::No","value":"IncrementCounter::No","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":574},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":14358,"byte_end":14374,"line_start":440,"line_end":440,"column_start":10,"column_end":26},"name":"IncrementCounter","qualname":"::IncrementCounter","value":"IncrementCounter::{Yes, No}","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":577}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":275},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25367,"byte_end":25371,"line_start":713,"line_end":713,"column_start":8,"column_end":12},"name":"hash","qualname":"::hash","value":"fn (input: &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The default hash function.","sig":null,"attributes":[{"value":"/ The default hash function.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":24986,"byte_end":25016,"line_start":704,"line_end":704,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25017,"byte_end":25020,"line_start":705,"line_end":705,"column_start":1,"column_end":4}},{"value":"/ For an incremental version that accepts multiple writes, see [`Hasher::update`].","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25021,"byte_end":25105,"line_start":706,"line_end":706,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25106,"byte_end":25109,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multi-threading support, see","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25110,"byte_end":25187,"line_start":708,"line_end":708,"column_start":1,"column_end":78}},{"value":"/ [`Hasher::update_with_join`].","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25188,"byte_end":25221,"line_start":709,"line_end":709,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25222,"byte_end":25225,"line_start":710,"line_end":710,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::update`]: struct.Hasher.html#method.update","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25226,"byte_end":25282,"line_start":711,"line_end":711,"column_start":1,"column_end":57}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25283,"byte_end":25359,"line_start":712,"line_end":712,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26003,"byte_end":26013,"line_start":729,"line_end":729,"column_start":8,"column_end":18},"name":"keyed_hash","qualname":"::keyed_hash","value":"fn (key: &[u8; KEY_LEN], input: &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The keyed hash function.","sig":null,"attributes":[{"value":"/ The keyed hash function.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25446,"byte_end":25474,"line_start":717,"line_end":717,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25475,"byte_end":25478,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ This is suitable for use as a message authentication code, for","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25479,"byte_end":25545,"line_start":719,"line_end":719,"column_start":1,"column_end":67}},{"value":"/ example to replace an HMAC instance.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25546,"byte_end":25586,"line_start":720,"line_end":720,"column_start":1,"column_end":41}},{"value":"/  In that use case, the constant-time equality checking provided by","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25587,"byte_end":25657,"line_start":721,"line_end":721,"column_start":1,"column_end":71}},{"value":"/ [`Hash`](struct.Hash.html) is almost always a security requirement, and","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25658,"byte_end":25733,"line_start":722,"line_end":722,"column_start":1,"column_end":76}},{"value":"/ callers need to be careful not to compare MACs as raw bytes.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25734,"byte_end":25798,"line_start":723,"line_end":723,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25799,"byte_end":25802,"line_start":724,"line_end":724,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multi-threading support, see","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25803,"byte_end":25880,"line_start":725,"line_end":725,"column_start":1,"column_end":78}},{"value":"/ [`Hasher::update_with_join`].","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25881,"byte_end":25914,"line_start":726,"line_end":726,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25915,"byte_end":25918,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":25919,"byte_end":25995,"line_start":728,"line_end":728,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":28119,"byte_end":28129,"line_start":767,"line_end":767,"column_start":8,"column_end":18},"name":"derive_key","qualname":"::derive_key","value":"fn (context: &str, key_material: &[u8], output: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The key derivation function.","sig":null,"attributes":[{"value":"/ The key derivation function.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26185,"byte_end":26217,"line_start":734,"line_end":734,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26218,"byte_end":26221,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ Given cryptographic key material of any length and a context string of any","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26222,"byte_end":26300,"line_start":736,"line_end":736,"column_start":1,"column_end":79}},{"value":"/ length, this function outputs a derived subkey of any length. **The context","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26301,"byte_end":26380,"line_start":737,"line_end":737,"column_start":1,"column_end":80}},{"value":"/ string should be hardcoded, globally unique, and application-specific.** A","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26381,"byte_end":26459,"line_start":738,"line_end":738,"column_start":1,"column_end":79}},{"value":"/ good default format for such strings is `\"[application] [commit timestamp]","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26460,"byte_end":26538,"line_start":739,"line_end":739,"column_start":1,"column_end":79}},{"value":"/ [purpose]\"`, e.g., `\"example.com 2019-12-25 16:18:03 session tokens v1\"`.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26539,"byte_end":26616,"line_start":740,"line_end":740,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26617,"byte_end":26620,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ Key derivation is important when you want to use the same key in multiple","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26621,"byte_end":26698,"line_start":742,"line_end":742,"column_start":1,"column_end":78}},{"value":"/ algorithms or use cases. Using the same key with different cryptographic","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26699,"byte_end":26775,"line_start":743,"line_end":743,"column_start":1,"column_end":77}},{"value":"/ algorithms is generally forbidden, and deriving a separate subkey for each","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26776,"byte_end":26854,"line_start":744,"line_end":744,"column_start":1,"column_end":79}},{"value":"/ use case protects you from bad interactions. Derived keys also mitigate the","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26855,"byte_end":26934,"line_start":745,"line_end":745,"column_start":1,"column_end":80}},{"value":"/ damage from one part of your application accidentally leaking its key.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":26935,"byte_end":27009,"line_start":746,"line_end":746,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27010,"byte_end":27013,"line_start":747,"line_end":747,"column_start":1,"column_end":4}},{"value":"/ As a rare exception to that general rule, however, it is possible to use","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27014,"byte_end":27090,"line_start":748,"line_end":748,"column_start":1,"column_end":77}},{"value":"/ `derive_key` itself with key material that you are already using with","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27091,"byte_end":27164,"line_start":749,"line_end":749,"column_start":1,"column_end":74}},{"value":"/ another algorithm. You might need to do this if you're adding features to","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27165,"byte_end":27242,"line_start":750,"line_end":750,"column_start":1,"column_end":78}},{"value":"/ an existing application, which does not yet use key derivation internally.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27243,"byte_end":27321,"line_start":751,"line_end":751,"column_start":1,"column_end":79}},{"value":"/ However, you still must not share key material with algorithms that forbid","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27322,"byte_end":27400,"line_start":752,"line_end":752,"column_start":1,"column_end":79}},{"value":"/ key reuse entirely, like a one-time pad.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27401,"byte_end":27445,"line_start":753,"line_end":753,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27446,"byte_end":27449,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ Note that BLAKE3 is not a password hash, and **`derive_key` should never be","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27450,"byte_end":27529,"line_start":755,"line_end":755,"column_start":1,"column_end":80}},{"value":"/ used with passwords.** Instead, use a dedicated password hash like","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27530,"byte_end":27600,"line_start":756,"line_end":756,"column_start":1,"column_end":71}},{"value":"/ [Argon2]. Password hashes are entirely different from generic hash","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27601,"byte_end":27671,"line_start":757,"line_end":757,"column_start":1,"column_end":71}},{"value":"/ functions, with opposite design requirements.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27672,"byte_end":27721,"line_start":758,"line_end":758,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27722,"byte_end":27725,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multi-threading support, see","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27726,"byte_end":27803,"line_start":760,"line_end":760,"column_start":1,"column_end":78}},{"value":"/ [`Hasher::update_with_join`].","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27804,"byte_end":27837,"line_start":761,"line_end":761,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27838,"byte_end":27841,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::new_derive_key`]: struct.Hasher.html#method.new_derive_key","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27842,"byte_end":27914,"line_start":763,"line_end":763,"column_start":1,"column_end":73}},{"value":"/ [`Hasher::finalize_xof`]: struct.Hasher.html#method.finalize_xof","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27915,"byte_end":27983,"line_start":764,"line_end":764,"column_start":1,"column_end":69}},{"value":"/ [Argon2]: https://en.wikipedia.org/wiki/Argon2","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":27984,"byte_end":28034,"line_start":765,"line_end":765,"column_start":1,"column_end":51}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":28035,"byte_end":28111,"line_start":766,"line_end":766,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":598},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30285,"byte_end":30291,"line_start":830,"line_end":830,"column_start":12,"column_end":18},"name":"Hasher","qualname":"::Hasher","value":"Hasher {  }","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" An incremental hash state that can accept any number of writes.","sig":null,"attributes":[{"value":"/ An incremental hash state that can accept any number of writes.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":28971,"byte_end":29038,"line_start":794,"line_end":794,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29039,"byte_end":29042,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ In addition to its inherent methods, this type implements several commonly","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29043,"byte_end":29121,"line_start":796,"line_end":796,"column_start":1,"column_end":79}},{"value":"/ used traits from the [`digest`](https://crates.io/crates/digest) and","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29122,"byte_end":29194,"line_start":797,"line_end":797,"column_start":1,"column_end":73}},{"value":"/ [`crypto_mac`](https://crates.io/crates/crypto-mac) crates.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29195,"byte_end":29258,"line_start":798,"line_end":798,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29259,"byte_end":29262,"line_start":799,"line_end":799,"column_start":1,"column_end":4}},{"value":"/ **Performance note:** The [`update`] and [`update_with_join`] methods","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29263,"byte_end":29336,"line_start":800,"line_end":800,"column_start":1,"column_end":74}},{"value":"/ perform poorly when the caller's input buffer is small. See their method","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29337,"byte_end":29413,"line_start":801,"line_end":801,"column_start":1,"column_end":77}},{"value":"/ docs below. A 16 KiB buffer is large enough to leverage all currently","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29414,"byte_end":29487,"line_start":802,"line_end":802,"column_start":1,"column_end":74}},{"value":"/ supported SIMD instruction sets.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29488,"byte_end":29524,"line_start":803,"line_end":803,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29525,"byte_end":29528,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29529,"byte_end":29543,"line_start":805,"line_end":805,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29544,"byte_end":29547,"line_start":806,"line_end":806,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29548,"byte_end":29555,"line_start":807,"line_end":807,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29556,"byte_end":29615,"line_start":808,"line_end":808,"column_start":1,"column_end":60}},{"value":"/ // Hash an input incrementally.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29616,"byte_end":29651,"line_start":809,"line_end":809,"column_start":1,"column_end":36}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29652,"byte_end":29695,"line_start":810,"line_end":810,"column_start":1,"column_end":44}},{"value":"/ hasher.update(b\"foo\");","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29696,"byte_end":29722,"line_start":811,"line_end":811,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"bar\");","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29723,"byte_end":29749,"line_start":812,"line_end":812,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"baz\");","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29750,"byte_end":29776,"line_start":813,"line_end":813,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(hasher.finalize(), blake3::hash(b\"foobarbaz\"));","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29777,"byte_end":29839,"line_start":814,"line_end":814,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29840,"byte_end":29843,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29844,"byte_end":29911,"line_start":816,"line_end":816,"column_start":1,"column_end":68}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29912,"byte_end":29943,"line_start":817,"line_end":817,"column_start":1,"column_end":32}},{"value":"/ let mut output = [0; 1000];","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29944,"byte_end":29975,"line_start":818,"line_end":818,"column_start":1,"column_end":32}},{"value":"/ let mut output_reader = hasher.finalize_xof();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":29976,"byte_end":30026,"line_start":819,"line_end":819,"column_start":1,"column_end":51}},{"value":"/ output_reader.fill(&mut output);","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30027,"byte_end":30063,"line_start":820,"line_end":820,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(&output[..32], blake3::hash(b\"foobarbaz\").as_bytes());","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30064,"byte_end":30133,"line_start":821,"line_end":821,"column_start":1,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30134,"byte_end":30141,"line_start":822,"line_end":822,"column_start":1,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30142,"byte_end":30154,"line_start":823,"line_end":823,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30155,"byte_end":30162,"line_start":824,"line_end":824,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30163,"byte_end":30170,"line_start":825,"line_end":825,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30171,"byte_end":30174,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ [`update`]: #method.update","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30175,"byte_end":30205,"line_start":827,"line_end":827,"column_start":1,"column_end":31}},{"value":"/ [`update_with_join`]: #method.update_with_join","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30206,"byte_end":30256,"line_start":828,"line_end":828,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31070,"byte_end":31073,"line_start":851,"line_end":851,"column_start":12,"column_end":15},"name":"new","qualname":"<Hasher>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the regular hash function.\n","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the regular hash function.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30999,"byte_end":31058,"line_start":850,"line_end":850,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31279,"byte_end":31288,"line_start":859,"line_end":859,"column_start":12,"column_end":21},"name":"new_keyed","qualname":"<Hasher>::new_keyed","value":"fn (key: &[u8; KEY_LEN]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the keyed hash function. See\n [`keyed_hash`].","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the keyed hash function. See","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31131,"byte_end":31192,"line_start":855,"line_end":855,"column_start":5,"column_end":66}},{"value":"/ [`keyed_hash`].","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31197,"byte_end":31216,"line_start":856,"line_end":856,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31221,"byte_end":31224,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ [`keyed_hash`]: fn.keyed_hash.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31229,"byte_end":31267,"line_start":858,"line_end":858,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31688,"byte_end":31702,"line_start":869,"line_end":869,"column_start":12,"column_end":26},"name":"new_derive_key","qualname":"<Hasher>::new_derive_key","value":"fn (context: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the key derivation function. See\n [`derive_key`]. The context string should be hardcoded, globally\n unique, and application-specific.","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the key derivation function. See","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31445,"byte_end":31510,"line_start":864,"line_end":864,"column_start":5,"column_end":70}},{"value":"/ [`derive_key`]. The context string should be hardcoded, globally","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31515,"byte_end":31583,"line_start":865,"line_end":865,"column_start":5,"column_end":73}},{"value":"/ unique, and application-specific.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31588,"byte_end":31625,"line_start":866,"line_end":866,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31630,"byte_end":31633,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ [`derive_key`]: fn.derive_key.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31638,"byte_end":31676,"line_start":868,"line_end":868,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":32407,"byte_end":32412,"line_start":882,"line_end":882,"column_start":12,"column_end":17},"name":"reset","qualname":"<Hasher>::reset","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Reset the `Hasher` to its initial state.","sig":null,"attributes":[{"value":"/ Reset the `Hasher` to its initial state.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":31997,"byte_end":32041,"line_start":875,"line_end":875,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":32046,"byte_end":32049,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ This is functionally the same as overwriting the `Hasher` with a new","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":32054,"byte_end":32126,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/ one, using the same key or context string if any. However, depending on","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":32131,"byte_end":32206,"line_start":878,"line_end":878,"column_start":5,"column_end":80}},{"value":"/ how much inlining the optimizer does, moving a `Hasher` might copy its","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":32211,"byte_end":32285,"line_start":879,"line_end":879,"column_start":5,"column_end":79}},{"value":"/ entire CV stack, most of which is useless uninitialized bytes. This","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":32290,"byte_end":32361,"line_start":880,"line_end":880,"column_start":5,"column_end":76}},{"value":"/ methods avoids that copy.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":32366,"byte_end":32395,"line_start":881,"line_end":881,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36957,"byte_end":36963,"line_start":971,"line_end":971,"column_start":12,"column_end":18},"name":"update","qualname":"<Hasher>::update","value":"fn (&mut self, input: &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input bytes to the hash state. You can call this any number of\n times.","sig":null,"attributes":[{"value":"/ Add input bytes to the hash state. You can call this any number of","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36280,"byte_end":36350,"line_start":958,"line_end":958,"column_start":5,"column_end":75}},{"value":"/ times.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36355,"byte_end":36365,"line_start":959,"line_end":959,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36370,"byte_end":36373,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ This method is always single-threaded. For multi-threading support, see","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36378,"byte_end":36453,"line_start":961,"line_end":961,"column_start":5,"column_end":80}},{"value":"/ `update_with_join` below.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36458,"byte_end":36487,"line_start":962,"line_end":962,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36492,"byte_end":36495,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ Note that the degree of SIMD parallelism that `update` can use is","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36500,"byte_end":36569,"line_start":964,"line_end":964,"column_start":5,"column_end":74}},{"value":"/ limited by the size of this input buffer. The 8 KiB buffer currently","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36574,"byte_end":36646,"line_start":965,"line_end":965,"column_start":5,"column_end":77}},{"value":"/ used by [`std::io::copy`] is enough to leverage AVX2, for example, but","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36651,"byte_end":36725,"line_start":966,"line_end":966,"column_start":5,"column_end":79}},{"value":"/ not enough to leverage AVX-512. A 16 KiB buffer is large enough to","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36730,"byte_end":36800,"line_start":967,"line_end":967,"column_start":5,"column_end":75}},{"value":"/ leverage all currently supported SIMD instruction sets.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36805,"byte_end":36864,"line_start":968,"line_end":968,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36869,"byte_end":36872,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":36877,"byte_end":36945,"line_start":970,"line_end":970,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38912,"byte_end":38928,"line_start":1009,"line_end":1009,"column_start":12,"column_end":28},"name":"update_with_join","qualname":"<Hasher>::update_with_join","value":"fn <J> (&mut self, mut input: &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input bytes to the hash state, as with `update`, but potentially\n using multi-threading. See the example below, and the\n [`join`](join/index.html) module for a more detailed explanation.","sig":null,"attributes":[{"value":"/ Add input bytes to the hash state, as with `update`, but potentially","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37066,"byte_end":37138,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ using multi-threading. See the example below, and the","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37143,"byte_end":37200,"line_start":976,"line_end":976,"column_start":5,"column_end":62}},{"value":"/ [`join`](join/index.html) module for a more detailed explanation.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37205,"byte_end":37274,"line_start":977,"line_end":977,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37279,"byte_end":37282,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ To get any performance benefit from multi-threading, the input buffer","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37287,"byte_end":37360,"line_start":979,"line_end":979,"column_start":5,"column_end":78}},{"value":"/ size needs to be very large. As a rule of thumb on x86_64, there is no","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37365,"byte_end":37439,"line_start":980,"line_end":980,"column_start":5,"column_end":79}},{"value":"/ benefit to multi-threading inputs less than 128 KiB. Other platforms","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37444,"byte_end":37516,"line_start":981,"line_end":981,"column_start":5,"column_end":77}},{"value":"/ have different thresholds, and in general you need to benchmark your","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37521,"byte_end":37593,"line_start":982,"line_end":982,"column_start":5,"column_end":77}},{"value":"/ specific use case. Where possible, memory mapping an entire input file","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37598,"byte_end":37672,"line_start":983,"line_end":983,"column_start":5,"column_end":79}},{"value":"/ is recommended, to take maximum advantage of multi-threading without","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37677,"byte_end":37749,"line_start":984,"line_end":984,"column_start":5,"column_end":77}},{"value":"/ needing to tune a specific buffer size. Where memory mapping is not","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37754,"byte_end":37825,"line_start":985,"line_end":985,"column_start":5,"column_end":76}},{"value":"/ possible, good multi-threading performance requires doing IO on a","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37830,"byte_end":37899,"line_start":986,"line_end":986,"column_start":5,"column_end":74}},{"value":"/ background thread, to avoid sleeping all your worker threads while the","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37904,"byte_end":37978,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/ input buffer is (serially) refilled. This is quite complicated compared","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":37983,"byte_end":38058,"line_start":988,"line_end":988,"column_start":5,"column_end":80}},{"value":"/ to memory mapping.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38063,"byte_end":38085,"line_start":989,"line_end":989,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38090,"byte_end":38093,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38098,"byte_end":38111,"line_start":991,"line_end":991,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38116,"byte_end":38119,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38124,"byte_end":38131,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ // Hash a large input using multi-threading. Note that multi-threading","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38136,"byte_end":38210,"line_start":994,"line_end":994,"column_start":5,"column_end":79}},{"value":"/ // comes with some overhead, and it can actually hurt performance for small","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38215,"byte_end":38294,"line_start":995,"line_end":995,"column_start":5,"column_end":84}},{"value":"/ // inputs. The meaning of \"small\" varies, however, depending on the","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38299,"byte_end":38370,"line_start":996,"line_end":996,"column_start":5,"column_end":76}},{"value":"/ // platform and the number of threads. (On x86_64, the cutoff tends to be","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38375,"byte_end":38452,"line_start":997,"line_end":997,"column_start":5,"column_end":82}},{"value":"/ // around 128 KiB.) You should benchmark your own use case to see whether","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38457,"byte_end":38534,"line_start":998,"line_end":998,"column_start":5,"column_end":82}},{"value":"/ // multi-threading helps.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38539,"byte_end":38568,"line_start":999,"line_end":999,"column_start":5,"column_end":34}},{"value":"/ # #[cfg(feature = \"rayon\")]","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38573,"byte_end":38604,"line_start":1000,"line_end":1000,"column_start":5,"column_end":36}},{"value":"/ # {","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38609,"byte_end":38616,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ # fn some_large_input() -> &'static [u8] { b\"foo\" }","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38621,"byte_end":38676,"line_start":1002,"line_end":1002,"column_start":5,"column_end":60}},{"value":"/ let input: &[u8] = some_large_input();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38681,"byte_end":38723,"line_start":1003,"line_end":1003,"column_start":5,"column_end":47}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38728,"byte_end":38771,"line_start":1004,"line_end":1004,"column_start":5,"column_end":48}},{"value":"/ hasher.update_with_join::<blake3::join::RayonJoin>(input);","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38776,"byte_end":38838,"line_start":1005,"line_end":1005,"column_start":5,"column_end":67}},{"value":"/ let hash = hasher.finalize();","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38843,"byte_end":38876,"line_start":1006,"line_end":1006,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38881,"byte_end":38888,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":38893,"byte_end":38900,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":47834,"byte_end":47842,"line_start":1188,"line_end":1188,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Hasher>::finalize","value":"fn (&self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return the [`Hash`](struct.Hash.html) of\n the input.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return the [`Hash`](struct.Hash.html) of","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":47588,"byte_end":47660,"line_start":1183,"line_end":1183,"column_start":5,"column_end":77}},{"value":"/ the input.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":47665,"byte_end":47679,"line_start":1184,"line_end":1184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":47684,"byte_end":47687,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":47692,"byte_end":47766,"line_start":1186,"line_end":1186,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":47771,"byte_end":47822,"line_start":1187,"line_end":1187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48237,"byte_end":48249,"line_start":1199,"line_end":1199,"column_start":12,"column_end":24},"name":"finalize_xof","qualname":"<Hasher>::finalize_xof","value":"fn (&self) -> OutputReader","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return an [`OutputReader`], which can\n supply any number of output bytes.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return an [`OutputReader`], which can","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":47911,"byte_end":47980,"line_start":1192,"line_end":1192,"column_start":5,"column_end":74}},{"value":"/ supply any number of output bytes.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":47985,"byte_end":48023,"line_start":1193,"line_end":1193,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48028,"byte_end":48031,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48036,"byte_end":48110,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48115,"byte_end":48166,"line_start":1196,"line_end":1196,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48171,"byte_end":48174,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ [`OutputReader`]: struct.OutputReader.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48179,"byte_end":48225,"line_start":1198,"line_end":1198,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":613},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49238,"byte_end":49250,"line_start":1240,"line_end":1240,"column_start":12,"column_end":24},"name":"OutputReader","qualname":"::OutputReader","value":"OutputReader {  }","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"decl_id":null,"docs":" An incremental reader for extended output, returned by\n [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).\n","sig":null,"attributes":[{"value":"/ An incremental reader for extended output, returned by","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49081,"byte_end":49139,"line_start":1237,"line_end":1237,"column_start":1,"column_end":59}},{"value":"/ [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49140,"byte_end":49209,"line_start":1238,"line_end":1238,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":50277,"byte_end":50281,"line_start":1268,"line_end":1268,"column_start":12,"column_end":16},"name":"fill","qualname":"<OutputReader>::fill","value":"fn (&mut self, mut buf: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fill a buffer with output bytes and advance the position of the\n `OutputReader`. This is equivalent to [`Read::read`], except that it\n doesn't return a `Result`. Both methods always fill the entire buffer.","sig":null,"attributes":[{"value":"/ Fill a buffer with output bytes and advance the position of the","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49455,"byte_end":49522,"line_start":1253,"line_end":1253,"column_start":5,"column_end":72}},{"value":"/ `OutputReader`. This is equivalent to [`Read::read`], except that it","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49527,"byte_end":49599,"line_start":1254,"line_end":1254,"column_start":5,"column_end":77}},{"value":"/ doesn't return a `Result`. Both methods always fill the entire buffer.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49604,"byte_end":49678,"line_start":1255,"line_end":1255,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49683,"byte_end":49686,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ Note that `OutputReader` doesn't buffer output bytes internally, so","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49691,"byte_end":49762,"line_start":1257,"line_end":1257,"column_start":5,"column_end":76}},{"value":"/ calling `fill` repeatedly with a short-length or odd-length slice will","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49767,"byte_end":49841,"line_start":1258,"line_end":1258,"column_start":5,"column_end":79}},{"value":"/ end up performing the same compression multiple times. If you're","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49846,"byte_end":49914,"line_start":1259,"line_end":1259,"column_start":5,"column_end":73}},{"value":"/ reading output in a loop, prefer a slice length that's a multiple of","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49919,"byte_end":49991,"line_start":1260,"line_end":1260,"column_start":5,"column_end":77}},{"value":"/ 64.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49996,"byte_end":50003,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":50008,"byte_end":50011,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ The maximum output size of BLAKE3 is 2<sup>64</sup>-1 bytes. If you try","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":50016,"byte_end":50091,"line_start":1263,"line_end":1263,"column_start":5,"column_end":80}},{"value":"/ to extract more than that, for example by seeking near the end and","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":50096,"byte_end":50166,"line_start":1264,"line_end":1264,"column_start":5,"column_end":75}},{"value":"/ reading further, the behavior is unspecified.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":50171,"byte_end":50220,"line_start":1265,"line_end":1265,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":50225,"byte_end":50228,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":50233,"byte_end":50265,"line_start":1267,"line_end":1267,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51215,"byte_end":51223,"line_start":1289,"line_end":1289,"column_start":12,"column_end":20},"name":"position","qualname":"<OutputReader>::position","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the current read position in the output stream. The position of\n a new `OutputReader` starts at 0, and each call to [`fill`] or\n [`Read::read`] moves the position forward by the number of bytes read.","sig":null,"attributes":[{"value":"/ Return the current read position in the output stream. The position of","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":50903,"byte_end":50977,"line_start":1283,"line_end":1283,"column_start":5,"column_end":79}},{"value":"/ a new `OutputReader` starts at 0, and each call to [`fill`] or","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":50982,"byte_end":51048,"line_start":1284,"line_end":1284,"column_start":5,"column_end":71}},{"value":"/ [`Read::read`] moves the position forward by the number of bytes read.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51053,"byte_end":51127,"line_start":1285,"line_end":1285,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51132,"byte_end":51135,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ [`fill`]: #method.fill","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51140,"byte_end":51166,"line_start":1287,"line_end":1287,"column_start":5,"column_end":31}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51171,"byte_end":51203,"line_start":1288,"line_end":1288,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51653,"byte_end":51665,"line_start":1299,"line_end":1299,"column_start":12,"column_end":24},"name":"set_position","qualname":"<OutputReader>::set_position","value":"fn (&mut self, position: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Seek to a new read position in the output stream. This is equivalent to\n calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't\n return a `Result`.","sig":null,"attributes":[{"value":"/ Seek to a new read position in the output stream. This is equivalent to","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51333,"byte_end":51408,"line_start":1293,"line_end":1293,"column_start":5,"column_end":80}},{"value":"/ calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51413,"byte_end":51488,"line_start":1294,"line_end":1294,"column_start":5,"column_end":80}},{"value":"/ return a `Result`.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51493,"byte_end":51515,"line_start":1295,"line_end":1295,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51520,"byte_end":51523,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ [`Seek::seek`]: #method.seek","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51528,"byte_end":51560,"line_start":1297,"line_end":1297,"column_start":5,"column_end":37}},{"value":"/ [`SeekFrom::Start`]: https://doc.rust-lang.org/std/io/enum.SeekFrom.html","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51565,"byte_end":51641,"line_start":1298,"line_end":1298,"column_start":5,"column_end":81}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":53499,"byte_end":53509,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57401,"byte_end":57409,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83377,"byte_end":83383,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83438,"byte_end":83444,"line_start":18,"line_end":18,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83580,"byte_end":83586,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83712,"byte_end":83718,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83939,"byte_end":83945,"line_start":41,"line_end":41,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":84101,"byte_end":84113,"line_start":50,"line_end":50,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":84235,"byte_end":84241,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89836,"byte_end":89846,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7061,"byte_end":7065,"line_start":201,"line_end":201,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8060,"byte_end":8064,"line_start":227,"line_end":227,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8323,"byte_end":8327,"line_start":242,"line_end":242,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8535,"byte_end":8539,"line_start":250,"line_end":250,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8689,"byte_end":8693,"line_start":257,"line_end":257,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8718,"byte_end":8722,"line_start":259,"line_end":259,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":9247,"byte_end":9253,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":10328,"byte_end":10338,"line_start":321,"line_end":321,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":13111,"byte_end":13121,"line_start":409,"line_end":409,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":14402,"byte_end":14418,"line_start":445,"line_end":445,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30759,"byte_end":30765,"line_start":841,"line_end":841,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48408,"byte_end":48414,"line_start":1205,"line_end":1205,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48661,"byte_end":48667,"line_start":1215,"line_end":1215,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48788,"byte_end":48794,"line_start":1223,"line_end":1223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49311,"byte_end":49323,"line_start":1245,"line_end":1245,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51912,"byte_end":51924,"line_start":1306,"line_end":1306,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":52112,"byte_end":52124,"line_start":1313,"line_end":1313,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":52310,"byte_end":52322,"line_start":1322,"line_end":1322,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":2478,"byte_end":2482,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":2577,"byte_end":2585,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":3098,"byte_end":3104,"line_start":94,"line_end":94,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":132}},{"kind":"Mod","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":3115,"byte_end":3119,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":166}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/guts.rs","byte_start":53499,"byte_end":53509,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/platform.rs","byte_start":57401,"byte_end":57409,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83377,"byte_end":83383,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":598},"to":{"krate":20,"index":83}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83438,"byte_end":83444,"line_start":18,"line_end":18,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":598},"to":{"krate":20,"index":78}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83580,"byte_end":83586,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":598},"to":{"krate":20,"index":101}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83712,"byte_end":83718,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":598},"to":{"krate":20,"index":85}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":83939,"byte_end":83945,"line_start":41,"line_end":41,"column_start":35,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":598},"to":{"krate":20,"index":97}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":84101,"byte_end":84113,"line_start":50,"line_end":50,"column_start":28,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":613},"to":{"krate":20,"index":95}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/traits.rs","byte_start":84235,"byte_end":84241,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":598},"to":{"krate":16,"index":22}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/join.rs","byte_start":89836,"byte_end":89846,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":173},"to":{"krate":0,"index":167}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":7061,"byte_end":7065,"line_start":201,"line_end":201,"column_start":6,"column_end":10},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8060,"byte_end":8064,"line_start":227,"line_end":227,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8323,"byte_end":8327,"line_start":242,"line_end":242,"column_start":20,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8535,"byte_end":8539,"line_start":250,"line_end":250,"column_start":35,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8689,"byte_end":8693,"line_start":257,"line_end":257,"column_start":13,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":1624}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":8718,"byte_end":8722,"line_start":259,"line_end":259,"column_start":21,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":9247,"byte_end":9253,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":10328,"byte_end":10338,"line_start":321,"line_end":321,"column_start":6,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":13111,"byte_end":13121,"line_start":409,"line_end":409,"column_start":21,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":559},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":14402,"byte_end":14418,"line_start":445,"line_end":445,"column_start":6,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":30759,"byte_end":30765,"line_start":841,"line_end":841,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48408,"byte_end":48414,"line_start":1205,"line_end":1205,"column_start":21,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48661,"byte_end":48667,"line_start":1215,"line_end":1215,"column_start":18,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":598},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":48788,"byte_end":48794,"line_start":1223,"line_end":1223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":49311,"byte_end":49323,"line_start":1245,"line_end":1245,"column_start":6,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":51912,"byte_end":51924,"line_start":1306,"line_end":1306,"column_start":21,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":613},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":52112,"byte_end":52124,"line_start":1313,"line_end":1313,"column_start":24,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2861}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.4/src/lib.rs","byte_start":52310,"byte_end":52322,"line_start":1322,"line_end":1322,"column_start":24,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2931}}]}