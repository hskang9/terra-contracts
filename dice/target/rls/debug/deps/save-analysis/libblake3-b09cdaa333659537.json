{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5","program":"/home/hskang9/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","blake3","--edition=2018","/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=b09cdaa333659537","-C","extra-filename=-b09cdaa333659537","--out-dir","/home/hskang9/terra-contracts/dice/target/rls/debug/deps","-L","dependency=/home/hskang9/terra-contracts/dice/target/rls/debug/deps","--extern","arrayref=/home/hskang9/terra-contracts/dice/target/rls/debug/deps/libarrayref-d5880a884e958d38.rmeta","--extern","arrayvec=/home/hskang9/terra-contracts/dice/target/rls/debug/deps/libarrayvec-799518cd1bba176f.rmeta","--extern","cfg_if=/home/hskang9/terra-contracts/dice/target/rls/debug/deps/libcfg_if-92cf60d3ff94ac03.rmeta","--extern","constant_time_eq=/home/hskang9/terra-contracts/dice/target/rls/debug/deps/libconstant_time_eq-3988d304db8dbbac.rmeta","--extern","crypto_mac=/home/hskang9/terra-contracts/dice/target/rls/debug/deps/libcrypto_mac-4168b8f65777cd18.rmeta","--extern","digest=/home/hskang9/terra-contracts/dice/target/rls/debug/deps/libdigest-aa08839f72f9a8c2.rmeta","--cap-lints","allow","-L","native=/home/hskang9/terra-contracts/dice/target/rls/debug/build/blake3-c5fed4a85ebfa455/out","-L","native=/home/hskang9/terra-contracts/dice/target/rls/debug/build/blake3-c5fed4a85ebfa455/out","--cfg","blake3_sse41_ffi","--cfg","blake3_avx2_ffi","--cfg","blake3_avx512_ffi","-l","static=blake3_sse41_avx2_assembly","-l","static=blake3_avx512_assembly","--error-format=json","--sysroot","/home/hskang9/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/hskang9/terra-contracts/dice/target/rls/debug/deps/libblake3-b09cdaa333659537.rmeta"},"prelude":{"crate_id":{"name":"blake3","disambiguator":[8092424506860898269,8917926607000355749]},"crate_root":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src","external_crates":[{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","num":15,"id":{"name":"arrayref","disambiguator":[15996613366565538960,9608102474070716550]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","num":16,"id":{"name":"crypto_mac","disambiguator":[13931255161968450977,12620633214408882195]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","num":17,"id":{"name":"generic_array","disambiguator":[2844240610097587178,11024449883013917886]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","num":18,"id":{"name":"typenum","disambiguator":[9567127855991443091,10238765726065148094]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","num":19,"id":{"name":"subtle","disambiguator":[11274725889101970414,11930467320890141408]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","num":20,"id":{"name":"digest","disambiguator":[10786851404575372596,6650499459422870454]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":21,"id":{"name":"arrayvec","disambiguator":[11167027141037347346,5388251159768068086]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","num":22,"id":{"name":"cfg_if","disambiguator":[11398942730684294966,14323025178007651326]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","num":23,"id":{"name":"constant_time_eq","disambiguator":[11307392817942987288,4043175651730325275]}}],"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":0,"byte_end":53182,"line_start":1,"line_end":1345,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83215,"byte_end":83225,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"alias_span":null,"name":"crypto_mac","value":"","parent":{"krate":0,"index":132}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83235,"byte_end":83241,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"alias_span":null,"name":"digest","value":"","parent":{"krate":0,"index":132}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":0,"byte_end":53182,"line_start":1,"line_end":1345,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":52},{"krate":0,"index":63},{"krate":0,"index":82},{"krate":0,"index":113},{"krate":0,"index":132},{"krate":0,"index":169},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":541},{"krate":0,"index":549},{"krate":0,"index":548},{"krate":0,"index":545},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":552},{"krate":0,"index":560},{"krate":0,"index":241},{"krate":0,"index":562},{"krate":0,"index":571},{"krate":0,"index":246},{"krate":0,"index":255},{"krate":0,"index":577},{"krate":0,"index":583},{"krate":0,"index":582},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":601},{"krate":0,"index":606},{"krate":0,"index":284},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316}],"decl_id":null,"docs":" The official Rust implementation of the [BLAKE3] cryptographic hash\n function.","sig":null,"attributes":[{"value":"! The official Rust implementation of the [BLAKE3] cryptographic hash","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"! function.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":72,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":90,"byte_end":104,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":105,"byte_end":108,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":109,"byte_end":116,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":117,"byte_end":176,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"! // Hash an input all at once.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":177,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":34}},{"value":"! let hash1 = blake3::hash(b\"foobarbaz\");","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":211,"byte_end":254,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":255,"byte_end":258,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! // Hash an input incrementally.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":259,"byte_end":294,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"! let mut hasher = blake3::Hasher::new();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":295,"byte_end":338,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"! hasher.update(b\"foo\");","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":339,"byte_end":365,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"! hasher.update(b\"bar\");","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":366,"byte_end":392,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"! hasher.update(b\"baz\");","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":393,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"! let hash2 = hasher.finalize();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":420,"byte_end":454,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"! assert_eq!(hash1, hash2);","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":455,"byte_end":484,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":485,"byte_end":488,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":489,"byte_end":556,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! # #[cfg(feature = \"std\")] {","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":557,"byte_end":588,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"! let mut output = [0; 1000];","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":589,"byte_end":620,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"! let mut output_reader = hasher.finalize_xof();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":621,"byte_end":671,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"! output_reader.fill(&mut output);","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":672,"byte_end":708,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"! assert_eq!(&output[..32], hash1.as_bytes());","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":709,"byte_end":757,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"! # }","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":758,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"! # Ok(())","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":766,"byte_end":778,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":779,"byte_end":786,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":787,"byte_end":794,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":795,"byte_end":798,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! # Cargo Features","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":799,"byte_end":819,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":820,"byte_end":823,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! The `rayon` feature provides [Rayon]-based multi-threading, in particular","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":824,"byte_end":901,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"! the [`join::RayonJoin`] type for use with [`Hasher::update_with_join`]. It","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":902,"byte_end":980,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"! is disabled by default, but enabled for [docs.rs].","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":981,"byte_end":1035,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1036,"byte_end":1039,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! The `neon` feature enables ARM NEON support. Currently there is no runtime","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1040,"byte_end":1118,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"! CPU feature detection for NEON, so you must only enable this feature for","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1119,"byte_end":1195,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"! targets that are known to have NEON support. In particular, some ARMv7","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1196,"byte_end":1270,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! targets support NEON, and some don't.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1271,"byte_end":1312,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1313,"byte_end":1316,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! The `std` feature (enabled by default) is required for implementations of","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1317,"byte_end":1394,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"! the [`Write`] and [`Seek`] traits, and also for runtime CPU feature","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1395,"byte_end":1466,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"! detection. If this feature is disabled, the only way to use the SIMD","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1467,"byte_end":1539,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"! implementations in this crate is to enable the corresponding instruction","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1540,"byte_end":1616,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"! sets statically for the entire build, with e.g. `RUSTFLAGS=\"-C","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1617,"byte_end":1683,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"! target-cpu=native\"`. The resulting binary will not be portable to other","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1684,"byte_end":1759,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"! machines.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1760,"byte_end":1773,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1774,"byte_end":1777,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! [BLAKE3]: https://blake3.io","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1778,"byte_end":1809,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"! [Rayon]: https://github.com/rayon-rs/rayon","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1810,"byte_end":1856,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"! [`join::RayonJoin`]: join/enum.RayonJoin.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1857,"byte_end":1906,"line_start":51,"line_end":51,"column_start":1,"column_end":50}},{"value":"! [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1907,"byte_end":1983,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"! [docs.rs]: https://docs.rs/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":1984,"byte_end":2015,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"! [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":2016,"byte_end":2080,"line_start":54,"line_end":54,"column_start":1,"column_end":65}},{"value":"! [`Seek`]: https://doc.rust-lang.org/std/io/trait.Seek.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":2081,"byte_end":2143,"line_start":55,"line_end":55,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"guts","qualname":"::guts","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":323},{"krate":0,"index":321},{"krate":0,"index":4},{"krate":0,"index":9}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":53468,"byte_end":53478,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"ChunkState","qualname":"::guts::ChunkState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":53672,"byte_end":53675,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<ChunkState>::new","value":"pub fn new(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":53900,"byte_end":53903,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"len","qualname":"<ChunkState>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":53879,"byte_end":53888,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":53975,"byte_end":53981,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"update","qualname":"<ChunkState>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":53954,"byte_end":53963,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":54083,"byte_end":54091,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ChunkState>::finalize","value":"pub fn finalize(&Self, bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":54441,"byte_end":54450,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"parent_cv","qualname":"::guts::parent_cv","value":"pub fn parent_cv(&crate::Hash, &crate::Hash, bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"platform","qualname":"::platform","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":339},{"krate":0,"index":338},{"krate":0,"index":336},{"krate":0,"index":19},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":48}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":325},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":56005,"byte_end":56020,"line_start":8,"line_end":8,"column_start":27,"column_end":42},"name":"MAX_SIMD_DEGREE","qualname":"::platform::MAX_SIMD_DEGREE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":326},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":56747,"byte_end":56767,"line_start":28,"line_end":28,"column_start":27,"column_end":47},"name":"MAX_SIMD_DEGREE_OR_2","qualname":"::platform::MAX_SIMD_DEGREE_OR_2","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":328},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57104,"byte_end":57112,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Portable","qualname":"::platform::Platform::Portable","value":"Platform::Portable","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":330},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57179,"byte_end":57184,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"SSE41","qualname":"::platform::Platform::SSE41","value":"Platform::SSE41","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57118,"byte_end":57174,"line_start":43,"line_end":43,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":332},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57251,"byte_end":57255,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"AVX2","qualname":"::platform::Platform::AVX2","value":"Platform::AVX2","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57190,"byte_end":57246,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":334},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57352,"byte_end":57358,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"AVX512","qualname":"::platform::Platform::AVX512","value":"Platform::AVX512","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57261,"byte_end":57286,"line_start":47,"line_end":47,"column_start":5,"column_end":30}},{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57291,"byte_end":57347,"line_start":48,"line_end":48,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":327},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57089,"byte_end":57097,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"Platform","qualname":"::platform::Platform","value":"pub enum Platform {\n    Portable,\n\n    #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n    SSE41,\n\n    #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n    AVX2,\n\n    #[cfg(blake3_avx512_ffi)]\n    #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n    AVX512,\n}","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57460,"byte_end":57466,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"detect","qualname":"<Platform>::detect","value":"pub fn detect() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unreachable_code)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57422,"byte_end":57448,"line_start":55,"line_end":55,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":58172,"byte_end":58183,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"simd_degree","qualname":"<Platform>::simd_degree","value":"pub fn simd_degree(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":58785,"byte_end":58802,"line_start":98,"line_end":98,"column_start":12,"column_end":29},"name":"compress_in_place","qualname":"<Platform>::compress_in_place","value":"pub fn compress_in_place(&Self, &mut CVWords, &[u8; ], u8, u64, u8)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":59908,"byte_end":59920,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"compress_xof","qualname":"<Platform>::compress_xof","value":"pub fn compress_xof(&Self, &CVWords, &[u8; ], u8, u64, u8) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":61574,"byte_end":61583,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"hash_many","qualname":"<Platform>::hash_many","value":"pub fn hash_many<A: arrayvec::Array<Item =\n                 u8>>(&Self, &[&A], &CVWords, u64, IncrementCounter, u8, u8,\n                      u8, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":64171,"byte_end":64179,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"portable","qualname":"<Platform>::portable","value":"pub fn portable() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":64294,"byte_end":64299,"line_start":251,"line_end":251,"column_start":12,"column_end":17},"name":"sse41","qualname":"<Platform>::sse41","value":"pub fn sse41() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":64226,"byte_end":64282,"line_start":250,"line_end":250,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":64503,"byte_end":64507,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"avx2","qualname":"<Platform>::avx2","value":"pub fn avx2() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":64435,"byte_end":64491,"line_start":259,"line_end":259,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":64739,"byte_end":64745,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"avx512","qualname":"<Platform>::avx512","value":"pub fn avx512() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":64641,"byte_end":64666,"line_start":268,"line_end":268,"column_start":5,"column_end":30}},{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":64671,"byte_end":64727,"line_start":269,"line_end":269,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":65241,"byte_end":65256,"line_start":290,"line_end":290,"column_start":8,"column_end":23},"name":"avx512_detected","qualname":"::platform::avx512_detected","value":"pub fn avx512_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":65133,"byte_end":65158,"line_start":287,"line_end":287,"column_start":1,"column_end":26}},{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":65159,"byte_end":65215,"line_start":288,"line_end":288,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":65216,"byte_end":65233,"line_start":289,"line_end":289,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":65840,"byte_end":65853,"line_start":312,"line_end":312,"column_start":8,"column_end":21},"name":"avx2_detected","qualname":"::platform::avx2_detected","value":"pub fn avx2_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":65758,"byte_end":65814,"line_start":310,"line_end":310,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":65815,"byte_end":65832,"line_start":311,"line_end":311,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":66355,"byte_end":66369,"line_start":334,"line_end":334,"column_start":8,"column_end":22},"name":"sse41_detected","qualname":"::platform::sse41_detected","value":"pub fn sse41_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":66273,"byte_end":66329,"line_start":332,"line_end":332,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":66330,"byte_end":66347,"line_start":333,"line_end":333,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":66819,"byte_end":66841,"line_start":355,"line_end":355,"column_start":8,"column_end":30},"name":"words_from_le_bytes_32","qualname":"::platform::words_from_le_bytes_32","value":"pub fn words_from_le_bytes_32(&[u8; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":66794,"byte_end":66811,"line_start":354,"line_end":354,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":67440,"byte_end":67462,"line_start":369,"line_end":369,"column_start":8,"column_end":30},"name":"words_from_le_bytes_64","qualname":"::platform::words_from_le_bytes_64","value":"pub fn words_from_le_bytes_64(&[u8; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":67415,"byte_end":67432,"line_start":368,"line_end":368,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":68579,"byte_end":68601,"line_start":391,"line_end":391,"column_start":8,"column_end":30},"name":"le_bytes_from_words_32","qualname":"::platform::le_bytes_from_words_32","value":"pub fn le_bytes_from_words_32(&[u32; ]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":68554,"byte_end":68571,"line_start":390,"line_end":390,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":69185,"byte_end":69207,"line_start":405,"line_end":405,"column_start":8,"column_end":30},"name":"le_bytes_from_words_64","qualname":"::platform::le_bytes_from_words_64","value":"pub fn le_bytes_from_words_64(&[u32; ]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":69160,"byte_end":69177,"line_start":404,"line_end":404,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":132},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":164}],"decl_id":null,"docs":" Implementations of commonly used traits like\n [`digest::Digest`](https://crates.io/crates/digest) and\n [`crypto_mac::Mac`](https://crates.io/crates/crypto-mac).\n","sig":null,"attributes":[{"value":"! Implementations of commonly used traits like","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83035,"byte_end":83083,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"! [`digest::Digest`](https://crates.io/crates/digest) and","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83084,"byte_end":83143,"line_start":2,"line_end":2,"column_start":1,"column_end":60}},{"value":"! [`crypto_mac::Mac`](https://crates.io/crates/crypto-mac).","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83144,"byte_end":83205,"line_start":3,"line_end":3,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":169},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"join","qualname":"::join","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" The multi-threading abstractions used by [`Hasher::update_with_join`].","sig":null,"attributes":[{"value":"! The multi-threading abstractions used by [`Hasher::update_with_join`].","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88364,"byte_end":88438,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88439,"byte_end":88442,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Different implementations of the `Join` trait determine whether","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88443,"byte_end":88510,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"! [`Hasher::update_with_join`] performs multi-threading on sufficiently large","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88511,"byte_end":88590,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! inputs. The `SerialJoin` implementation is single-threaded, and the","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88591,"byte_end":88662,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! `RayonJoin` implementation (gated by the `rayon` feature) is","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88663,"byte_end":88727,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"! multi-threaded. Interfaces other than [`Hasher::update_with_join`], like","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88728,"byte_end":88804,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"! [`hash`] and [`Hasher::update`], always use `SerialJoin` internally.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88805,"byte_end":88877,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88878,"byte_end":88881,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The `Join` trait is an almost exact copy of the [`rayon::join`] API, and","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88882,"byte_end":88958,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"! `RayonJoin` is the only non-trivial implementation provided. The only","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":88959,"byte_end":89032,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"! difference between the function signature in the `Join` trait and the","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89033,"byte_end":89106,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"! underlying one in Rayon, is that the trait method includes two length","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89107,"byte_end":89180,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! parameters. This gives an implementation the option of e.g. setting a","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89181,"byte_end":89254,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! subtree size threshold below which it keeps splits on the same thread.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89255,"byte_end":89329,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"! However, neither of the two provided implementations currently makes use of","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89330,"byte_end":89409,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"! those parameters. Note that in Rayon, the very first `join` call is more","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89410,"byte_end":89486,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"! expensive than subsequent calls, because it moves work from the calling","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89487,"byte_end":89562,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"! thread into the thread pool. That makes a coarse-grained input length","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89563,"byte_end":89636,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"! threshold in the caller more effective than a fine-grained subtree size","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89637,"byte_end":89712,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"! threshold after the implementation has already started recursing.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89713,"byte_end":89782,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89783,"byte_end":89786,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89787,"byte_end":89800,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89801,"byte_end":89804,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89805,"byte_end":89812,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"! // Hash a large input using multi-threading. Note that multi-threading","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89813,"byte_end":89887,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"! // comes with some overhead, and it can actually hurt performance for small","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89888,"byte_end":89967,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"! // inputs. The meaning of \"small\" varies, however, depending on the","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":89968,"byte_end":90039,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"! // platform and the number of threads. (On x86_64, the cutoff tends to be","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90040,"byte_end":90117,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! // around 128 KiB.) You should benchmark your own use case to see whether","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90118,"byte_end":90195,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"! // multi-threading helps.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90196,"byte_end":90225,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"! # #[cfg(feature = \"rayon\")]","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90226,"byte_end":90257,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"! # {","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90258,"byte_end":90265,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! # fn some_large_input() -> &'static [u8] { b\"foo\" }","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90266,"byte_end":90321,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"! let input: &[u8] = some_large_input();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90322,"byte_end":90364,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"! let mut hasher = blake3::Hasher::new();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90365,"byte_end":90408,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"! hasher.update_with_join::<blake3::join::RayonJoin>(input);","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90409,"byte_end":90471,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"! let hash = hasher.finalize();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90472,"byte_end":90505,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90506,"byte_end":90513,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90514,"byte_end":90521,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90522,"byte_end":90525,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! [`Hasher::update_with_join`]: ../struct.Hasher.html#method.update_with_join","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90526,"byte_end":90605,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! [`Hasher::update`]: ../struct.Hasher.html#method.update","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90606,"byte_end":90665,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"! [`hash`]: ../fn.hash.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90666,"byte_end":90695,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"! [`rayon::join`]: https://docs.rs/rayon/1.3.0/rayon/fn.join.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90696,"byte_end":90763,"line_start":45,"line_end":45,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":170},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90922,"byte_end":90926,"line_start":50,"line_end":50,"column_start":11,"column_end":15},"name":"Join","qualname":"::join::Join","value":"Join","parent":null,"children":[{"krate":0,"index":171}],"decl_id":null,"docs":" The trait that abstracts over single-threaded and multi-threaded recursion.","sig":null,"attributes":[{"value":"/ The trait that abstracts over single-threaded and multi-threaded recursion.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90765,"byte_end":90844,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90845,"byte_end":90848,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ See the [`join` module docs](index.html) for more details.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90849,"byte_end":90911,"line_start":49,"line_end":49,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":90936,"byte_end":90940,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"join","qualname":"::join::Join::join","value":"pub fn join<A, B, RA, RB>(A, B, usize, usize) -> (RA, RB) where A: FnOnce() ->\nRA + Send, B: FnOnce() -> RB + Send, RA: Send, RB: Send","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":176},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":91455,"byte_end":91465,"line_start":65,"line_end":65,"column_start":10,"column_end":20},"name":"SerialJoin","qualname":"::join::SerialJoin","value":"pub enum SerialJoin { }","parent":null,"children":[],"decl_id":null,"docs":" The trivial, serial implementation of `Join`. The left and right sides are\n executed one after the other, on the calling thread. The standalone hashing\n functions and the `Hasher::update` method use this implementation\n internally.","sig":null,"attributes":[{"value":"/ The trivial, serial implementation of `Join`. The left and right sides are","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":91134,"byte_end":91212,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed one after the other, on the calling thread. The standalone hashing","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":91213,"byte_end":91292,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ functions and the `Hasher::update` method use this implementation","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":91293,"byte_end":91362,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ internally.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":91363,"byte_end":91378,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":91379,"byte_end":91382,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ See the [`join` module docs](index.html) for more details.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":91383,"byte_end":91445,"line_start":64,"line_end":64,"column_start":1,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":3410,"byte_end":3417,"line_start":107,"line_end":107,"column_start":11,"column_end":18},"name":"OUT_LEN","qualname":"::OUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a [`Hash`](struct.Hash.html), 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a [`Hash`](struct.Hash.html), 32.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":3339,"byte_end":3399,"line_start":106,"line_end":106,"column_start":1,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":3480,"byte_end":3487,"line_start":110,"line_end":110,"column_start":11,"column_end":18},"name":"KEY_LEN","qualname":"::KEY_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a key, 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a key, 32.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":3432,"byte_end":3469,"line_start":109,"line_end":109,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":3663,"byte_end":3672,"line_start":115,"line_end":115,"column_start":11,"column_end":20},"name":"BLOCK_LEN","qualname":"::BLOCK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":3711,"byte_end":3720,"line_start":117,"line_end":117,"column_start":11,"column_end":20},"name":"CHUNK_LEN","qualname":"::CHUNK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":3761,"byte_end":3770,"line_start":119,"line_end":119,"column_start":11,"column_end":20},"name":"MAX_DEPTH","qualname":"::MAX_DEPTH","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":541},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7044,"byte_end":7048,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"Hash","qualname":"::Hash","value":"","parent":null,"children":[],"decl_id":null,"docs":" An output of the default size, 32 bytes, which provides constant-time\n equality checking.","sig":null,"attributes":[{"value":"/ An output of the default size, 32 bytes, which provides constant-time","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":5446,"byte_end":5519,"line_start":165,"line_end":165,"column_start":1,"column_end":74}},{"value":"/ equality checking.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":5520,"byte_end":5542,"line_start":166,"line_end":166,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":5543,"byte_end":5546,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `Hash` implements [`From`] and [`Into`] for `[u8; 32]`, and it provides an","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":5547,"byte_end":5625,"line_start":168,"line_end":168,"column_start":1,"column_end":79}},{"value":"/ explicit [`as_bytes`] method returning `&[u8; 32]`. However, byte arrays","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":5626,"byte_end":5702,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ and slices don't provide constant-time equality checking, which is often a","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":5703,"byte_end":5781,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ security requirement in software that handles private data. `Hash` doesn't","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":5782,"byte_end":5860,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ implement [`Deref`] or [`AsRef`], to avoid situations where a type","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":5861,"byte_end":5931,"line_start":172,"line_end":172,"column_start":1,"column_end":71}},{"value":"/ conversion happens implicitly and the constant-time property is","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":5932,"byte_end":5999,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ accidentally lost.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6000,"byte_end":6022,"line_start":174,"line_end":174,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6023,"byte_end":6026,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ `Hash` provides the [`to_hex`] method for converting to hexadecimal. It","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6027,"byte_end":6102,"line_start":176,"line_end":176,"column_start":1,"column_end":76}},{"value":"/ doesn't directly support converting from hexadecimal, but here's an example","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6103,"byte_end":6182,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/ of doing that with the [`hex`] crate:","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6183,"byte_end":6224,"line_start":178,"line_end":178,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6225,"byte_end":6228,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6229,"byte_end":6236,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6237,"byte_end":6296,"line_start":181,"line_end":181,"column_start":1,"column_end":60}},{"value":"/ use std::convert::TryInto;","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6297,"byte_end":6327,"line_start":182,"line_end":182,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6328,"byte_end":6331,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let hash_hex = \"d74981efa70a0c880b8d8c1985d075dbcbf679b99a5f9914e5aaf96b831a9e24\";","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6332,"byte_end":6418,"line_start":184,"line_end":184,"column_start":1,"column_end":87}},{"value":"/ let hash_bytes = hex::decode(hash_hex)?;","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6419,"byte_end":6463,"line_start":185,"line_end":185,"column_start":1,"column_end":45}},{"value":"/ let hash_array: [u8; blake3::OUT_LEN] = hash_bytes[..].try_into()?;","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6464,"byte_end":6535,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ let hash: blake3::Hash = hash_array.into();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6536,"byte_end":6583,"line_start":187,"line_end":187,"column_start":1,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6584,"byte_end":6596,"line_start":188,"line_end":188,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6597,"byte_end":6604,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6605,"byte_end":6612,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6613,"byte_end":6616,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [`From`]: https://doc.rust-lang.org/std/convert/trait.From.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6617,"byte_end":6684,"line_start":192,"line_end":192,"column_start":1,"column_end":68}},{"value":"/ [`Into`]: https://doc.rust-lang.org/std/convert/trait.Into.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6685,"byte_end":6752,"line_start":193,"line_end":193,"column_start":1,"column_end":68}},{"value":"/ [`as_bytes`]: #method.as_bytes","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6753,"byte_end":6787,"line_start":194,"line_end":194,"column_start":1,"column_end":35}},{"value":"/ [`Deref`]: https://doc.rust-lang.org/stable/std/ops/trait.Deref.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6788,"byte_end":6860,"line_start":195,"line_end":195,"column_start":1,"column_end":73}},{"value":"/ [`AsRef`]: https://doc.rust-lang.org/std/convert/trait.AsRef.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6861,"byte_end":6930,"line_start":196,"line_end":196,"column_start":1,"column_end":70}},{"value":"/ [`to_hex`]: #method.to_hex","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6931,"byte_end":6961,"line_start":197,"line_end":197,"column_start":1,"column_end":31}},{"value":"/ [`hex`]: https://crates.io/crates/hex","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":6962,"byte_end":7003,"line_start":198,"line_end":198,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7280,"byte_end":7288,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The bytes of the `Hash`. Note that byte arrays don't provide\n constant-time equality checking, so if  you need to compare hashes,\n prefer the `Hash` type.\n","sig":null,"attributes":[{"value":"/ The bytes of the `Hash`. Note that byte arrays don't provide","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7082,"byte_end":7146,"line_start":203,"line_end":203,"column_start":5,"column_end":69}},{"value":"/ constant-time equality checking, so if  you need to compare hashes,","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7151,"byte_end":7222,"line_start":204,"line_end":204,"column_start":5,"column_end":76}},{"value":"/ prefer the `Hash` type.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7227,"byte_end":7254,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7259,"byte_end":7268,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7738,"byte_end":7744,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Hash>::to_hex","value":"pub fn to_hex(&Self) -> ArrayString<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":" The hexadecimal encoding of the `Hash`. The returned [`ArrayString`] is\n a fixed size and doesn't allocate memory on the heap. Note that\n [`ArrayString`] doesn't provide constant-time equality checking, so if\n you need to compare hashes, prefer the `Hash` type.","sig":null,"attributes":[{"value":"/ The hexadecimal encoding of the `Hash`. The returned [`ArrayString`] is","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7343,"byte_end":7418,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ a fixed size and doesn't allocate memory on the heap. Note that","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7423,"byte_end":7490,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ [`ArrayString`] doesn't provide constant-time equality checking, so if","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7495,"byte_end":7569,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ you need to compare hashes, prefer the `Hash` type.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7574,"byte_end":7629,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7634,"byte_end":7637,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`ArrayString`]: https://docs.rs/arrayvec/0.5.1/arrayvec/struct.ArrayString.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7642,"byte_end":7726,"line_start":216,"line_end":216,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":578},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":14391,"byte_end":14394,"line_start":442,"line_end":442,"column_start":5,"column_end":8},"name":"Yes","qualname":"::IncrementCounter::Yes","value":"IncrementCounter::Yes","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":580},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":14400,"byte_end":14402,"line_start":443,"line_end":443,"column_start":5,"column_end":7},"name":"No","qualname":"::IncrementCounter::No","value":"IncrementCounter::No","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":577},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":14368,"byte_end":14384,"line_start":441,"line_end":441,"column_start":10,"column_end":26},"name":"IncrementCounter","qualname":"::IncrementCounter","value":"pub enum IncrementCounter { Yes, No, }","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":580}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25373,"byte_end":25377,"line_start":714,"line_end":714,"column_start":8,"column_end":12},"name":"hash","qualname":"::hash","value":"pub fn hash(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The default hash function.","sig":null,"attributes":[{"value":"/ The default hash function.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":24992,"byte_end":25022,"line_start":705,"line_end":705,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25023,"byte_end":25026,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ For an incremental version that accepts multiple writes, see [`Hasher::update`].","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25027,"byte_end":25111,"line_start":707,"line_end":707,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25112,"byte_end":25115,"line_start":708,"line_end":708,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multi-threading support, see","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25116,"byte_end":25193,"line_start":709,"line_end":709,"column_start":1,"column_end":78}},{"value":"/ [`Hasher::update_with_join`].","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25194,"byte_end":25227,"line_start":710,"line_end":710,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25228,"byte_end":25231,"line_start":711,"line_end":711,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::update`]: struct.Hasher.html#method.update","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25232,"byte_end":25288,"line_start":712,"line_end":712,"column_start":1,"column_end":57}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25289,"byte_end":25365,"line_start":713,"line_end":713,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":279},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26009,"byte_end":26019,"line_start":730,"line_end":730,"column_start":8,"column_end":18},"name":"keyed_hash","qualname":"::keyed_hash","value":"pub fn keyed_hash(&[u8; ], &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The keyed hash function.","sig":null,"attributes":[{"value":"/ The keyed hash function.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25452,"byte_end":25480,"line_start":718,"line_end":718,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25481,"byte_end":25484,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ This is suitable for use as a message authentication code, for","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25485,"byte_end":25551,"line_start":720,"line_end":720,"column_start":1,"column_end":67}},{"value":"/ example to replace an HMAC instance.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25552,"byte_end":25592,"line_start":721,"line_end":721,"column_start":1,"column_end":41}},{"value":"/  In that use case, the constant-time equality checking provided by","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25593,"byte_end":25663,"line_start":722,"line_end":722,"column_start":1,"column_end":71}},{"value":"/ [`Hash`](struct.Hash.html) is almost always a security requirement, and","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25664,"byte_end":25739,"line_start":723,"line_end":723,"column_start":1,"column_end":76}},{"value":"/ callers need to be careful not to compare MACs as raw bytes.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25740,"byte_end":25804,"line_start":724,"line_end":724,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25805,"byte_end":25808,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multi-threading support, see","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25809,"byte_end":25886,"line_start":726,"line_end":726,"column_start":1,"column_end":78}},{"value":"/ [`Hasher::update_with_join`].","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25887,"byte_end":25920,"line_start":727,"line_end":727,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25921,"byte_end":25924,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":25925,"byte_end":26001,"line_start":729,"line_end":729,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":281},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":28125,"byte_end":28135,"line_start":768,"line_end":768,"column_start":8,"column_end":18},"name":"derive_key","qualname":"::derive_key","value":"pub fn derive_key(&str, &[u8], &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" The key derivation function.","sig":null,"attributes":[{"value":"/ The key derivation function.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26191,"byte_end":26223,"line_start":735,"line_end":735,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26224,"byte_end":26227,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ Given cryptographic key material of any length and a context string of any","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26228,"byte_end":26306,"line_start":737,"line_end":737,"column_start":1,"column_end":79}},{"value":"/ length, this function outputs a derived subkey of any length. **The context","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26307,"byte_end":26386,"line_start":738,"line_end":738,"column_start":1,"column_end":80}},{"value":"/ string should be hardcoded, globally unique, and application-specific.** A","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26387,"byte_end":26465,"line_start":739,"line_end":739,"column_start":1,"column_end":79}},{"value":"/ good default format for such strings is `\"[application] [commit timestamp]","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26466,"byte_end":26544,"line_start":740,"line_end":740,"column_start":1,"column_end":79}},{"value":"/ [purpose]\"`, e.g., `\"example.com 2019-12-25 16:18:03 session tokens v1\"`.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26545,"byte_end":26622,"line_start":741,"line_end":741,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26623,"byte_end":26626,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ Key derivation is important when you want to use the same key in multiple","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26627,"byte_end":26704,"line_start":743,"line_end":743,"column_start":1,"column_end":78}},{"value":"/ algorithms or use cases. Using the same key with different cryptographic","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26705,"byte_end":26781,"line_start":744,"line_end":744,"column_start":1,"column_end":77}},{"value":"/ algorithms is generally forbidden, and deriving a separate subkey for each","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26782,"byte_end":26860,"line_start":745,"line_end":745,"column_start":1,"column_end":79}},{"value":"/ use case protects you from bad interactions. Derived keys also mitigate the","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26861,"byte_end":26940,"line_start":746,"line_end":746,"column_start":1,"column_end":80}},{"value":"/ damage from one part of your application accidentally leaking its key.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":26941,"byte_end":27015,"line_start":747,"line_end":747,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27016,"byte_end":27019,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ As a rare exception to that general rule, however, it is possible to use","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27020,"byte_end":27096,"line_start":749,"line_end":749,"column_start":1,"column_end":77}},{"value":"/ `derive_key` itself with key material that you are already using with","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27097,"byte_end":27170,"line_start":750,"line_end":750,"column_start":1,"column_end":74}},{"value":"/ another algorithm. You might need to do this if you're adding features to","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27171,"byte_end":27248,"line_start":751,"line_end":751,"column_start":1,"column_end":78}},{"value":"/ an existing application, which does not yet use key derivation internally.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27249,"byte_end":27327,"line_start":752,"line_end":752,"column_start":1,"column_end":79}},{"value":"/ However, you still must not share key material with algorithms that forbid","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27328,"byte_end":27406,"line_start":753,"line_end":753,"column_start":1,"column_end":79}},{"value":"/ key reuse entirely, like a one-time pad.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27407,"byte_end":27451,"line_start":754,"line_end":754,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27452,"byte_end":27455,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ Note that BLAKE3 is not a password hash, and **`derive_key` should never be","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27456,"byte_end":27535,"line_start":756,"line_end":756,"column_start":1,"column_end":80}},{"value":"/ used with passwords.** Instead, use a dedicated password hash like","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27536,"byte_end":27606,"line_start":757,"line_end":757,"column_start":1,"column_end":71}},{"value":"/ [Argon2]. Password hashes are entirely different from generic hash","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27607,"byte_end":27677,"line_start":758,"line_end":758,"column_start":1,"column_end":71}},{"value":"/ functions, with opposite design requirements.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27678,"byte_end":27727,"line_start":759,"line_end":759,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27728,"byte_end":27731,"line_start":760,"line_end":760,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multi-threading support, see","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27732,"byte_end":27809,"line_start":761,"line_end":761,"column_start":1,"column_end":78}},{"value":"/ [`Hasher::update_with_join`].","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27810,"byte_end":27843,"line_start":762,"line_end":762,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27844,"byte_end":27847,"line_start":763,"line_end":763,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::new_derive_key`]: struct.Hasher.html#method.new_derive_key","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27848,"byte_end":27920,"line_start":764,"line_end":764,"column_start":1,"column_end":73}},{"value":"/ [`Hasher::finalize_xof`]: struct.Hasher.html#method.finalize_xof","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27921,"byte_end":27989,"line_start":765,"line_end":765,"column_start":1,"column_end":69}},{"value":"/ [Argon2]: https://en.wikipedia.org/wiki/Argon2","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":27990,"byte_end":28040,"line_start":766,"line_end":766,"column_start":1,"column_end":51}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":28041,"byte_end":28117,"line_start":767,"line_end":767,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":601},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30291,"byte_end":30297,"line_start":831,"line_end":831,"column_start":12,"column_end":18},"name":"Hasher","qualname":"::Hasher","value":"Hasher {  }","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"decl_id":null,"docs":" An incremental hash state that can accept any number of writes.","sig":null,"attributes":[{"value":"/ An incremental hash state that can accept any number of writes.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":28977,"byte_end":29044,"line_start":795,"line_end":795,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29045,"byte_end":29048,"line_start":796,"line_end":796,"column_start":1,"column_end":4}},{"value":"/ In addition to its inherent methods, this type implements several commonly","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29049,"byte_end":29127,"line_start":797,"line_end":797,"column_start":1,"column_end":79}},{"value":"/ used traits from the [`digest`](https://crates.io/crates/digest) and","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29128,"byte_end":29200,"line_start":798,"line_end":798,"column_start":1,"column_end":73}},{"value":"/ [`crypto_mac`](https://crates.io/crates/crypto-mac) crates.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29201,"byte_end":29264,"line_start":799,"line_end":799,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29265,"byte_end":29268,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ **Performance note:** The [`update`] and [`update_with_join`] methods","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29269,"byte_end":29342,"line_start":801,"line_end":801,"column_start":1,"column_end":74}},{"value":"/ perform poorly when the caller's input buffer is small. See their method","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29343,"byte_end":29419,"line_start":802,"line_end":802,"column_start":1,"column_end":77}},{"value":"/ docs below. A 16 KiB buffer is large enough to leverage all currently","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29420,"byte_end":29493,"line_start":803,"line_end":803,"column_start":1,"column_end":74}},{"value":"/ supported SIMD instruction sets.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29494,"byte_end":29530,"line_start":804,"line_end":804,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29531,"byte_end":29534,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29535,"byte_end":29549,"line_start":806,"line_end":806,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29550,"byte_end":29553,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29554,"byte_end":29561,"line_start":808,"line_end":808,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29562,"byte_end":29621,"line_start":809,"line_end":809,"column_start":1,"column_end":60}},{"value":"/ // Hash an input incrementally.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29622,"byte_end":29657,"line_start":810,"line_end":810,"column_start":1,"column_end":36}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29658,"byte_end":29701,"line_start":811,"line_end":811,"column_start":1,"column_end":44}},{"value":"/ hasher.update(b\"foo\");","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29702,"byte_end":29728,"line_start":812,"line_end":812,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"bar\");","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29729,"byte_end":29755,"line_start":813,"line_end":813,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"baz\");","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29756,"byte_end":29782,"line_start":814,"line_end":814,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(hasher.finalize(), blake3::hash(b\"foobarbaz\"));","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29783,"byte_end":29845,"line_start":815,"line_end":815,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29846,"byte_end":29849,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/ // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29850,"byte_end":29917,"line_start":817,"line_end":817,"column_start":1,"column_end":68}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29918,"byte_end":29949,"line_start":818,"line_end":818,"column_start":1,"column_end":32}},{"value":"/ let mut output = [0; 1000];","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29950,"byte_end":29981,"line_start":819,"line_end":819,"column_start":1,"column_end":32}},{"value":"/ let mut output_reader = hasher.finalize_xof();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":29982,"byte_end":30032,"line_start":820,"line_end":820,"column_start":1,"column_end":51}},{"value":"/ output_reader.fill(&mut output);","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30033,"byte_end":30069,"line_start":821,"line_end":821,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(&output[..32], blake3::hash(b\"foobarbaz\").as_bytes());","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30070,"byte_end":30139,"line_start":822,"line_end":822,"column_start":1,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30140,"byte_end":30147,"line_start":823,"line_end":823,"column_start":1,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30148,"byte_end":30160,"line_start":824,"line_end":824,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30161,"byte_end":30168,"line_start":825,"line_end":825,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30169,"byte_end":30176,"line_start":826,"line_end":826,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30177,"byte_end":30180,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ [`update`]: #method.update","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30181,"byte_end":30211,"line_start":828,"line_end":828,"column_start":1,"column_end":31}},{"value":"/ [`update_with_join`]: #method.update_with_join","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30212,"byte_end":30262,"line_start":829,"line_end":829,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31076,"byte_end":31079,"line_start":852,"line_end":852,"column_start":12,"column_end":15},"name":"new","qualname":"<Hasher>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the regular hash function.\n","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the regular hash function.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31005,"byte_end":31064,"line_start":851,"line_end":851,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31285,"byte_end":31294,"line_start":860,"line_end":860,"column_start":12,"column_end":21},"name":"new_keyed","qualname":"<Hasher>::new_keyed","value":"pub fn new_keyed(&[u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the keyed hash function. See\n [`keyed_hash`].","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the keyed hash function. See","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31137,"byte_end":31198,"line_start":856,"line_end":856,"column_start":5,"column_end":66}},{"value":"/ [`keyed_hash`].","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31203,"byte_end":31222,"line_start":857,"line_end":857,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31227,"byte_end":31230,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ [`keyed_hash`]: fn.keyed_hash.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31235,"byte_end":31273,"line_start":859,"line_end":859,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31694,"byte_end":31708,"line_start":870,"line_end":870,"column_start":12,"column_end":26},"name":"new_derive_key","qualname":"<Hasher>::new_derive_key","value":"pub fn new_derive_key(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the key derivation function. See\n [`derive_key`]. The context string should be hardcoded, globally\n unique, and application-specific.","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the key derivation function. See","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31451,"byte_end":31516,"line_start":865,"line_end":865,"column_start":5,"column_end":70}},{"value":"/ [`derive_key`]. The context string should be hardcoded, globally","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31521,"byte_end":31589,"line_start":866,"line_end":866,"column_start":5,"column_end":73}},{"value":"/ unique, and application-specific.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31594,"byte_end":31631,"line_start":867,"line_end":867,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31636,"byte_end":31639,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ [`derive_key`]: fn.derive_key.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":31644,"byte_end":31682,"line_start":869,"line_end":869,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":32413,"byte_end":32418,"line_start":883,"line_end":883,"column_start":12,"column_end":17},"name":"reset","qualname":"<Hasher>::reset","value":"pub fn reset(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Reset the `Hasher` to its initial state.","sig":null,"attributes":[{"value":"/ Reset the `Hasher` to its initial state.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":32003,"byte_end":32047,"line_start":876,"line_end":876,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":32052,"byte_end":32055,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ This is functionally the same as overwriting the `Hasher` with a new","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":32060,"byte_end":32132,"line_start":878,"line_end":878,"column_start":5,"column_end":77}},{"value":"/ one, using the same key or context string if any. However, depending on","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":32137,"byte_end":32212,"line_start":879,"line_end":879,"column_start":5,"column_end":80}},{"value":"/ how much inlining the optimizer does, moving a `Hasher` might copy its","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":32217,"byte_end":32291,"line_start":880,"line_end":880,"column_start":5,"column_end":79}},{"value":"/ entire CV stack, most of which is useless uninitialized bytes. This","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":32296,"byte_end":32367,"line_start":881,"line_end":881,"column_start":5,"column_end":76}},{"value":"/ methods avoids that copy.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":32372,"byte_end":32401,"line_start":882,"line_end":882,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36963,"byte_end":36969,"line_start":972,"line_end":972,"column_start":12,"column_end":18},"name":"update","qualname":"<Hasher>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input bytes to the hash state. You can call this any number of\n times.","sig":null,"attributes":[{"value":"/ Add input bytes to the hash state. You can call this any number of","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36286,"byte_end":36356,"line_start":959,"line_end":959,"column_start":5,"column_end":75}},{"value":"/ times.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36361,"byte_end":36371,"line_start":960,"line_end":960,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36376,"byte_end":36379,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ This method is always single-threaded. For multi-threading support, see","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36384,"byte_end":36459,"line_start":962,"line_end":962,"column_start":5,"column_end":80}},{"value":"/ `update_with_join` below.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36464,"byte_end":36493,"line_start":963,"line_end":963,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36498,"byte_end":36501,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ Note that the degree of SIMD parallelism that `update` can use is","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36506,"byte_end":36575,"line_start":965,"line_end":965,"column_start":5,"column_end":74}},{"value":"/ limited by the size of this input buffer. The 8 KiB buffer currently","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36580,"byte_end":36652,"line_start":966,"line_end":966,"column_start":5,"column_end":77}},{"value":"/ used by [`std::io::copy`] is enough to leverage AVX2, for example, but","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36657,"byte_end":36731,"line_start":967,"line_end":967,"column_start":5,"column_end":79}},{"value":"/ not enough to leverage AVX-512. A 16 KiB buffer is large enough to","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36736,"byte_end":36806,"line_start":968,"line_end":968,"column_start":5,"column_end":75}},{"value":"/ leverage all currently supported SIMD instruction sets.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36811,"byte_end":36870,"line_start":969,"line_end":969,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36875,"byte_end":36878,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":36883,"byte_end":36951,"line_start":971,"line_end":971,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38918,"byte_end":38934,"line_start":1010,"line_end":1010,"column_start":12,"column_end":28},"name":"update_with_join","qualname":"<Hasher>::update_with_join","value":"pub fn update_with_join<J: Join>(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input bytes to the hash state, as with `update`, but potentially\n using multi-threading. See the example below, and the\n [`join`](join/index.html) module for a more detailed explanation.","sig":null,"attributes":[{"value":"/ Add input bytes to the hash state, as with `update`, but potentially","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37072,"byte_end":37144,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ using multi-threading. See the example below, and the","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37149,"byte_end":37206,"line_start":977,"line_end":977,"column_start":5,"column_end":62}},{"value":"/ [`join`](join/index.html) module for a more detailed explanation.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37211,"byte_end":37280,"line_start":978,"line_end":978,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37285,"byte_end":37288,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ To get any performance benefit from multi-threading, the input buffer","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37293,"byte_end":37366,"line_start":980,"line_end":980,"column_start":5,"column_end":78}},{"value":"/ size needs to be very large. As a rule of thumb on x86_64, there is no","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37371,"byte_end":37445,"line_start":981,"line_end":981,"column_start":5,"column_end":79}},{"value":"/ benefit to multi-threading inputs less than 128 KiB. Other platforms","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37450,"byte_end":37522,"line_start":982,"line_end":982,"column_start":5,"column_end":77}},{"value":"/ have different thresholds, and in general you need to benchmark your","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37527,"byte_end":37599,"line_start":983,"line_end":983,"column_start":5,"column_end":77}},{"value":"/ specific use case. Where possible, memory mapping an entire input file","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37604,"byte_end":37678,"line_start":984,"line_end":984,"column_start":5,"column_end":79}},{"value":"/ is recommended, to take maximum advantage of multi-threading without","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37683,"byte_end":37755,"line_start":985,"line_end":985,"column_start":5,"column_end":77}},{"value":"/ needing to tune a specific buffer size. Where memory mapping is not","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37760,"byte_end":37831,"line_start":986,"line_end":986,"column_start":5,"column_end":76}},{"value":"/ possible, good multi-threading performance requires doing IO on a","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37836,"byte_end":37905,"line_start":987,"line_end":987,"column_start":5,"column_end":74}},{"value":"/ background thread, to avoid sleeping all your worker threads while the","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37910,"byte_end":37984,"line_start":988,"line_end":988,"column_start":5,"column_end":79}},{"value":"/ input buffer is (serially) refilled. This is quite complicated compared","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":37989,"byte_end":38064,"line_start":989,"line_end":989,"column_start":5,"column_end":80}},{"value":"/ to memory mapping.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38069,"byte_end":38091,"line_start":990,"line_end":990,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38096,"byte_end":38099,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38104,"byte_end":38117,"line_start":992,"line_end":992,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38122,"byte_end":38125,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38130,"byte_end":38137,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"/ // Hash a large input using multi-threading. Note that multi-threading","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38142,"byte_end":38216,"line_start":995,"line_end":995,"column_start":5,"column_end":79}},{"value":"/ // comes with some overhead, and it can actually hurt performance for small","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38221,"byte_end":38300,"line_start":996,"line_end":996,"column_start":5,"column_end":84}},{"value":"/ // inputs. The meaning of \"small\" varies, however, depending on the","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38305,"byte_end":38376,"line_start":997,"line_end":997,"column_start":5,"column_end":76}},{"value":"/ // platform and the number of threads. (On x86_64, the cutoff tends to be","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38381,"byte_end":38458,"line_start":998,"line_end":998,"column_start":5,"column_end":82}},{"value":"/ // around 128 KiB.) You should benchmark your own use case to see whether","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38463,"byte_end":38540,"line_start":999,"line_end":999,"column_start":5,"column_end":82}},{"value":"/ // multi-threading helps.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38545,"byte_end":38574,"line_start":1000,"line_end":1000,"column_start":5,"column_end":34}},{"value":"/ # #[cfg(feature = \"rayon\")]","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38579,"byte_end":38610,"line_start":1001,"line_end":1001,"column_start":5,"column_end":36}},{"value":"/ # {","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38615,"byte_end":38622,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ # fn some_large_input() -> &'static [u8] { b\"foo\" }","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38627,"byte_end":38682,"line_start":1003,"line_end":1003,"column_start":5,"column_end":60}},{"value":"/ let input: &[u8] = some_large_input();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38687,"byte_end":38729,"line_start":1004,"line_end":1004,"column_start":5,"column_end":47}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38734,"byte_end":38777,"line_start":1005,"line_end":1005,"column_start":5,"column_end":48}},{"value":"/ hasher.update_with_join::<blake3::join::RayonJoin>(input);","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38782,"byte_end":38844,"line_start":1006,"line_end":1006,"column_start":5,"column_end":67}},{"value":"/ let hash = hasher.finalize();","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38849,"byte_end":38882,"line_start":1007,"line_end":1007,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38887,"byte_end":38894,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":38899,"byte_end":38906,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":47840,"byte_end":47848,"line_start":1189,"line_end":1189,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Hasher>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return the [`Hash`](struct.Hash.html) of\n the input.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return the [`Hash`](struct.Hash.html) of","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":47594,"byte_end":47666,"line_start":1184,"line_end":1184,"column_start":5,"column_end":77}},{"value":"/ the input.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":47671,"byte_end":47685,"line_start":1185,"line_end":1185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":47690,"byte_end":47693,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":47698,"byte_end":47772,"line_start":1187,"line_end":1187,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":47777,"byte_end":47828,"line_start":1188,"line_end":1188,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48243,"byte_end":48255,"line_start":1200,"line_end":1200,"column_start":12,"column_end":24},"name":"finalize_xof","qualname":"<Hasher>::finalize_xof","value":"pub fn finalize_xof(&Self) -> OutputReader","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return an [`OutputReader`], which can\n supply any number of output bytes.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return an [`OutputReader`], which can","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":47917,"byte_end":47986,"line_start":1193,"line_end":1193,"column_start":5,"column_end":74}},{"value":"/ supply any number of output bytes.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":47991,"byte_end":48029,"line_start":1194,"line_end":1194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48034,"byte_end":48037,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48042,"byte_end":48116,"line_start":1196,"line_end":1196,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48121,"byte_end":48172,"line_start":1197,"line_end":1197,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48177,"byte_end":48180,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ [`OutputReader`]: struct.OutputReader.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48185,"byte_end":48231,"line_start":1199,"line_end":1199,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":616},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49244,"byte_end":49256,"line_start":1241,"line_end":1241,"column_start":12,"column_end":24},"name":"OutputReader","qualname":"::OutputReader","value":"OutputReader {  }","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" An incremental reader for extended output, returned by\n [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).\n","sig":null,"attributes":[{"value":"/ An incremental reader for extended output, returned by","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49087,"byte_end":49145,"line_start":1238,"line_end":1238,"column_start":1,"column_end":59}},{"value":"/ [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49146,"byte_end":49215,"line_start":1239,"line_end":1239,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50283,"byte_end":50287,"line_start":1269,"line_end":1269,"column_start":12,"column_end":16},"name":"fill","qualname":"<OutputReader>::fill","value":"pub fn fill(&mut Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Fill a buffer with output bytes and advance the position of the\n `OutputReader`. This is equivalent to [`Read::read`], except that it\n doesn't return a `Result`. Both methods always fill the entire buffer.","sig":null,"attributes":[{"value":"/ Fill a buffer with output bytes and advance the position of the","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49461,"byte_end":49528,"line_start":1254,"line_end":1254,"column_start":5,"column_end":72}},{"value":"/ `OutputReader`. This is equivalent to [`Read::read`], except that it","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49533,"byte_end":49605,"line_start":1255,"line_end":1255,"column_start":5,"column_end":77}},{"value":"/ doesn't return a `Result`. Both methods always fill the entire buffer.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49610,"byte_end":49684,"line_start":1256,"line_end":1256,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49689,"byte_end":49692,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ Note that `OutputReader` doesn't buffer output bytes internally, so","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49697,"byte_end":49768,"line_start":1258,"line_end":1258,"column_start":5,"column_end":76}},{"value":"/ calling `fill` repeatedly with a short-length or odd-length slice will","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49773,"byte_end":49847,"line_start":1259,"line_end":1259,"column_start":5,"column_end":79}},{"value":"/ end up performing the same compression multiple times. If you're","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49852,"byte_end":49920,"line_start":1260,"line_end":1260,"column_start":5,"column_end":73}},{"value":"/ reading output in a loop, prefer a slice length that's a multiple of","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49925,"byte_end":49997,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ 64.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50002,"byte_end":50009,"line_start":1262,"line_end":1262,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50014,"byte_end":50017,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ The maximum output size of BLAKE3 is 2<sup>64</sup>-1 bytes. If you try","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50022,"byte_end":50097,"line_start":1264,"line_end":1264,"column_start":5,"column_end":80}},{"value":"/ to extract more than that, for example by seeking near the end and","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50102,"byte_end":50172,"line_start":1265,"line_end":1265,"column_start":5,"column_end":75}},{"value":"/ reading further, the behavior is unspecified.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50177,"byte_end":50226,"line_start":1266,"line_end":1266,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50231,"byte_end":50234,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50239,"byte_end":50271,"line_start":1268,"line_end":1268,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51221,"byte_end":51229,"line_start":1290,"line_end":1290,"column_start":12,"column_end":20},"name":"position","qualname":"<OutputReader>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the current read position in the output stream. The position of\n a new `OutputReader` starts at 0, and each call to [`fill`] or\n [`Read::read`] moves the position forward by the number of bytes read.","sig":null,"attributes":[{"value":"/ Return the current read position in the output stream. The position of","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50909,"byte_end":50983,"line_start":1284,"line_end":1284,"column_start":5,"column_end":79}},{"value":"/ a new `OutputReader` starts at 0, and each call to [`fill`] or","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":50988,"byte_end":51054,"line_start":1285,"line_end":1285,"column_start":5,"column_end":71}},{"value":"/ [`Read::read`] moves the position forward by the number of bytes read.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51059,"byte_end":51133,"line_start":1286,"line_end":1286,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51138,"byte_end":51141,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ [`fill`]: #method.fill","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51146,"byte_end":51172,"line_start":1288,"line_end":1288,"column_start":5,"column_end":31}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51177,"byte_end":51209,"line_start":1289,"line_end":1289,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51659,"byte_end":51671,"line_start":1300,"line_end":1300,"column_start":12,"column_end":24},"name":"set_position","qualname":"<OutputReader>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Seek to a new read position in the output stream. This is equivalent to\n calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't\n return a `Result`.","sig":null,"attributes":[{"value":"/ Seek to a new read position in the output stream. This is equivalent to","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51339,"byte_end":51414,"line_start":1294,"line_end":1294,"column_start":5,"column_end":80}},{"value":"/ calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51419,"byte_end":51494,"line_start":1295,"line_end":1295,"column_start":5,"column_end":80}},{"value":"/ return a `Result`.","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51499,"byte_end":51521,"line_start":1296,"line_end":1296,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51526,"byte_end":51529,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ [`Seek::seek`]: #method.seek","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51534,"byte_end":51566,"line_start":1298,"line_end":1298,"column_start":5,"column_end":37}},{"value":"/ [`SeekFrom::Start`]: https://doc.rust-lang.org/std/io/enum.SeekFrom.html","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51571,"byte_end":51647,"line_start":1299,"line_end":1299,"column_start":5,"column_end":81}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":53505,"byte_end":53515,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57407,"byte_end":57415,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83383,"byte_end":83389,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83445,"byte_end":83451,"line_start":18,"line_end":18,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83587,"byte_end":83593,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83719,"byte_end":83725,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":84131,"byte_end":84137,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":84465,"byte_end":84477,"line_start":63,"line_end":63,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":84602,"byte_end":84608,"line_start":70,"line_end":70,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":84821,"byte_end":84827,"line_start":80,"line_end":80,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":91484,"byte_end":91494,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7071,"byte_end":7075,"line_start":202,"line_end":202,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8070,"byte_end":8074,"line_start":228,"line_end":228,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8333,"byte_end":8337,"line_start":243,"line_end":243,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8545,"byte_end":8549,"line_start":251,"line_end":251,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8699,"byte_end":8703,"line_start":258,"line_end":258,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8728,"byte_end":8732,"line_start":260,"line_end":260,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":9257,"byte_end":9263,"line_start":279,"line_end":279,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":10338,"byte_end":10348,"line_start":322,"line_end":322,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":13121,"byte_end":13131,"line_start":410,"line_end":410,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":14412,"byte_end":14428,"line_start":446,"line_end":446,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30765,"byte_end":30771,"line_start":842,"line_end":842,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48414,"byte_end":48420,"line_start":1206,"line_end":1206,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48667,"byte_end":48673,"line_start":1216,"line_end":1216,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48794,"byte_end":48800,"line_start":1224,"line_end":1224,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49317,"byte_end":49329,"line_start":1246,"line_end":1246,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51918,"byte_end":51930,"line_start":1307,"line_end":1307,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":52118,"byte_end":52130,"line_start":1314,"line_end":1314,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":52316,"byte_end":52328,"line_start":1323,"line_end":1323,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":2488,"byte_end":2492,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":2587,"byte_end":2595,"line_start":71,"line_end":71,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":3108,"byte_end":3114,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":132}},{"kind":"Mod","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":3125,"byte_end":3129,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":169}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/guts.rs","byte_start":53505,"byte_end":53515,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/platform.rs","byte_start":57407,"byte_end":57415,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83383,"byte_end":83389,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":601},"to":{"krate":20,"index":163}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83445,"byte_end":83451,"line_start":18,"line_end":18,"column_start":25,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":601},"to":{"krate":20,"index":158}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83587,"byte_end":83593,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":601},"to":{"krate":20,"index":165}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":83719,"byte_end":83725,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":601},"to":{"krate":20,"index":76}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":84131,"byte_end":84137,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":601},"to":{"krate":20,"index":125}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":84465,"byte_end":84477,"line_start":63,"line_end":63,"column_start":28,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":616},"to":{"krate":20,"index":122}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":84602,"byte_end":84608,"line_start":70,"line_end":70,"column_start":29,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":601},"to":{"krate":16,"index":25}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/traits.rs","byte_start":84821,"byte_end":84827,"line_start":80,"line_end":80,"column_start":26,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":601},"to":{"krate":16,"index":29}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/join.rs","byte_start":91484,"byte_end":91494,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":176},"to":{"krate":0,"index":170}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":7071,"byte_end":7075,"line_start":202,"line_end":202,"column_start":6,"column_end":10},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8070,"byte_end":8074,"line_start":228,"line_end":228,"column_start":30,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":1844}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8333,"byte_end":8337,"line_start":243,"line_end":243,"column_start":20,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":1652}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8545,"byte_end":8549,"line_start":251,"line_end":251,"column_start":35,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":1652}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8699,"byte_end":8703,"line_start":258,"line_end":258,"column_start":13,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":1657}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":8728,"byte_end":8732,"line_start":260,"line_end":260,"column_start":21,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":541},"to":{"krate":2,"index":6202}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":9257,"byte_end":9263,"line_start":279,"line_end":279,"column_start":6,"column_end":12},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":10338,"byte_end":10348,"line_start":322,"line_end":322,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":13121,"byte_end":13131,"line_start":410,"line_end":410,"column_start":21,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":6202}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":14412,"byte_end":14428,"line_start":446,"line_end":446,"column_start":6,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":30765,"byte_end":30771,"line_start":842,"line_end":842,"column_start":6,"column_end":12},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48414,"byte_end":48420,"line_start":1206,"line_end":1206,"column_start":21,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":601},"to":{"krate":2,"index":6202}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48667,"byte_end":48673,"line_start":1216,"line_end":1216,"column_start":18,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":601},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":48794,"byte_end":48800,"line_start":1224,"line_end":1224,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":601},"to":{"krate":1,"index":3020}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":49317,"byte_end":49329,"line_start":1246,"line_end":1246,"column_start":6,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":51918,"byte_end":51930,"line_start":1307,"line_end":1307,"column_start":21,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":616},"to":{"krate":2,"index":6202}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":52118,"byte_end":52130,"line_start":1314,"line_end":1314,"column_start":24,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":616},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/blake3-0.3.5/src/lib.rs","byte_start":52316,"byte_end":52328,"line_start":1323,"line_end":1323,"column_start":24,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":616},"to":{"krate":1,"index":3038}}]}