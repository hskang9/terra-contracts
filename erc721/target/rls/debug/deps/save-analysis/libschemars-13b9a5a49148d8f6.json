{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6","program":"/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","schemars","/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"schemars_derive\"","-C","metadata=13b9a5a49148d8f6","-C","extra-filename=-13b9a5a49148d8f6","--out-dir","/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","-L","dependency=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","--extern","schemars_derive=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libschemars_derive-318a5f788b6dc0b2.so","--extern","serde=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libserde-506307e5cd14dac8.rmeta","--extern","serde_json=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libserde_json-abde62c5b42f1847.rmeta","--cap-lints","allow","--cfg","num_nonzero_signed","--cfg","std_atomic64","--cfg","std_atomic","--error-format=json","--sysroot","/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libschemars-13b9a5a49148d8f6.rmeta"},"prelude":{"crate_id":{"name":"schemars","disambiguator":[7996094239225026255,3293298680803093786]},"crate_root":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src","external_crates":[{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","num":15,"id":{"name":"schemars_derive","disambiguator":[15413299108717587701,16674777459253465408]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","num":16,"id":{"name":"serde_json","disambiguator":[9934722604382979822,15219022249723342748]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","num":17,"id":{"name":"serde","disambiguator":[6972129048178836725,6892762498666106127]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","num":18,"id":{"name":"serde_derive","disambiguator":[14746363068757113999,2138961080548715939]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","num":19,"id":{"name":"itoa","disambiguator":[9877056312624357124,3406744992755025629]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","num":20,"id":{"name":"ryu","disambiguator":[10020548451841985579,3681395635925989190]}}],"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":0,"byte_end":10871,"line_start":1,"line_end":346,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":7160,"byte_end":7161,"line_start":237,"line_end":237,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"JsonSchema","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":7242,"byte_end":7252,"line_start":241,"line_end":241,"column_start":9,"column_end":19},"alias_span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":7256,"byte_end":7267,"line_start":241,"line_end":241,"column_start":23,"column_end":34},"name":"_serde_json","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":0,"byte_end":10871,"line_start":1,"line_end":346,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":48},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":226},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":267}],"decl_id":null,"docs":"Generate JSON Schema documents from Rust code","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":12},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":6580,"byte_end":6583,"line_start":217,"line_end":217,"column_start":10,"column_end":13},"name":"Map","qualname":"::Map","value":"std::collections::BTreeMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" The map type used by schemars types.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":15},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":6822,"byte_end":6825,"line_start":222,"line_end":222,"column_start":10,"column_end":13},"name":"Set","qualname":"::Set","value":"std::collections::BTreeSet<T>","parent":null,"children":[],"decl_id":null,"docs":" The set type used by schemars types.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":10969,"byte_end":10976,"line_start":6,"line_end":6,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Schema>::flatten","value":"fn (self, other: Self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":190},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gen","qualname":"::gen","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":1090},{"krate":0,"index":1103},{"krate":0,"index":1100},{"krate":0,"index":1098},{"krate":0,"index":1105},{"krate":0,"index":1117},{"krate":0,"index":1115},{"krate":0,"index":1114},{"krate":0,"index":1112},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":1119},{"krate":0,"index":1126},{"krate":0,"index":1124},{"krate":0,"index":1122},{"krate":0,"index":205},{"krate":0,"index":207}],"decl_id":null,"docs":" JSON Schema generator and settings.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":48478,"byte_end":48492,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"SchemaSettings","qualname":"::gen::SchemaSettings","value":"SchemaSettings { option_nullable, option_add_null_type, bool_schemas, definitions_path, meta_schema, allow_ref_siblings }","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"decl_id":null,"docs":" Settings to customize how Schemas are generated.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1091},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":48733,"byte_end":48748,"line_start":16,"line_end":16,"column_start":9,"column_end":24},"name":"option_nullable","qualname":"::gen::SchemaSettings::option_nullable","value":"bool","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will include a `nullable` property.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1092},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":48961,"byte_end":48981,"line_start":20,"line_end":20,"column_start":9,"column_end":29},"name":"option_add_null_type","qualname":"::gen::SchemaSettings::option_add_null_type","value":"bool","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" If `true`, schemas for [`Option<T>`](Option) will have `null` added to their [`type`](../schema/struct.SchemaObject.html#structfield.instance_type).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1093},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":49164,"byte_end":49176,"line_start":24,"line_end":24,"column_start":9,"column_end":21},"name":"bool_schemas","qualname":"::gen::SchemaSettings::bool_schemas","value":"gen::BoolSchemas","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" Controls whether trivial [`Bool`](../schema/enum.Schema.html#variant.Bool) schemas may be generated.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1094},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":49361,"byte_end":49377,"line_start":28,"line_end":28,"column_start":9,"column_end":25},"name":"definitions_path","qualname":"::gen::SchemaSettings::definitions_path","value":"std::string::String","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" A JSON pointer to the expected location of referenceable subschemas within the resulting root schema.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1095},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":49558,"byte_end":49569,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::gen::SchemaSettings::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" The URI of the meta-schema describing the structure of the generated schemas.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1096},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":49714,"byte_end":49732,"line_start":36,"line_end":36,"column_start":9,"column_end":27},"name":"allow_ref_siblings","qualname":"::gen::SchemaSettings::allow_ref_siblings","value":"bool","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" Whether schemas with a `$ref` property may have other properties set.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1106},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":49977,"byte_end":49984,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"Enabled","qualname":"::gen::BoolSchemas::Enabled","value":"BoolSchemas::Enabled","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" `Bool` schemas may be used.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1108},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":50152,"byte_end":50176,"line_start":46,"line_end":46,"column_start":5,"column_end":29},"name":"AdditionalPropertiesOnly","qualname":"::gen::BoolSchemas::AdditionalPropertiesOnly","value":"BoolSchemas::AdditionalPropertiesOnly","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" `Bool` schemas may only be used in a schema's [`additionalProperties`](../schema/struct.ObjectValidation.html#structfield.additional_properties) field.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1110},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":50227,"byte_end":50235,"line_start":48,"line_end":48,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::gen::BoolSchemas::Disabled","value":"BoolSchemas::Disabled","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" `Bool` schemas will never be used.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1105},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":49921,"byte_end":49932,"line_start":42,"line_end":42,"column_start":10,"column_end":21},"name":"BoolSchemas","qualname":"::gen::BoolSchemas","value":"BoolSchemas::{Enabled, AdditionalPropertiesOnly, Disabled}","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110}],"decl_id":null,"docs":" Controls whether trivial [`Bool`](../schema/enum.Schema.html#variant.Bool) schemas may be generated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":50528,"byte_end":50535,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"draft07","qualname":"<SchemaSettings>::draft07","value":"fn () -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema Draft 7](https://json-schema.org/specification-links.html#draft-7).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":51112,"byte_end":51124,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"draft2019_09","qualname":"<SchemaSettings>::draft2019_09","value":"fn () -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [JSON Schema 2019-09](https://json-schema.org/specification-links.html#2019-09-formerly-known-as-draft-8).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":51702,"byte_end":51710,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"openapi3","qualname":"<SchemaSettings>::openapi3","value":"fn () -> SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates `SchemaSettings` that conform to [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#schemaObject).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":52641,"byte_end":52645,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"with","qualname":"<SchemaSettings>::with","value":"fn (mut self, configure_fn: impl FnOnce(&mut Self)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the `SchemaSettings` by calling the given function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":52838,"byte_end":52852,"line_start":118,"line_end":118,"column_start":12,"column_end":26},"name":"into_generator","qualname":"<SchemaSettings>::into_generator","value":"fn (self) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`SchemaGenerator`] using these settings.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1119},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":53304,"byte_end":53319,"line_start":138,"line_end":138,"column_start":12,"column_end":27},"name":"SchemaGenerator","qualname":"::gen::SchemaGenerator","value":"SchemaGenerator {  }","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121}],"decl_id":null,"docs":" The main type used to generate JSON Schemas.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":53645,"byte_end":53648,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<SchemaGenerator>::new","value":"fn (settings: SchemaSettings) -> SchemaGenerator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SchemaGenerator` using the given settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":54152,"byte_end":54160,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"settings","qualname":"<SchemaGenerator>::settings","value":"fn (&self) -> &SchemaSettings","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`SchemaSettings`] being used by this `SchemaGenerator`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":55374,"byte_end":55389,"line_start":197,"line_end":197,"column_start":12,"column_end":27},"name":"make_extensible","qualname":"<SchemaGenerator>::make_extensible","value":"fn (&self, schema: &mut SchemaObject) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the given `SchemaObject` so that it may have validation, metadata or other properties set on it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":55911,"byte_end":55925,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"schema_for_any","qualname":"<SchemaGenerator>::schema_for_any","value":"fn (&self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Schema` that matches everything, such as the empty schema `{}`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":56402,"byte_end":56417,"line_start":219,"line_end":219,"column_start":12,"column_end":27},"name":"schema_for_none","qualname":"<SchemaGenerator>::schema_for_none","value":"fn (&self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Schema` that matches nothing, such as the schema `{ \"not\":{} }`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":57256,"byte_end":57269,"line_start":235,"line_end":235,"column_start":12,"column_end":25},"name":"subschema_for","qualname":"<SchemaGenerator>::subschema_for","value":"fn <T> (&mut self) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" Generates a JSON Schema for the type `T`, and returns either the schema itself or a `$ref` schema referencing `T`'s schema.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":58346,"byte_end":58357,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"definitions","qualname":"<SchemaGenerator>::definitions","value":"fn (&self) -> &Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":58728,"byte_end":58744,"line_start":268,"line_end":268,"column_start":12,"column_end":28},"name":"into_definitions","qualname":"<SchemaGenerator>::into_definitions","value":"fn (self) -> Map<String, Schema>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the collection of all [referenceable](JsonSchema::is_referenceable) schemas that have been generated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":59200,"byte_end":59215,"line_start":277,"line_end":277,"column_start":12,"column_end":27},"name":"root_schema_for","qualname":"<SchemaGenerator>::root_schema_for","value":"fn <T> (&mut self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Generates a root JSON Schema for the type `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":59952,"byte_end":59972,"line_start":292,"line_end":292,"column_start":12,"column_end":32},"name":"into_root_schema_for","qualname":"<SchemaGenerator>::into_root_schema_for","value":"fn <T> (mut self) -> RootSchema","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and generates a root JSON Schema for the type `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":61325,"byte_end":61336,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"dereference","qualname":"<SchemaGenerator>::dereference","value":"fn <'a> (&'a self, schema: &Schema) -> Option<&'a Schema>","parent":null,"children":[],"decl_id":null,"docs":" Attemps to find the schema that the given `schema` is referencing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":62105,"byte_end":62119,"line_start":350,"line_end":350,"column_start":12,"column_end":26},"name":"apply_metadata","qualname":"<SchemaGenerator>::apply_metadata","value":"fn (&self, schema: Schema, metadata: Option<Metadata>) -> Schema","parent":null,"children":[],"decl_id":null,"docs":" This function is only public for use by schemars_derive.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":226},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schema","qualname":"::schema","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":1128},{"krate":0,"index":1149},{"krate":0,"index":1142},{"krate":0,"index":1140},{"krate":0,"index":1138},{"krate":0,"index":1135},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":1155},{"krate":0,"index":1238},{"krate":0,"index":1168},{"krate":0,"index":1166},{"krate":0,"index":1164},{"krate":0,"index":1161},{"krate":0,"index":1159},{"krate":0,"index":1244},{"krate":0,"index":1351},{"krate":0,"index":1266},{"krate":0,"index":1264},{"krate":0,"index":1262},{"krate":0,"index":1259},{"krate":0,"index":1257},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":1363},{"krate":0,"index":1455},{"krate":0,"index":1381},{"krate":0,"index":1379},{"krate":0,"index":1377},{"krate":0,"index":1374},{"krate":0,"index":1372},{"krate":0,"index":254},{"krate":0,"index":1461},{"krate":0,"index":1531},{"krate":0,"index":1478},{"krate":0,"index":1476},{"krate":0,"index":1474},{"krate":0,"index":1471},{"krate":0,"index":1469},{"krate":0,"index":1537},{"krate":0,"index":1601},{"krate":0,"index":1552},{"krate":0,"index":1550},{"krate":0,"index":1548},{"krate":0,"index":1545},{"krate":0,"index":1543},{"krate":0,"index":1607},{"krate":0,"index":1665},{"krate":0,"index":1620},{"krate":0,"index":1618},{"krate":0,"index":1616},{"krate":0,"index":1613},{"krate":0,"index":1611},{"krate":0,"index":1671},{"krate":0,"index":1738},{"krate":0,"index":1687},{"krate":0,"index":1685},{"krate":0,"index":1683},{"krate":0,"index":1680},{"krate":0,"index":1678},{"krate":0,"index":1744},{"krate":0,"index":1814},{"krate":0,"index":1761},{"krate":0,"index":1759},{"krate":0,"index":1757},{"krate":0,"index":1754},{"krate":0,"index":1752},{"krate":0,"index":1820},{"krate":0,"index":1900},{"krate":0,"index":1851},{"krate":0,"index":1849},{"krate":0,"index":1847},{"krate":0,"index":1846},{"krate":0,"index":1844},{"krate":0,"index":1842},{"krate":0,"index":1840},{"krate":0,"index":1838},{"krate":0,"index":1835},{"krate":0,"index":1906},{"krate":0,"index":1945},{"krate":0,"index":1937},{"krate":0,"index":1934},{"krate":0,"index":1931},{"krate":0,"index":1927},{"krate":0,"index":1924},{"krate":0,"index":1917},{"krate":0,"index":1914},{"krate":0,"index":255},{"krate":0,"index":258}],"decl_id":null,"docs":" JSON Schema types.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1129},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":63289,"byte_end":63293,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Bool","qualname":"::schema::Schema::Bool","value":"Schema::Bool(bool)","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":" A trivial boolean JSON Schema.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1132},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":63337,"byte_end":63343,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::Schema::Object","value":"Schema::Object(SchemaObject)","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1128},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":63073,"byte_end":63079,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Schema","qualname":"::schema::Schema","value":"Schema::{Bool, Object}","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1132}],"decl_id":null,"docs":" A JSON Schema.\n","sig":null,"attributes":[{"value":"allow(clippy :: large_enum_variant)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":62883,"byte_end":62919,"line_start":10,"line_end":10,"column_start":1,"column_end":37}},{"value":"serde(untagged)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":63044,"byte_end":63062,"line_start":13,"line_end":13,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":63627,"byte_end":63634,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<Schema>::new_ref","value":"fn (reference: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":63975,"byte_end":63981,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<Schema>::is_ref","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1155},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64568,"byte_end":64578,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"RootSchema","qualname":"::schema::RootSchema","value":"RootSchema { meta_schema, schema, definitions }","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"decl_id":null,"docs":" The root object of a JSON Schema document.\n","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64512,"byte_end":64555,"line_start":60,"line_end":60,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1156},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64836,"byte_end":64847,"line_start":66,"line_end":66,"column_start":9,"column_end":20},"name":"meta_schema","qualname":"::schema::RootSchema::meta_schema","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1155},"children":[],"decl_id":null,"docs":" The `$schema` keyword.","sig":null,"attributes":[{"value":"serde(rename = \"$schema\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64757,"byte_end":64826,"line_start":65,"line_end":65,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1157},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64930,"byte_end":64936,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"name":"schema","qualname":"::schema::RootSchema::schema","value":"schema::SchemaObject","parent":{"krate":0,"index":1155},"children":[],"decl_id":null,"docs":" The root schema itself.\n","sig":null,"attributes":[{"value":"serde(flatten)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64903,"byte_end":64920,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1158},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":65536,"byte_end":65547,"line_start":78,"line_end":78,"column_start":9,"column_end":20},"name":"definitions","qualname":"::schema::RootSchema::definitions","value":"std::collections::BTreeMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":1155},"children":[],"decl_id":null,"docs":" The `definitions` keyword.","sig":null,"attributes":[{"value":"serde(alias = \"$defs\", skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":65462,"byte_end":65526,"line_start":77,"line_end":77,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":65791,"byte_end":65803,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"SchemaObject","qualname":"::schema::SchemaObject","value":"SchemaObject { metadata, instance_type, format, enum_values, const_value, subschemas, number, string, array, object, reference, extensions }","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256}],"decl_id":null,"docs":" A JSON Schema object.\n","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":65735,"byte_end":65778,"line_start":84,"line_end":84,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1245},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":66017,"byte_end":66025,"line_start":88,"line_end":88,"column_start":9,"column_end":17},"name":"metadata","qualname":"::schema::SchemaObject::metadata","value":"std::option::Option<std::boxed::Box<schema::Metadata>>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Properties which annotate the [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":65952,"byte_end":66007,"line_start":87,"line_end":87,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1246},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":66433,"byte_end":66446,"line_start":94,"line_end":94,"column_start":9,"column_end":22},"name":"instance_type","qualname":"::schema::SchemaObject::instance_type","value":"std::option::Option<schema::SingleOrVec<schema::InstanceType>>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" The `type` keyword.","sig":null,"attributes":[{"value":"serde(rename = \"type\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":66357,"byte_end":66423,"line_start":93,"line_end":93,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1247},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":66757,"byte_end":66763,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"format","qualname":"::schema::SchemaObject::format","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" The `format` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":66698,"byte_end":66747,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1248},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":67036,"byte_end":67047,"line_start":104,"line_end":104,"column_start":9,"column_end":20},"name":"enum_values","qualname":"::schema::SchemaObject::enum_values","value":"std::option::Option<std::vec::Vec<serde_json::value::Value>>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" The `enum` keyword.","sig":null,"attributes":[{"value":"serde(rename = \"enum\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":66960,"byte_end":67026,"line_start":103,"line_end":103,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1249},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":67394,"byte_end":67405,"line_start":113,"line_end":113,"column_start":9,"column_end":20},"name":"const_value","qualname":"::schema::SchemaObject::const_value","value":"std::option::Option<serde_json::value::Value>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" The `const` keyword.","sig":null,"attributes":[{"value":"serde(rename = \"const\", skip_serializing_if = \"Option::is_none\",\n        deserialize_with = \"allow_null\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":67250,"byte_end":67384,"line_start":108,"line_end":112,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1250},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":67598,"byte_end":67608,"line_start":116,"line_end":116,"column_start":9,"column_end":19},"name":"subschemas","qualname":"::schema::SchemaObject::subschemas","value":"std::option::Option<std::boxed::Box<schema::SubschemaValidation>>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":67533,"byte_end":67588,"line_start":115,"line_end":115,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1251},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":67806,"byte_end":67812,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"name":"number","qualname":"::schema::SchemaObject::number","value":"std::option::Option<std::boxed::Box<schema::NumberValidation>>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":67741,"byte_end":67796,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1252},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":68007,"byte_end":68013,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"name":"string","qualname":"::schema::SchemaObject::string","value":"std::option::Option<std::boxed::Box<schema::StringValidation>>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":67942,"byte_end":67997,"line_start":121,"line_end":121,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1253},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":68207,"byte_end":68212,"line_start":125,"line_end":125,"column_start":9,"column_end":14},"name":"array","qualname":"::schema::SchemaObject::array","value":"std::option::Option<std::boxed::Box<schema::ArrayValidation>>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":68142,"byte_end":68197,"line_start":124,"line_end":124,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1254},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":68406,"byte_end":68412,"line_start":128,"line_end":128,"column_start":9,"column_end":15},"name":"object","qualname":"::schema::SchemaObject::object","value":"std::option::Option<std::boxed::Box<schema::ObjectValidation>>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Properties of the [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"serde(flatten, deserialize_with = \"skip_if_default\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":68341,"byte_end":68396,"line_start":127,"line_end":127,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1255},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":68706,"byte_end":68715,"line_start":133,"line_end":133,"column_start":9,"column_end":18},"name":"reference","qualname":"::schema::SchemaObject::reference","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" The `$ref` keyword.","sig":null,"attributes":[{"value":"serde(rename = \"$ref\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":68630,"byte_end":68696,"line_start":132,"line_end":132,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1256},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":68892,"byte_end":68902,"line_start":136,"line_end":136,"column_start":9,"column_end":19},"name":"extensions","qualname":"::schema::SchemaObject::extensions","value":"std::collections::BTreeMap<std::string::String, serde_json::value::Value>","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Arbitrary extra properties which are not part of the JSON Schema specification, or which `schemars` does not support.\n","sig":null,"attributes":[{"value":"serde(flatten)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":68865,"byte_end":68882,"line_start":135,"line_end":135,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":70370,"byte_end":70377,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"new_ref","qualname":"<SchemaObject>::new_ref","value":"fn (reference: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `$ref` schema.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":70756,"byte_end":70762,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"is_ref","qualname":"<SchemaObject>::is_ref","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `$ref` schema.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":70854,"byte_end":70862,"line_start":197,"line_end":197,"column_start":31,"column_end":39},"name":"metadata","qualname":"<SchemaObject>::metadata","value":"fn (&mut self) -> &mut Metadata","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`Metadata`](#structfield.metadata), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":70906,"byte_end":70916,"line_start":198,"line_end":198,"column_start":31,"column_end":41},"name":"subschemas","qualname":"<SchemaObject>::subschemas","value":"fn (&mut self) -> &mut SubschemaValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`SubschemaValidation`](#structfield.subschemas), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":70971,"byte_end":70977,"line_start":199,"line_end":199,"column_start":31,"column_end":37},"name":"number","qualname":"<SchemaObject>::number","value":"fn (&mut self) -> &mut NumberValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`NumberValidation`](#structfield.number), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":71029,"byte_end":71035,"line_start":200,"line_end":200,"column_start":31,"column_end":37},"name":"string","qualname":"<SchemaObject>::string","value":"fn (&mut self) -> &mut StringValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`StringValidation`](#structfield.string), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":71087,"byte_end":71092,"line_start":201,"line_end":201,"column_start":31,"column_end":36},"name":"array","qualname":"<SchemaObject>::array","value":"fn (&mut self) -> &mut ArrayValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ArrayValidation`](#structfield.array), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":71143,"byte_end":71149,"line_start":202,"line_end":202,"column_start":31,"column_end":37},"name":"object","qualname":"<SchemaObject>::object","value":"fn (&mut self) -> &mut ObjectValidation","parent":null,"children":[],"decl_id":null,"docs":"Returns a mutable reference to this schema's [`ObjectValidation`](#structfield.object), creating it if it was `None`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1363},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":72029,"byte_end":72037,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::schema::Metadata","value":"Metadata { id, title, description, default, deprecated, read_only, write_only, examples }","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371}],"decl_id":null,"docs":" Properties which annotate a [`SchemaObject`] which typically have no effect when an object is being validated against the schema.\n","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":71973,"byte_end":72016,"line_start":224,"line_end":224,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1364},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":72283,"byte_end":72285,"line_start":230,"line_end":230,"column_start":9,"column_end":11},"name":"id","qualname":"::schema::Metadata::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" The `$id` keyword.","sig":null,"attributes":[{"value":"serde(rename = \"$id\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":72208,"byte_end":72273,"line_start":229,"line_end":229,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1365},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":72558,"byte_end":72563,"line_start":235,"line_end":235,"column_start":9,"column_end":14},"name":"title","qualname":"::schema::Metadata::title","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" The `title` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":72499,"byte_end":72548,"line_start":234,"line_end":234,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1366},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":72842,"byte_end":72853,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"name":"description","qualname":"::schema::Metadata::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" The `description` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":72783,"byte_end":72832,"line_start":239,"line_end":239,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1367},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":73170,"byte_end":73177,"line_start":248,"line_end":248,"column_start":9,"column_end":16},"name":"default","qualname":"::schema::Metadata::default","value":"std::option::Option<serde_json::value::Value>","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" The `default` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\", deserialize_with =\n        \"allow_null\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":73053,"byte_end":73160,"line_start":244,"line_end":247,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":1368},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":73434,"byte_end":73444,"line_start":253,"line_end":253,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::schema::Metadata::deprecated","value":"bool","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" The `deprecated` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":73382,"byte_end":73424,"line_start":252,"line_end":252,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":73704,"byte_end":73713,"line_start":258,"line_end":258,"column_start":9,"column_end":18},"name":"read_only","qualname":"::schema::Metadata::read_only","value":"bool","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" The `readOnly` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":73652,"byte_end":73694,"line_start":257,"line_end":257,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1370},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":73974,"byte_end":73984,"line_start":263,"line_end":263,"column_start":9,"column_end":19},"name":"write_only","qualname":"::schema::Metadata::write_only","value":"bool","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" The `writeOnly` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"is_false\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":73922,"byte_end":73964,"line_start":262,"line_end":262,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1371},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":74233,"byte_end":74241,"line_start":268,"line_end":268,"column_start":9,"column_end":17},"name":"examples","qualname":"::schema::Metadata::examples","value":"std::vec::Vec<serde_json::value::Value>","parent":{"krate":0,"index":1363},"children":[],"decl_id":null,"docs":" The `examples` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Vec::is_empty\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":74176,"byte_end":74223,"line_start":267,"line_end":267,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":74641,"byte_end":74660,"line_start":280,"line_end":280,"column_start":12,"column_end":31},"name":"SubschemaValidation","qualname":"::schema::SubschemaValidation","value":"SubschemaValidation { all_of, any_of, one_of, not, if_schema, then_schema, else_schema }","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions in terms of other schemas.\n","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":74585,"byte_end":74628,"line_start":279,"line_end":279,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1462},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":74886,"byte_end":74892,"line_start":285,"line_end":285,"column_start":9,"column_end":15},"name":"all_of","qualname":"::schema::SubschemaValidation::all_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" The `allOf` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":74827,"byte_end":74876,"line_start":284,"line_end":284,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1463},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":75138,"byte_end":75144,"line_start":290,"line_end":290,"column_start":9,"column_end":15},"name":"any_of","qualname":"::schema::SubschemaValidation::any_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" The `anyOf` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":75079,"byte_end":75128,"line_start":289,"line_end":289,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1464},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":75390,"byte_end":75396,"line_start":295,"line_end":295,"column_start":9,"column_end":15},"name":"one_of","qualname":"::schema::SubschemaValidation::one_of","value":"std::option::Option<std::vec::Vec<schema::Schema>>","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" The `oneOf` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":75331,"byte_end":75380,"line_start":294,"line_end":294,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1465},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":75638,"byte_end":75641,"line_start":300,"line_end":300,"column_start":9,"column_end":12},"name":"not","qualname":"::schema::SubschemaValidation::not","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" The `not` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":75579,"byte_end":75628,"line_start":299,"line_end":299,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1466},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":75896,"byte_end":75905,"line_start":305,"line_end":305,"column_start":9,"column_end":18},"name":"if_schema","qualname":"::schema::SubschemaValidation::if_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" The `if` keyword.","sig":null,"attributes":[{"value":"serde(rename = \"if\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":75822,"byte_end":75886,"line_start":304,"line_end":304,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1467},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":76166,"byte_end":76177,"line_start":310,"line_end":310,"column_start":9,"column_end":20},"name":"then_schema","qualname":"::schema::SubschemaValidation::then_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" The `then` keyword.","sig":null,"attributes":[{"value":"serde(rename = \"then\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":76090,"byte_end":76156,"line_start":309,"line_end":309,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1468},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":76438,"byte_end":76449,"line_start":315,"line_end":315,"column_start":9,"column_end":20},"name":"else_schema","qualname":"::schema::SubschemaValidation::else_schema","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" The `else` keyword.","sig":null,"attributes":[{"value":"serde(rename = \"else\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":76362,"byte_end":76428,"line_start":314,"line_end":314,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1537},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":76752,"byte_end":76768,"line_start":322,"line_end":322,"column_start":12,"column_end":28},"name":"NumberValidation","qualname":"::schema::NumberValidation","value":"NumberValidation { multiple_of, maximum, exclusive_maximum, minimum, exclusive_minimum }","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for numbers.\n","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":76696,"byte_end":76739,"line_start":321,"line_end":321,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1538},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":77022,"byte_end":77033,"line_start":327,"line_end":327,"column_start":9,"column_end":20},"name":"multiple_of","qualname":"::schema::NumberValidation::multiple_of","value":"std::option::Option<f64>","parent":{"krate":0,"index":1537},"children":[],"decl_id":null,"docs":" The `multipleOf` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":76963,"byte_end":77012,"line_start":326,"line_end":326,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1539},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":77293,"byte_end":77300,"line_start":332,"line_end":332,"column_start":9,"column_end":16},"name":"maximum","qualname":"::schema::NumberValidation::maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1537},"children":[],"decl_id":null,"docs":" The `maximum` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":77234,"byte_end":77283,"line_start":331,"line_end":331,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1540},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":77578,"byte_end":77595,"line_start":337,"line_end":337,"column_start":9,"column_end":26},"name":"exclusive_maximum","qualname":"::schema::NumberValidation::exclusive_maximum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1537},"children":[],"decl_id":null,"docs":" The `exclusiveMaximum` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":77519,"byte_end":77568,"line_start":336,"line_end":336,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1541},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":77855,"byte_end":77862,"line_start":342,"line_end":342,"column_start":9,"column_end":16},"name":"minimum","qualname":"::schema::NumberValidation::minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1537},"children":[],"decl_id":null,"docs":" The `minimum` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":77796,"byte_end":77845,"line_start":341,"line_end":341,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1542},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":78140,"byte_end":78157,"line_start":347,"line_end":347,"column_start":9,"column_end":26},"name":"exclusive_minimum","qualname":"::schema::NumberValidation::exclusive_minimum","value":"std::option::Option<f64>","parent":{"krate":0,"index":1537},"children":[],"decl_id":null,"docs":" The `exclusiveMinimum` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":78081,"byte_end":78130,"line_start":346,"line_end":346,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1607},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":78452,"byte_end":78468,"line_start":354,"line_end":354,"column_start":12,"column_end":28},"name":"StringValidation","qualname":"::schema::StringValidation","value":"StringValidation { max_length, min_length, pattern }","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for strings.\n","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":78396,"byte_end":78439,"line_start":353,"line_end":353,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1608},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":78720,"byte_end":78730,"line_start":359,"line_end":359,"column_start":9,"column_end":19},"name":"max_length","qualname":"::schema::StringValidation::max_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":1607},"children":[],"decl_id":null,"docs":" The `maxLength` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":78661,"byte_end":78710,"line_start":358,"line_end":358,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1609},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":78994,"byte_end":79004,"line_start":364,"line_end":364,"column_start":9,"column_end":19},"name":"min_length","qualname":"::schema::StringValidation::min_length","value":"std::option::Option<u32>","parent":{"krate":0,"index":1607},"children":[],"decl_id":null,"docs":" The `minLength` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":78935,"byte_end":78984,"line_start":363,"line_end":363,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1610},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":79264,"byte_end":79271,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"name":"pattern","qualname":"::schema::StringValidation::pattern","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1607},"children":[],"decl_id":null,"docs":" The `pattern` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":79205,"byte_end":79254,"line_start":368,"line_end":368,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1671},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":79568,"byte_end":79583,"line_start":376,"line_end":376,"column_start":12,"column_end":27},"name":"ArrayValidation","qualname":"::schema::ArrayValidation","value":"ArrayValidation { items, additional_items, max_items, min_items, unique_items, contains }","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for arrays.\n","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":79512,"byte_end":79555,"line_start":375,"line_end":375,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1672},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":79809,"byte_end":79814,"line_start":381,"line_end":381,"column_start":9,"column_end":14},"name":"items","qualname":"::schema::ArrayValidation::items","value":"std::option::Option<schema::SingleOrVec<schema::Schema>>","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" The `items` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":79750,"byte_end":79799,"line_start":380,"line_end":380,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1673},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":80088,"byte_end":80104,"line_start":386,"line_end":386,"column_start":9,"column_end":25},"name":"additional_items","qualname":"::schema::ArrayValidation::additional_items","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" The `additionalItems` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":80029,"byte_end":80078,"line_start":385,"line_end":385,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1674},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":80374,"byte_end":80383,"line_start":391,"line_end":391,"column_start":9,"column_end":18},"name":"max_items","qualname":"::schema::ArrayValidation::max_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" The `maxItems` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":80315,"byte_end":80364,"line_start":390,"line_end":390,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1675},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":80645,"byte_end":80654,"line_start":396,"line_end":396,"column_start":9,"column_end":18},"name":"min_items","qualname":"::schema::ArrayValidation::min_items","value":"std::option::Option<u32>","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" The `minItems` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":80586,"byte_end":80635,"line_start":395,"line_end":395,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1676},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":80922,"byte_end":80934,"line_start":401,"line_end":401,"column_start":9,"column_end":21},"name":"unique_items","qualname":"::schema::ArrayValidation::unique_items","value":"std::option::Option<bool>","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" The `uniqueItems` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":80863,"byte_end":80912,"line_start":400,"line_end":400,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1677},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":81179,"byte_end":81187,"line_start":406,"line_end":406,"column_start":9,"column_end":17},"name":"contains","qualname":"::schema::ArrayValidation::contains","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" The `contains` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":81120,"byte_end":81169,"line_start":405,"line_end":405,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1744},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":81490,"byte_end":81506,"line_start":413,"line_end":413,"column_start":12,"column_end":28},"name":"ObjectValidation","qualname":"::schema::ObjectValidation","value":"ObjectValidation { max_properties, min_properties, required, properties, pattern_properties, additional_properties, property_names }","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751}],"decl_id":null,"docs":" Properties of a [`SchemaObject`] which define validation assertions for objects.\n","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\", default)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":81434,"byte_end":81477,"line_start":412,"line_end":412,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":81766,"byte_end":81780,"line_start":418,"line_end":418,"column_start":9,"column_end":23},"name":"max_properties","qualname":"::schema::ObjectValidation::max_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" The `maxProperties` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":81707,"byte_end":81756,"line_start":417,"line_end":417,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":82052,"byte_end":82066,"line_start":423,"line_end":423,"column_start":9,"column_end":23},"name":"min_properties","qualname":"::schema::ObjectValidation::min_properties","value":"std::option::Option<u32>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" The `minProperties` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":81993,"byte_end":82042,"line_start":422,"line_end":422,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1747},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":82326,"byte_end":82334,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"name":"required","qualname":"::schema::ObjectValidation::required","value":"std::collections::BTreeSet<std::string::String>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" The `required` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Set::is_empty\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":82269,"byte_end":82316,"line_start":427,"line_end":427,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1748},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":82580,"byte_end":82590,"line_start":433,"line_end":433,"column_start":9,"column_end":19},"name":"properties","qualname":"::schema::ObjectValidation::properties","value":"std::collections::BTreeMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" The `properties` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":82523,"byte_end":82570,"line_start":432,"line_end":432,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1749},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":82858,"byte_end":82876,"line_start":438,"line_end":438,"column_start":9,"column_end":27},"name":"pattern_properties","qualname":"::schema::ObjectValidation::pattern_properties","value":"std::collections::BTreeMap<std::string::String, schema::Schema>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" The `patternProperties` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Map::is_empty\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":82801,"byte_end":82848,"line_start":437,"line_end":437,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1750},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83152,"byte_end":83173,"line_start":443,"line_end":443,"column_start":9,"column_end":30},"name":"additional_properties","qualname":"::schema::ObjectValidation::additional_properties","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" The `additionalProperties` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83093,"byte_end":83142,"line_start":442,"line_end":442,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1751},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83435,"byte_end":83449,"line_start":448,"line_end":448,"column_start":9,"column_end":23},"name":"property_names","qualname":"::schema::ObjectValidation::property_names","value":"std::option::Option<std::boxed::Box<schema::Schema>>","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" The `propertyNames` keyword.","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83376,"byte_end":83425,"line_start":447,"line_end":447,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1821},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83888,"byte_end":83892,"line_start":458,"line_end":458,"column_start":5,"column_end":9},"name":"Null","qualname":"::schema::InstanceType::Null","value":"InstanceType::Null","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1823},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83899,"byte_end":83906,"line_start":459,"line_end":459,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::schema::InstanceType::Boolean","value":"InstanceType::Boolean","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1825},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83913,"byte_end":83919,"line_start":460,"line_end":460,"column_start":5,"column_end":11},"name":"Object","qualname":"::schema::InstanceType::Object","value":"InstanceType::Object","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1827},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83926,"byte_end":83931,"line_start":461,"line_end":461,"column_start":5,"column_end":10},"name":"Array","qualname":"::schema::InstanceType::Array","value":"InstanceType::Array","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1829},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83938,"byte_end":83944,"line_start":462,"line_end":462,"column_start":5,"column_end":11},"name":"Number","qualname":"::schema::InstanceType::Number","value":"InstanceType::Number","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83951,"byte_end":83957,"line_start":463,"line_end":463,"column_start":5,"column_end":11},"name":"String","qualname":"::schema::InstanceType::String","value":"InstanceType::String","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1833},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83964,"byte_end":83971,"line_start":464,"line_end":464,"column_start":5,"column_end":12},"name":"Integer","qualname":"::schema::InstanceType::Integer","value":"InstanceType::Integer","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1820},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83868,"byte_end":83880,"line_start":457,"line_end":457,"column_start":10,"column_end":22},"name":"InstanceType","qualname":"::schema::InstanceType","value":"InstanceType::{Null, Boolean, Object, Array, Number, String, Integer}","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1833}],"decl_id":null,"docs":" The possible types of values in JSON Schema documents.","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":83823,"byte_end":83857,"line_start":456,"line_end":456,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1908},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":84350,"byte_end":84356,"line_start":474,"line_end":474,"column_start":5,"column_end":11},"name":"Single","qualname":"::schema::SingleOrVec::Single","value":"SingleOrVec::Single(Box<T>)","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1911},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":84371,"byte_end":84374,"line_start":475,"line_end":475,"column_start":5,"column_end":8},"name":"Vec","qualname":"::schema::SingleOrVec::Vec","value":"SingleOrVec::Vec(Vec<T>)","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1906},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":84328,"byte_end":84339,"line_start":473,"line_end":473,"column_start":10,"column_end":21},"name":"SingleOrVec","qualname":"::schema::SingleOrVec","value":"SingleOrVec::{Single, Vec}","parent":null,"children":[{"krate":0,"index":1908},{"krate":0,"index":1911}],"decl_id":null,"docs":" A type which can be serialized as a single item, or multiple items.","sig":null,"attributes":[{"value":"serde(untagged)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":84299,"byte_end":84317,"line_start":472,"line_end":472,"column_start":1,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":267},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":7778,"byte_end":7788,"line_start":262,"line_end":262,"column_start":11,"column_end":21},"name":"JsonSchema","qualname":"::JsonSchema","value":"JsonSchema","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"decl_id":null,"docs":" A type which can be described as a JSON Schema document.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":8208,"byte_end":8224,"line_start":269,"line_end":269,"column_start":8,"column_end":24},"name":"is_referenceable","qualname":"::JsonSchema::is_referenceable","value":"fn () -> bool","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Whether JSON Schemas generated for this type should be re-used where possible using the `$ref` keyword.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":8447,"byte_end":8458,"line_start":276,"line_end":276,"column_start":8,"column_end":19},"name":"schema_name","qualname":"::JsonSchema::schema_name","value":"fn () -> String","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" The name of the generated JSON Schema.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":8810,"byte_end":8821,"line_start":284,"line_end":284,"column_start":8,"column_end":19},"name":"json_schema","qualname":"::JsonSchema::json_schema","value":"fn (gen: &mut gen::SchemaGenerator) -> Schema","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Generates a JSON Schema for this type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":9125,"byte_end":9148,"line_start":291,"line_end":291,"column_start":8,"column_end":31},"name":"json_schema_for_flatten","qualname":"::JsonSchema::json_schema_for_flatten","value":"fn (gen: &mut gen::SchemaGenerator) -> Schema","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Helper for generating schemas for flattened `Option` fields.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":9482,"byte_end":9504,"line_start":300,"line_end":300,"column_start":8,"column_end":30},"name":"add_schema_as_property","qualname":"::JsonSchema::add_schema_as_property","value":"fn (gen: &mut gen::SchemaGenerator, parent: &mut SchemaObject, name: String, metadata: Option<schema::Metadata>, required: bool) -> ()","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Helper for generating schemas for `Option` fields.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":10928,"byte_end":10934,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":12111,"byte_end":12119,"line_start":44,"line_end":44,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13268,"byte_end":13274,"line_start":80,"line_end":80,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13514,"byte_end":13517,"line_start":90,"line_end":90,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13655,"byte_end":13658,"line_start":97,"line_end":97,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13793,"byte_end":13796,"line_start":104,"line_end":104,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13931,"byte_end":13934,"line_start":111,"line_end":111,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":14058,"byte_end":14069,"line_start":118,"line_end":118,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","byte_start":20931,"byte_end":20937,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","byte_start":23557,"byte_end":23563,"line_start":85,"line_end":85,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","byte_start":24565,"byte_end":24570,"line_start":111,"line_end":111,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","byte_start":26026,"byte_end":26031,"line_start":153,"line_end":153,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/ffi.rs","byte_start":29461,"byte_end":29469,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/serdejson.rs","byte_start":41712,"byte_end":41717,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/serdejson.rs","byte_start":42006,"byte_end":42012,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/time.rs","byte_start":42468,"byte_end":42476,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/time.rs","byte_start":43083,"byte_end":43093,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":50260,"byte_end":50274,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":50368,"byte_end":50382,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":53428,"byte_end":53443,"line_start":143,"line_end":143,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":53548,"byte_end":53563,"line_start":149,"line_end":149,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":63370,"byte_end":63376,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64144,"byte_end":64150,"line_start":45,"line_end":45,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64253,"byte_end":64259,"line_start":51,"line_end":51,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":70107,"byte_end":70119,"line_start":177,"line_end":177,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":71198,"byte_end":71210,"line_start":205,"line_end":205,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":84410,"byte_end":84421,"line_start":478,"line_end":478,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":84546,"byte_end":84557,"line_start":484,"line_end":484,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":6981,"byte_end":6984,"line_start":230,"line_end":230,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":190}},{"kind":"Mod","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/lib.rs","byte_start":7019,"byte_end":7025,"line_start":232,"line_end":232,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":226}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":10928,"byte_end":10934,"line_start":4,"line_end":4,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":11314,"byte_end":11319,"line_start":18,"line_end":18,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":12111,"byte_end":12119,"line_start":44,"line_end":44,"column_start":16,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1363},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13268,"byte_end":13274,"line_start":80,"line_end":80,"column_start":26,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":29038},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13514,"byte_end":13517,"line_start":90,"line_end":90,"column_start":26,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13655,"byte_end":13658,"line_start":97,"line_end":97,"column_start":19,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13793,"byte_end":13796,"line_start":104,"line_end":104,"column_start":27,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":13931,"byte_end":13934,"line_start":111,"line_end":111,"column_start":24,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":15},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/flatten.rs","byte_start":14058,"byte_end":14069,"line_start":118,"line_end":118,"column_start":16,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1906},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","byte_start":20931,"byte_end":20937,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":29038},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","byte_start":23557,"byte_end":23563,"line_start":85,"line_end":85,"column_start":51,"column_end":57},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":29129},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","byte_start":24565,"byte_end":24570,"line_start":111,"line_end":111,"column_start":36,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":27126},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/core.rs","byte_start":26026,"byte_end":26031,"line_start":153,"line_end":153,"column_start":36,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":27045},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/ffi.rs","byte_start":29461,"byte_end":29469,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":6317},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/serdejson.rs","byte_start":41712,"byte_end":41717,"line_start":7,"line_end":7,"column_start":21,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":16,"index":2172},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/serdejson.rs","byte_start":42006,"byte_end":42012,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":16,"index":2747},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/time.rs","byte_start":42468,"byte_end":42476,"line_start":6,"line_end":6,"column_start":21,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":2,"index":31022},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/json_schema_impls/time.rs","byte_start":43083,"byte_end":43093,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":1,"index":7557},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":50260,"byte_end":50274,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":50368,"byte_end":50382,"line_start":57,"line_end":57,"column_start":6,"column_end":20},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":53428,"byte_end":53443,"line_start":143,"line_end":143,"column_start":31,"column_end":46},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1119},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/gen.rs","byte_start":53548,"byte_end":53563,"line_start":149,"line_end":149,"column_start":6,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":63370,"byte_end":63376,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64144,"byte_end":64150,"line_start":45,"line_end":45,"column_start":29,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":64253,"byte_end":64259,"line_start":51,"line_end":51,"column_start":21,"column_end":27},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":70107,"byte_end":70119,"line_start":177,"line_end":177,"column_start":6,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":71198,"byte_end":71210,"line_start":205,"line_end":205,"column_start":23,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":84410,"byte_end":84421,"line_start":478,"line_end":478,"column_start":21,"column_end":32},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1906},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/schemars-0.7.6/src/schema.rs","byte_start":84546,"byte_end":84557,"line_start":484,"line_end":484,"column_start":26,"column_end":37},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1906},"to":{"krate":2,"index":2221}}]}