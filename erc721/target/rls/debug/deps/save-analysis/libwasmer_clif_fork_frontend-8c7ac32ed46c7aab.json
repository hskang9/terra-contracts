{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0","program":"/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","wasmer_clif_fork_frontend","/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=8c7ac32ed46c7aab","-C","extra-filename=-8c7ac32ed46c7aab","--out-dir","/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","-L","dependency=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","--extern","cranelift_codegen=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libcranelift_codegen-8e436a999439e664.rmeta","--extern","log=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/liblog-83ab5daad5e3b450.rmeta","--extern","smallvec=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libsmallvec-e4c9c101ae333399.rmeta","--extern","target_lexicon=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libtarget_lexicon-5dfdea6cad8d8675.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libwasmer_clif_fork_frontend-8c7ac32ed46c7aab.rmeta"},"prelude":{"crate_id":{"name":"wasmer_clif_fork_frontend","disambiguator":[16542537222559624729,14100644542149230447]},"crate_root":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src","external_crates":[{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":15,"id":{"name":"cranelift_codegen","disambiguator":[1840169337593454183,2714285077174093308]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":16,"id":{"name":"cranelift_bforest","disambiguator":[13856497635522155208,18351677305291548907]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":17,"id":{"name":"cranelift_entity","disambiguator":[15649407093681424624,11725493798286033142]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","num":18,"id":{"name":"log","disambiguator":[3334928426747378909,12614284579594638240]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":19,"id":{"name":"cfg_if","disambiguator":[8192225388863340420,3173580909043468535]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":20,"id":{"name":"cranelift_codegen_shared","disambiguator":[11003585404555025731,7233693928327429023]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":21,"id":{"name":"target_lexicon","disambiguator":[7506543512126835546,2105196375576306871]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":22,"id":{"name":"thiserror","disambiguator":[7346906650837406466,1053315444462595808]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":23,"id":{"name":"thiserror_impl","disambiguator":[17721261021118503845,8704871421299299668]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":24,"id":{"name":"gimli","disambiguator":[10223812154897667566,17080436645826354926]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":25,"id":{"name":"byteorder","disambiguator":[13772483050154113105,4416411086848908966]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":26,"id":{"name":"indexmap","disambiguator":[7264607058481689396,12845694084437745282]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":27,"id":{"name":"hashbrown","disambiguator":[12025763491025572525,15479303319156871661]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":28,"id":{"name":"serde","disambiguator":[6972129048178836725,6892762498666106127]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","num":29,"id":{"name":"serde_derive","disambiguator":[14746363068757113999,2138961080548715939]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","num":30,"id":{"name":"smallvec","disambiguator":[3347676757453290836,17416371363708809587]}}],"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":0,"byte_end":7577,"line_start":1,"line_end":208,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":7292,"byte_end":7307,"line_start":197,"line_end":197,"column_start":27,"column_end":42},"alias_span":null,"name":"FunctionBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":7309,"byte_end":7331,"line_start":197,"line_end":197,"column_start":44,"column_end":66},"alias_span":null,"name":"FunctionBuilderContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":7333,"byte_end":7341,"line_start":197,"line_end":197,"column_start":68,"column_end":76},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":7364,"byte_end":7372,"line_start":198,"line_end":198,"column_start":21,"column_end":29},"alias_span":null,"name":"SSABlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":7397,"byte_end":7403,"line_start":199,"line_end":199,"column_start":24,"column_end":30},"alias_span":null,"name":"Switch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":7430,"byte_end":7438,"line_start":200,"line_end":200,"column_start":26,"column_end":34},"alias_span":null,"name":"Variable","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":0,"byte_end":7577,"line_start":1,"line_end":208,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":164},{"krate":0,"index":274},{"krate":0,"index":295},{"krate":0,"index":303}],"decl_id":null,"docs":" Cranelift IR builder library.","sig":null,"attributes":[{"value":"deny(missing_docs, trivial_numeric_casts, unused_extern_crates)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":6415,"byte_end":6482,"line_start":165,"line_end":165,"column_start":1,"column_end":68}},{"value":"warn(unused_import_braces)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":6483,"byte_end":6513,"line_start":166,"line_end":166,"column_start":1,"column_end":31}},{"value":"deny(unstable_features)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":6543,"byte_end":6566,"line_start":167,"line_end":167,"column_start":30,"column_end":53}},{"value":"no_std","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":6967,"byte_end":6977,"line_start":182,"line_end":182,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":73},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":8751,"byte_end":8773,"line_start":22,"line_end":22,"column_start":12,"column_end":34},"name":"FunctionBuilderContext","qualname":"::frontend::FunctionBuilderContext","value":"FunctionBuilderContext {  }","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"decl_id":null,"docs":" Structure used for translating a series of functions into Cranelift IR.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":8965,"byte_end":8980,"line_start":29,"line_end":29,"column_start":12,"column_end":27},"name":"FunctionBuilder","qualname":"::frontend::FunctionBuilder","value":"FunctionBuilder { func }","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":" Temporary object used to build a single Cranelift IR `Function`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":9104,"byte_end":9108,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"func","qualname":"::frontend::FunctionBuilder::func","value":"&'a mut cranelift_codegen::ir::function::Function","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" The function currently being built.\n This field is public so the function can be re-borrowed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":9826,"byte_end":9834,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"Position","qualname":"::frontend::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" Position\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":10459,"byte_end":10462,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionBuilderContext>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a FunctionBuilderContext structure. The structure is automatically cleared after\n each [`FunctionBuilder`](struct.FunctionBuilder.html) completes translating a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":90},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":11016,"byte_end":11031,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"FuncInstBuilder","qualname":"::frontend::FuncInstBuilder","value":"FuncInstBuilder {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" Implementation of the [`InstBuilder`](cranelift_codegen::ir::InstBuilder) that has\n one convenience method per Cranelift IR instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":16828,"byte_end":16831,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionBuilder>::new","value":"fn (func: &'a mut Function, func_ctx: &'a mut FunctionBuilderContext, position: &'a mut Position) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new FunctionBuilder structure that will operate on a `Function` using a\n `FunctionBuilderContext`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":17239,"byte_end":17249,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"set_srcloc","qualname":"<FunctionBuilder>::set_srcloc","value":"fn (&mut self, srcloc: ir::SourceLoc) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the source location that should be assigned to all new instructions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":17391,"byte_end":17403,"line_start":242,"line_end":242,"column_start":12,"column_end":24},"name":"create_block","qualname":"<FunctionBuilder>::create_block","value":"fn (&mut self) -> Block","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Block` and returns its reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":18164,"byte_end":18179,"line_start":260,"line_end":260,"column_start":12,"column_end":27},"name":"switch_to_block","qualname":"<FunctionBuilder>::switch_to_block","value":"fn (&mut self, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" After the call to this function, new instructions will be inserted into the designated\n block, in the order they are declared. You must declare the types of the Block arguments\n you will use here.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":19206,"byte_end":19216,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"seal_block","qualname":"<FunctionBuilder>::seal_block","value":"fn (&mut self, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Declares that all the predecessors of this block are known.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":19739,"byte_end":19754,"line_start":296,"line_end":296,"column_start":12,"column_end":27},"name":"seal_all_blocks","qualname":"<FunctionBuilder>::seal_all_blocks","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Effectively calls seal_block on all blocks in the function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":20022,"byte_end":20033,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"declare_var","qualname":"<FunctionBuilder>::declare_var","value":"fn (&mut self, var: Variable, ty: Type) -> ()","parent":null,"children":[],"decl_id":null,"docs":" In order to use a variable in a `use_var`, you need to declare its type with this method.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":20280,"byte_end":20287,"line_start":308,"line_end":308,"column_start":12,"column_end":19},"name":"use_var","qualname":"<FunctionBuilder>::use_var","value":"fn (&mut self, var: Variable) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Returns the Cranelift IR value corresponding to the utilization at the current program\n position of a previously defined user variable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":20957,"byte_end":20964,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"def_var","qualname":"<FunctionBuilder>::def_var","value":"fn (&mut self, var: Variable, val: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Register a new definition of a user variable. The type of the value must be\n the same as the type registered for the variable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":21625,"byte_end":21638,"line_start":346,"line_end":346,"column_start":12,"column_end":25},"name":"set_val_label","qualname":"<FunctionBuilder>::set_val_label","value":"fn (&mut self, val: Value, label: ValueLabel) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set label for Value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":22463,"byte_end":22480,"line_start":368,"line_end":368,"column_start":12,"column_end":29},"name":"create_jump_table","qualname":"<FunctionBuilder>::create_jump_table","value":"fn (&mut self, data: JumpTableData) -> JumpTable","parent":null,"children":[],"decl_id":null,"docs":" Creates a jump table in the function, to be used by `br_table` instructions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":22715,"byte_end":22732,"line_start":374,"line_end":374,"column_start":12,"column_end":29},"name":"create_stack_slot","qualname":"<FunctionBuilder>::create_stack_slot","value":"fn (&mut self, data: StackSlotData) -> StackSlot","parent":null,"children":[],"decl_id":null,"docs":" Creates a stack slot in the function, to be used by `stack_load`, `stack_store` and\n `stack_addr` instructions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":22929,"byte_end":22945,"line_start":379,"line_end":379,"column_start":12,"column_end":28},"name":"import_signature","qualname":"<FunctionBuilder>::import_signature","value":"fn (&mut self, signature: Signature) -> SigRef","parent":null,"children":[],"decl_id":null,"docs":" Adds a signature which can later be used to declare an external function import.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":23100,"byte_end":23115,"line_start":384,"line_end":384,"column_start":12,"column_end":27},"name":"import_function","qualname":"<FunctionBuilder>::import_function","value":"fn (&mut self, data: ExtFuncData) -> FuncRef","parent":null,"children":[],"decl_id":null,"docs":" Declare an external function import.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":23277,"byte_end":23296,"line_start":389,"line_end":389,"column_start":12,"column_end":31},"name":"create_global_value","qualname":"<FunctionBuilder>::create_global_value","value":"fn (&mut self, data: GlobalValueData) -> GlobalValue","parent":null,"children":[],"decl_id":null,"docs":" Declares a global value accessible to the function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":23462,"byte_end":23473,"line_start":394,"line_end":394,"column_start":12,"column_end":23},"name":"create_heap","qualname":"<FunctionBuilder>::create_heap","value":"fn (&mut self, data: HeapData) -> Heap","parent":null,"children":[],"decl_id":null,"docs":" Declares a heap accessible to the function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":23752,"byte_end":23755,"line_start":400,"line_end":400,"column_start":12,"column_end":15},"name":"ins","qualname":"<FunctionBuilder>::ins","value":"fn <'short> (&'short mut self) -> FuncInstBuilder<'short, 'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns an object with the [`InstBuilder`](cranelift_codegen::ir::InstBuilder)\n trait that allows to conveniently append an instruction to the current `Block` being built.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":24091,"byte_end":24112,"line_start":409,"line_end":409,"column_start":12,"column_end":33},"name":"ensure_inserted_block","qualname":"<FunctionBuilder>::ensure_inserted_block","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Make sure that the current block is inserted in the layout.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":24880,"byte_end":24886,"line_start":428,"line_end":428,"column_start":12,"column_end":18},"name":"cursor","qualname":"<FunctionBuilder>::cursor","value":"fn (&mut self) -> FuncCursor","parent":null,"children":[],"decl_id":null,"docs":" Returns a `FuncCursor` pointed at the current position ready for inserting instructions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":25270,"byte_end":25309,"line_start":438,"line_end":438,"column_start":12,"column_end":51},"name":"append_block_params_for_function_params","qualname":"<FunctionBuilder>::append_block_params_for_function_params","value":"fn (&mut self, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append parameters to the given `Block` corresponding to the function\n parameters. This can be used to set up the block parameters for the\n entry block.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":26099,"byte_end":26139,"line_start":456,"line_end":456,"column_start":12,"column_end":52},"name":"append_block_params_for_function_returns","qualname":"<FunctionBuilder>::append_block_params_for_function_returns","value":"fn (&mut self, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append parameters to the given `Block` corresponding to the function\n return values. This can be used to set up the block parameters for a\n function exit block.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":26738,"byte_end":26746,"line_start":469,"line_end":469,"column_start":12,"column_end":20},"name":"finalize","qualname":"<FunctionBuilder>::finalize","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Declare that translation of the current function is complete. This\n resets the state of the `FunctionBuilder` in preparation to be used\n for another function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":28813,"byte_end":28825,"line_start":515,"line_end":515,"column_start":12,"column_end":24},"name":"block_params","qualname":"<FunctionBuilder>::block_params","value":"fn (&self, block: Block) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Retrieves all the parameters for a `Block` currently inferred from the jump instructions\n inserted that target it and the SSA construction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":29019,"byte_end":29028,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"signature","qualname":"<FunctionBuilder>::signature","value":"fn (&self, sigref: SigRef) -> Option<&Signature>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the signature with reference `sigref` previously added with `import_signature`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":29442,"byte_end":29460,"line_start":529,"line_end":529,"column_start":12,"column_end":30},"name":"append_block_param","qualname":"<FunctionBuilder>::append_block_param","value":"fn (&mut self, block: Block, ty: Type) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Creates a parameter for a specific `Block` by appending it to the list of already existing\n parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":29992,"byte_end":30004,"line_start":543,"line_end":543,"column_start":12,"column_end":24},"name":"inst_results","qualname":"<FunctionBuilder>::inst_results","value":"fn (&self, inst: Inst) -> &[Value]","parent":null,"children":[],"decl_id":null,"docs":" Returns the result values of an instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":30298,"byte_end":30321,"line_start":551,"line_end":551,"column_start":12,"column_end":35},"name":"change_jump_destination","qualname":"<FunctionBuilder>::change_jump_destination","value":"fn (&mut self, inst: Inst, new_dest: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the destination of a jump instruction after creation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":30934,"byte_end":30948,"line_start":565,"line_end":565,"column_start":12,"column_end":26},"name":"is_unreachable","qualname":"<FunctionBuilder>::is_unreachable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if the current `Block` is sealed and has no predecessors declared.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":31497,"byte_end":31508,"line_start":580,"line_end":580,"column_start":12,"column_end":23},"name":"is_pristine","qualname":"<FunctionBuilder>::is_pristine","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if no instructions have been added since the last call to\n `switch_to_block`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":31743,"byte_end":31752,"line_start":586,"line_end":586,"column_start":12,"column_end":21},"name":"is_filled","qualname":"<FunctionBuilder>::is_filled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if a terminator instruction has been inserted since the\n last call to `switch_to_block`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":32159,"byte_end":32166,"line_start":595,"line_end":595,"column_start":12,"column_end":19},"name":"display","qualname":"<FunctionBuilder>::display","value":"fn <'b, I> (&'b self, isa: I) -> DisplayFunction","parent":null,"children":[],"decl_id":null,"docs":" Returns a displayable object for the function as it is.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":32658,"byte_end":32669,"line_start":608,"line_end":608,"column_start":12,"column_end":23},"name":"call_memcpy","qualname":"<FunctionBuilder>::call_memcpy","value":"fn (&mut self, config: TargetFrontendConfig, dest: Value, src: Value, size: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Calls libc.memcpy","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":33751,"byte_end":33773,"line_start":641,"line_end":641,"column_start":12,"column_end":34},"name":"emit_small_memory_copy","qualname":"<FunctionBuilder>::emit_small_memory_copy","value":"fn (&mut self, config: TargetFrontendConfig, dest: Value, src: Value, size: u64, dest_align: u8, src_align: u8, non_overlapping: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Optimised memcpy or memmove for small copies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":35834,"byte_end":35845,"line_start":706,"line_end":706,"column_start":12,"column_end":23},"name":"call_memset","qualname":"<FunctionBuilder>::call_memset","value":"fn (&mut self, config: TargetFrontendConfig, buffer: Value, ch: Value, size: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Calls libc.memset","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":36755,"byte_end":36772,"line_start":735,"line_end":735,"column_start":12,"column_end":29},"name":"emit_small_memset","qualname":"<FunctionBuilder>::emit_small_memset","value":"fn (&mut self, config: TargetFrontendConfig, buffer: Value, ch: u8, size: u64, buffer_align: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Calls libc.memset","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":38890,"byte_end":38902,"line_start":800,"line_end":800,"column_start":12,"column_end":24},"name":"call_memmove","qualname":"<FunctionBuilder>::call_memmove","value":"fn (&mut self, config: TargetFrontendConfig, dest: Value, source: Value, size: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Calls libc.memmove","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":60743,"byte_end":60751,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"SSABlock","qualname":"::ssa::SSABlock","value":"","parent":null,"children":[],"decl_id":null,"docs":" A opaque reference to a basic block.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","byte_start":113588,"byte_end":113594,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"Switch","qualname":"::switch::Switch","value":"Switch {  }","parent":null,"children":[{"krate":0,"index":359}],"decl_id":null,"docs":" Unlike with `br_table`, `Switch` cases may be sparse or non-0-based.\n They emit efficient code using branches, jump tables, or a combination of both.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","byte_start":113698,"byte_end":113701,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Switch>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty switch\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","byte_start":113819,"byte_end":113828,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"set_entry","qualname":"<Switch>::set_entry","value":"fn (&mut self, index: EntryIndex, block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a switch entry\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","byte_start":114119,"byte_end":114126,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"entries","qualname":"<Switch>::entries","value":"fn (&self) -> &HashMap<EntryIndex, Block>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to all existing entries\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","byte_start":121225,"byte_end":121229,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"name":"emit","qualname":"<Switch>::emit","value":"fn (self, bx: &mut FunctionBuilder, val: Value, otherwise: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Build the switch","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/variable.rs","byte_start":127206,"byte_end":127214,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Variable","qualname":"::variable::Variable","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque reference to a variable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/variable.rs","byte_start":127301,"byte_end":127309,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"with_u32","qualname":"<Variable>::with_u32","value":"fn (index: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Variable with the given index.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":303},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/lib.rs","byte_start":7535,"byte_end":7542,"line_start":208,"line_end":208,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Version number of this crate.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":9918,"byte_end":9926,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":10230,"byte_end":10252,"line_start":77,"line_end":77,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":11147,"byte_end":11162,"line_start":106,"line_end":106,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":11349,"byte_end":11364,"line_start":112,"line_end":112,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":16671,"byte_end":16686,"line_start":219,"line_end":219,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":28625,"byte_end":28640,"line_start":512,"line_end":512,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":32316,"byte_end":32331,"line_start":601,"line_end":601,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":39780,"byte_end":39795,"line_start":831,"line_end":831,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":58142,"byte_end":58153,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":58806,"byte_end":58818,"line_start":95,"line_end":95,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":60019,"byte_end":60028,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":60777,"byte_end":60785,"line_start":149,"line_end":149,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":60995,"byte_end":61003,"line_start":160,"line_end":160,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":61077,"byte_end":61087,"line_start":166,"line_end":166,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":65097,"byte_end":65107,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","byte_start":113644,"byte_end":113650,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","byte_start":122397,"byte_end":122416,"line_start":295,"line_end":295,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/variable.rs","byte_start":127227,"byte_end":127235,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/variable.rs","byte_start":127421,"byte_end":127429,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":9918,"byte_end":9926,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":10230,"byte_end":10252,"line_start":77,"line_end":77,"column_start":6,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":11147,"byte_end":11162,"line_start":106,"line_end":106,"column_start":21,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":11349,"byte_end":11364,"line_start":112,"line_end":112,"column_start":49,"column_end":64},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":90},"to":{"krate":15,"index":478}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":16671,"byte_end":16686,"line_start":219,"line_end":219,"column_start":10,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":28625,"byte_end":28640,"line_start":512,"line_end":512,"column_start":10,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":32316,"byte_end":32331,"line_start":601,"line_end":601,"column_start":10,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/frontend.rs","byte_start":39780,"byte_end":39795,"line_start":831,"line_end":831,"column_start":10,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":58142,"byte_end":58153,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":58806,"byte_end":58818,"line_start":95,"line_end":95,"column_start":6,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":60019,"byte_end":60028,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":60777,"byte_end":60785,"line_start":149,"line_end":149,"column_start":20,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":320},"to":{"krate":17,"index":15}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":60995,"byte_end":61003,"line_start":160,"line_end":160,"column_start":24,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":320},"to":{"krate":17,"index":22}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":61077,"byte_end":61087,"line_start":166,"line_end":166,"column_start":6,"column_end":16},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/ssa.rs","byte_start":65097,"byte_end":65107,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","byte_start":113644,"byte_end":113650,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/switch.rs","byte_start":122397,"byte_end":122416,"line_start":295,"line_end":295,"column_start":6,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/variable.rs","byte_start":127227,"byte_end":127235,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-frontend-0.59.0/src/variable.rs","byte_start":127421,"byte_end":127429,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":369},"to":{"krate":17,"index":15}}]}