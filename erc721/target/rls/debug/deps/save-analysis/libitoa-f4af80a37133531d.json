{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6","program":"/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","itoa","/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=f4af80a37133531d","-C","extra-filename=-f4af80a37133531d","--out-dir","/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","-L","dependency=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libitoa-f4af80a37133531d.rmeta"},"prelude":{"crate_id":{"name":"itoa","disambiguator":[9877056312624357124,3406744992755025629]},"crate_root":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src","external_crates":[{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}}],"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":0,"byte_end":12847,"line_start":1,"line_end":353,"column_start":1,"column_end":62}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":0,"byte_end":12847,"line_start":1,"line_end":353,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":19},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":53},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":57},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":61},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":65},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":69},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":73},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":107},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":111},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":125},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":129},{"krate":0,"index":48}],"decl_id":null,"docs":" [![github]](https://github.com/dtolnay/itoa)&ensp;[![crates-io]](https://crates.io/crates/itoa)&ensp;[![docs-rs]](https://docs.rs/itoa)","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":3110,"byte_end":3116,"line_start":60,"line_end":60,"column_start":35,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":3848,"byte_end":3851,"line_start":90,"line_end":90,"column_start":8,"column_end":11},"name":"fmt","qualname":"::fmt","value":"fn <W, V> (mut wr: W, value: V) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Write integer to an `fmt::Write`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":3831,"byte_end":3840,"line_start":89,"line_end":89,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4216,"byte_end":4222,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" A safe API for formatting integers to text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4627,"byte_end":4630,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"fn () -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4581,"byte_end":4590,"line_start":126,"line_end":126,"column_start":5,"column_end":14}},{"value":"allow(deprecated)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4595,"byte_end":4615,"line_start":127,"line_end":127,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4863,"byte_end":4869,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"fn <I> (&mut self, i: I) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print an integer into this buffer and return a reference to its string representation\n within the buffer.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":5036,"byte_end":5042,"line_start":143,"line_end":143,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":5212,"byte_end":5219,"line_start":149,"line_end":149,"column_start":11,"column_end":18},"name":"Integer","qualname":"::Integer","value":"Integer: private::Sealed","parent":null,"children":[{"krate":0,"index":33}],"decl_id":null,"docs":" An integer that can be formatted by `itoa::write` and `itoa::fmt`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":5288,"byte_end":5293,"line_start":152,"line_end":152,"column_start":8,"column_end":13},"name":"write","qualname":"::Integer::write","value":"fn (self, buf: &mut Buffer) -> &str","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4276,"byte_end":4282,"line_start":109,"line_end":109,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4374,"byte_end":4380,"line_start":116,"line_end":116,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4463,"byte_end":4469,"line_start":123,"line_end":123,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4276,"byte_end":4282,"line_start":109,"line_end":109,"column_start":18,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":2204}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4374,"byte_end":4380,"line_start":116,"line_end":116,"column_start":16,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":49},"to":{"krate":1,"index":2179}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":4463,"byte_end":4469,"line_start":123,"line_end":123,"column_start":6,"column_end":12},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/itoa-0.4.6/src/lib.rs","byte_start":5230,"byte_end":5236,"line_start":149,"line_end":149,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":31},"to":{"krate":0,"index":32}}]}