{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2","program":"/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","hex","/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=8bfdf26927b6229b","-C","extra-filename=-8bfdf26927b6229b","--out-dir","/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","-L","dependency=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libhex-8bfdf26927b6229b.rmeta"},"prelude":{"crate_id":{"name":"hex","disambiguator":[10264867551756374387,617669539642058576]},"crate_root":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src","external_crates":[{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}}],"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":411,"byte_end":13961,"line_start":9,"line_end":485,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":1208,"byte_end":1220,"line_start":38,"line_end":38,"column_start":23,"column_end":35},"alias_span":null,"name":"FromHexError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":411,"byte_end":13961,"line_start":9,"line_end":485,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":56},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":66},{"krate":0,"index":97},{"krate":0,"index":103},{"krate":0,"index":109},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":127},{"krate":0,"index":133},{"krate":0,"index":139},{"krate":0,"index":145},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":163},{"krate":0,"index":169},{"krate":0,"index":175},{"krate":0,"index":181},{"krate":0,"index":187},{"krate":0,"index":193},{"krate":0,"index":199},{"krate":0,"index":205},{"krate":0,"index":211},{"krate":0,"index":217},{"krate":0,"index":223},{"krate":0,"index":229},{"krate":0,"index":235},{"krate":0,"index":241},{"krate":0,"index":247},{"krate":0,"index":253},{"krate":0,"index":259},{"krate":0,"index":265},{"krate":0,"index":271},{"krate":0,"index":277},{"krate":0,"index":283},{"krate":0,"index":289},{"krate":0,"index":295},{"krate":0,"index":301},{"krate":0,"index":307},{"krate":0,"index":313},{"krate":0,"index":319},{"krate":0,"index":325},{"krate":0,"index":331},{"krate":0,"index":337},{"krate":0,"index":343},{"krate":0,"index":349},{"krate":0,"index":355},{"krate":0,"index":361},{"krate":0,"index":367},{"krate":0,"index":373},{"krate":0,"index":379},{"krate":0,"index":385},{"krate":0,"index":391},{"krate":0,"index":397},{"krate":0,"index":403},{"krate":0,"index":409},{"krate":0,"index":415},{"krate":0,"index":421},{"krate":0,"index":427},{"krate":0,"index":433},{"krate":0,"index":439},{"krate":0,"index":445},{"krate":0,"index":451},{"krate":0,"index":457},{"krate":0,"index":463},{"krate":0,"index":469},{"krate":0,"index":475},{"krate":0,"index":481},{"krate":0,"index":487},{"krate":0,"index":493},{"krate":0,"index":499},{"krate":0,"index":505},{"krate":0,"index":511},{"krate":0,"index":517},{"krate":0,"index":523},{"krate":0,"index":529},{"krate":0,"index":535},{"krate":0,"index":541},{"krate":0,"index":547},{"krate":0,"index":553},{"krate":0,"index":559},{"krate":0,"index":565},{"krate":0,"index":571},{"krate":0,"index":577},{"krate":0,"index":583},{"krate":0,"index":589},{"krate":0,"index":595},{"krate":0,"index":601},{"krate":0,"index":607},{"krate":0,"index":613},{"krate":0,"index":619},{"krate":0,"index":625},{"krate":0,"index":631},{"krate":0,"index":637},{"krate":0,"index":643},{"krate":0,"index":649},{"krate":0,"index":655},{"krate":0,"index":661},{"krate":0,"index":667},{"krate":0,"index":673},{"krate":0,"index":679},{"krate":0,"index":685},{"krate":0,"index":691},{"krate":0,"index":697},{"krate":0,"index":703},{"krate":0,"index":709},{"krate":0,"index":715},{"krate":0,"index":721},{"krate":0,"index":727},{"krate":0,"index":733},{"krate":0,"index":739},{"krate":0,"index":745},{"krate":0,"index":751},{"krate":0,"index":757},{"krate":0,"index":763},{"krate":0,"index":769},{"krate":0,"index":775},{"krate":0,"index":781},{"krate":0,"index":787},{"krate":0,"index":793},{"krate":0,"index":799},{"krate":0,"index":805},{"krate":0,"index":811},{"krate":0,"index":817},{"krate":0,"index":823},{"krate":0,"index":829},{"krate":0,"index":835},{"krate":0,"index":841},{"krate":0,"index":847},{"krate":0,"index":853},{"krate":0,"index":859},{"krate":0,"index":865},{"krate":0,"index":871},{"krate":0,"index":877},{"krate":0,"index":883},{"krate":0,"index":889},{"krate":0,"index":895},{"krate":0,"index":901},{"krate":0,"index":907},{"krate":0,"index":913},{"krate":0,"index":919},{"krate":0,"index":925},{"krate":0,"index":931},{"krate":0,"index":937},{"krate":0,"index":943},{"krate":0,"index":949},{"krate":0,"index":955},{"krate":0,"index":961},{"krate":0,"index":967},{"krate":0,"index":973},{"krate":0,"index":979},{"krate":0,"index":985},{"krate":0,"index":991},{"krate":0,"index":997},{"krate":0,"index":1003},{"krate":0,"index":1009},{"krate":0,"index":1015},{"krate":0,"index":1021},{"krate":0,"index":1027},{"krate":0,"index":1033},{"krate":0,"index":1039},{"krate":0,"index":1045},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79}],"decl_id":null,"docs":" Encoding and decoding hex strings.","sig":null,"attributes":[{"value":"allow(clippy :: unreadable_literal)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":1001,"byte_end":1038,"line_start":28,"line_end":28,"column_start":1,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":82},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14215,"byte_end":14234,"line_start":8,"line_end":8,"column_start":5,"column_end":24},"name":"InvalidHexCharacter","qualname":"::error::FromHexError::InvalidHexCharacter","value":"FromHexError::InvalidHexCharacter { c, index }","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" An invalid character was found. Valid ones are: `0...9`, `a...f`\n or `A...F`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":85},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14361,"byte_end":14370,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"OddLength","qualname":"::error::FromHexError::OddLength","value":"FromHexError::OddLength","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" A hex string's length needs to be even, as two digits correspond to\n one byte.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":87},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14543,"byte_end":14562,"line_start":17,"line_end":17,"column_start":5,"column_end":24},"name":"InvalidStringLength","qualname":"::error::FromHexError::InvalidStringLength","value":"FromHexError::InvalidStringLength","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" If the hex string is decoded into a fixed sized container, such as an\n array, the hex string's length * 2 has to match the container's\n length.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":81},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14103,"byte_end":14115,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"FromHexError","qualname":"::error::FromHexError","value":"FromHexError::{InvalidHexCharacter, OddLength, InvalidStringLength}","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":87}],"decl_id":null,"docs":" The error type for decoding a hex string into `Vec<u8>` or `[u8; N]`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":1883,"byte_end":1888,"line_start":61,"line_end":61,"column_start":11,"column_end":16},"name":"ToHex","qualname":"::ToHex","value":"ToHex","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":22}],"decl_id":null,"docs":" Encoding values as hex string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2018,"byte_end":2028,"line_start":64,"line_end":64,"column_start":8,"column_end":18},"name":"encode_hex","qualname":"::ToHex::encode_hex","value":"fn <T> (&self) -> T","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Encode the hex strict representing `self` into the result.. Lower case\n letters are used (e.g. `f9b4ca`)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2199,"byte_end":2215,"line_start":68,"line_end":68,"column_start":8,"column_end":24},"name":"encode_hex_upper","qualname":"::ToHex::encode_hex_upper","value":"fn <T> (&self) -> T","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Encode the hex strict representing `self` into the result.. Lower case\n letters are used (e.g. `F9B4CA`)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":4406,"byte_end":4413,"line_start":154,"line_end":154,"column_start":11,"column_end":18},"name":"FromHex","qualname":"::FromHex","value":"FromHex: Sized","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Types that can be decoded from a hex string.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":4432,"byte_end":4437,"line_start":155,"line_end":155,"column_start":10,"column_end":15},"name":"Error","qualname":"::FromHex::Error","value":"type Error;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":4716,"byte_end":4724,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"from_hex","qualname":"::FromHex::from_hex","value":"fn <T> (hex: T) -> Result<Self, Self::Error>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Creates an instance of type `Self` from the given hex string, or fails\n with a custom error type.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":7385,"byte_end":7391,"line_start":246,"line_end":246,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode","value":"fn <T> (data: T) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encodes `data` as hex string using lowercase characters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":7790,"byte_end":7802,"line_start":260,"line_end":260,"column_start":8,"column_end":20},"name":"encode_upper","qualname":"::encode_upper","value":"fn <T> (data: T) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encodes `data` as hex string using uppercase characters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":8361,"byte_end":8367,"line_start":280,"line_end":280,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"fn <T> (data: T) -> Result<Vec<u8>, FromHexError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a hex string into raw bytes.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":8866,"byte_end":8881,"line_start":296,"line_end":296,"column_start":8,"column_end":23},"name":"decode_to_slice","qualname":"::decode_to_slice","value":"fn <T> (data: T, out: &mut [u8]) -> Result<(), FromHexError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a hex string into a mutable bytes slice.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":10178,"byte_end":10193,"line_start":348,"line_end":348,"column_start":8,"column_end":23},"name":"encode_to_slice","qualname":"::encode_to_slice","value":"fn <T> (input: T, output: &mut [u8]) -> Result<(), FromHexError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes some bytes into a mutable slice of bytes.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14618,"byte_end":14630,"line_start":21,"line_end":21,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14657,"byte_end":14669,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2509,"byte_end":2524,"line_start":80,"line_end":80,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2753,"byte_end":2768,"line_start":90,"line_end":90,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":110,"line_end":110,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":3710,"byte_end":3711,"line_start":124,"line_end":124,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":5114,"byte_end":5117,"line_start":177,"line_end":177,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14618,"byte_end":14630,"line_start":21,"line_end":21,"column_start":28,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":1623}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/error.rs","byte_start":14657,"byte_end":14669,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2509,"byte_end":2524,"line_start":80,"line_end":80,"column_start":10,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":2753,"byte_end":2768,"line_start":90,"line_end":90,"column_start":23,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":3341,"byte_end":3356,"line_start":110,"line_end":110,"column_start":38,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":3710,"byte_end":3711,"line_start":124,"line_end":124,"column_start":32,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":51},"to":{"krate":0,"index":19}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":4415,"byte_end":4420,"line_start":154,"line_end":154,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.4.2/src/lib.rs","byte_start":5114,"byte_end":5117,"line_start":177,"line_end":177,"column_start":18,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":3763},"to":{"krate":0,"index":56}}]}