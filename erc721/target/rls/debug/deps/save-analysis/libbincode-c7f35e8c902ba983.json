{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1","program":"/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bincode","/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=c7f35e8c902ba983","-C","extra-filename=-c7f35e8c902ba983","--out-dir","/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","-L","dependency=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","--extern","byteorder=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libbyteorder-5a32b2ad0587bb56.rmeta","--extern","serde=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libserde-506307e5cd14dac8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libbincode-c7f35e8c902ba983.rmeta"},"prelude":{"crate_id":{"name":"bincode","disambiguator":[17156140155755874580,12554984281156628236]},"crate_root":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src","external_crates":[{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[13772483050154113105,4416411086848908966]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":16,"id":{"name":"serde","disambiguator":[6972129048178836725,6892762498666106127]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","num":17,"id":{"name":"serde_derive","disambiguator":[14746363068757113999,2138961080548715939]}}],"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":0,"byte_end":5049,"line_start":1,"line_end":166,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1047},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5409,"byte_end":5418,"line_start":13,"line_end":13,"column_start":24,"column_end":33},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1042},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5420,"byte_end":5432,"line_start":13,"line_end":13,"column_start":35,"column_end":47},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5434,"byte_end":5446,"line_start":13,"line_end":13,"column_start":49,"column_end":61},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5470,"byte_end":5484,"line_start":14,"line_end":14,"column_start":21,"column_end":35},"alias_span":null,"name":"FixintEncoding","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1078},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5486,"byte_end":5500,"line_start":14,"line_end":14,"column_start":37,"column_end":51},"alias_span":null,"name":"VarintEncoding","value":"","parent":{"krate":0,"index":14}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5293,"byte_end":5294,"line_start":9,"line_end":9,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Config","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5552,"byte_end":5559,"line_start":16,"line_end":16,"column_start":23,"column_end":30},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1161},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5561,"byte_end":5569,"line_start":16,"line_end":16,"column_start":32,"column_end":40},"alias_span":null,"name":"Infinite","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1166},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5598,"byte_end":5611,"line_start":17,"line_end":17,"column_start":26,"column_end":39},"alias_span":null,"name":"AllowTrailing","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1171},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5613,"byte_end":5627,"line_start":17,"line_end":17,"column_start":41,"column_end":55},"alias_span":null,"name":"RejectTrailing","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1125},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1328,"byte_end":1334,"line_start":45,"line_end":45,"column_start":18,"column_end":24},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1176},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1336,"byte_end":1350,"line_start":45,"line_end":45,"column_start":26,"column_end":40},"alias_span":null,"name":"DefaultOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1352,"byte_end":1359,"line_start":45,"line_end":45,"column_start":42,"column_end":49},"alias_span":null,"name":"Options","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":466},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1381,"byte_end":1392,"line_start":46,"line_end":46,"column_start":19,"column_end":30},"alias_span":null,"name":"BincodeRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1407,"byte_end":1419,"line_start":47,"line_end":47,"column_start":13,"column_end":25},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1438,"byte_end":1443,"line_start":48,"line_end":48,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1445,"byte_end":1454,"line_start":48,"line_end":48,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":673},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1456,"byte_end":1462,"line_start":48,"line_end":48,"column_start":35,"column_end":41},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1479,"byte_end":1489,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":0,"byte_end":5049,"line_start":1,"line_end":166,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":442},{"krate":0,"index":665},{"krate":0,"index":689},{"krate":0,"index":746},{"krate":0,"index":1008},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1033},{"krate":0,"index":1037},{"krate":0,"index":1040}],"decl_id":null,"docs":" Bincode is a crate for encoding and decoding using a tiny binary\n serialization strategy.  Using it, you can easily go from having\n an object in memory, quickly serialize it to bytes, and then\n deserialize it back just as fast!","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"allow(unknown_lints, bare_trait_objects, deprecated)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":24,"byte_end":80,"line_start":2,"line_end":2,"column_start":1,"column_end":57}},{"value":"crate_name = \"bincode\"","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1000,"byte_end":1026,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"crate_type = \"rlib\"","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1028,"byte_end":1051,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1053,"byte_end":1077,"line_start":30,"line_end":30,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":53},{"krate":0,"index":238},{"krate":0,"index":290},{"krate":0,"index":303},{"krate":0,"index":1176},{"krate":0,"index":1181},{"krate":0,"index":1179},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":324},{"krate":0,"index":366},{"krate":0,"index":1182},{"krate":0,"index":1190},{"krate":0,"index":1187},{"krate":0,"index":1194},{"krate":0,"index":1202},{"krate":0,"index":1199},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":382},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":394},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":418},{"krate":0,"index":426}],"decl_id":null,"docs":" Configuration settings for bincode.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17143,"byte_end":17159,"line_start":3,"line_end":3,"column_start":11,"column_end":27},"name":"BincodeByteOrder","qualname":"::config::endian::BincodeByteOrder","value":"BincodeByteOrder","parent":null,"children":[{"krate":0,"index":46}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17172,"byte_end":17178,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Endian","qualname":"::config::endian::BincodeByteOrder::Endian","value":"type Endian: ByteOrder + 'static;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1042},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17276,"byte_end":17288,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"LittleEndian","qualname":"::config::endian::LittleEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian byte ordering.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1047},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17359,"byte_end":17368,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"BigEndian","qualname":"::config::endian::BigEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Big-endian byte ordering.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1052},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17461,"byte_end":17473,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"NativeEndian","qualname":"::config::endian::NativeEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" The native byte ordering of the current system.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":17885,"byte_end":17896,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"IntEncoding","qualname":"::config::int::IntEncoding","value":"IntEncoding","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1066},{"krate":0,"index":1069}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":17978,"byte_end":17986,"line_start":10,"line_end":10,"column_start":8,"column_end":16},"name":"u16_size","qualname":"::config::int::IntEncoding::u16_size","value":"fn (n: u16) -> u64","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18082,"byte_end":18090,"line_start":12,"line_end":12,"column_start":8,"column_end":16},"name":"u32_size","qualname":"::config::int::IntEncoding::u32_size","value":"fn (n: u32) -> u64","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18186,"byte_end":18194,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"u64_size","qualname":"::config::int::IntEncoding::u64_size","value":"fn (n: u64) -> u64","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18292,"byte_end":18300,"line_start":17,"line_end":17,"column_start":8,"column_end":16},"name":"i16_size","qualname":"::config::int::IntEncoding::i16_size","value":"fn (n: i16) -> u64","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18396,"byte_end":18404,"line_start":19,"line_end":19,"column_start":8,"column_end":16},"name":"i32_size","qualname":"::config::int::IntEncoding::i32_size","value":"fn (n: i32) -> u64","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18500,"byte_end":18508,"line_start":21,"line_end":21,"column_start":8,"column_end":16},"name":"i64_size","qualname":"::config::int::IntEncoding::i64_size","value":"fn (n: i64) -> u64","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Gets the size (in bytes) that a value would be serialized to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18558,"byte_end":18566,"line_start":24,"line_end":24,"column_start":8,"column_end":16},"name":"len_size","qualname":"::config::int::IntEncoding::len_size","value":"fn (len: usize) -> u64","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18532,"byte_end":18549,"line_start":23,"line_end":23,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18703,"byte_end":18716,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"serialize_len","qualname":"::config::int::IntEncoding::serialize_len","value":"fn <W, O> (ser: &mut ::ser::Serializer<W, O>, len: usize) -> Result<()>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Serializes a sequence length.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18677,"byte_end":18694,"line_start":29,"line_end":29,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":18891,"byte_end":18904,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"::config::int::IntEncoding::serialize_u16","value":"fn <W, O> (ser: &mut ::ser::Serializer<W, O>, val: u16) -> Result<()>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":19023,"byte_end":19036,"line_start":42,"line_end":42,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"::config::int::IntEncoding::serialize_u32","value":"fn <W, O> (ser: &mut ::ser::Serializer<W, O>, val: u32) -> Result<()>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":19155,"byte_end":19168,"line_start":47,"line_end":47,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"::config::int::IntEncoding::serialize_u64","value":"fn <W, O> (ser: &mut ::ser::Serializer<W, O>, val: u64) -> Result<()>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":19287,"byte_end":19300,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"::config::int::IntEncoding::serialize_i16","value":"fn <W, O> (ser: &mut ::ser::Serializer<W, O>, val: i16) -> Result<()>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":19419,"byte_end":19432,"line_start":57,"line_end":57,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"::config::int::IntEncoding::serialize_i32","value":"fn <W, O> (ser: &mut ::ser::Serializer<W, O>, val: i32) -> Result<()>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":19551,"byte_end":19564,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"::config::int::IntEncoding::serialize_i64","value":"fn <W, O> (ser: &mut ::ser::Serializer<W, O>, val: i64) -> Result<()>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":19747,"byte_end":19762,"line_start":69,"line_end":69,"column_start":8,"column_end":23},"name":"deserialize_len","qualname":"::config::int::IntEncoding::deserialize_len","value":"fn <'de, R, O> (de: &mut ::de::Deserializer<R, O>) -> Result<usize>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Deserializes a sequence length.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":19721,"byte_end":19738,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":19952,"byte_end":19967,"line_start":75,"line_end":75,"column_start":8,"column_end":23},"name":"deserialize_u16","qualname":"::config::int::IntEncoding::deserialize_u16","value":"fn <'de, R, O> (de: &mut ::de::Deserializer<R, O>) -> Result<u16>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":20084,"byte_end":20099,"line_start":79,"line_end":79,"column_start":8,"column_end":23},"name":"deserialize_u32","qualname":"::config::int::IntEncoding::deserialize_u32","value":"fn <'de, R, O> (de: &mut ::de::Deserializer<R, O>) -> Result<u32>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":20216,"byte_end":20231,"line_start":83,"line_end":83,"column_start":8,"column_end":23},"name":"deserialize_u64","qualname":"::config::int::IntEncoding::deserialize_u64","value":"fn <'de, R, O> (de: &mut ::de::Deserializer<R, O>) -> Result<u64>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":20348,"byte_end":20363,"line_start":87,"line_end":87,"column_start":8,"column_end":23},"name":"deserialize_i16","qualname":"::config::int::IntEncoding::deserialize_i16","value":"fn <'de, R, O> (de: &mut ::de::Deserializer<R, O>) -> Result<i16>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":20480,"byte_end":20495,"line_start":91,"line_end":91,"column_start":8,"column_end":23},"name":"deserialize_i32","qualname":"::config::int::IntEncoding::deserialize_i32","value":"fn <'de, R, O> (de: &mut ::de::Deserializer<R, O>) -> Result<i32>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":20612,"byte_end":20627,"line_start":95,"line_end":95,"column_start":8,"column_end":23},"name":"deserialize_i64","qualname":"::config::int::IntEncoding::deserialize_i64","value":"fn <'de, R, O> (de: &mut ::de::Deserializer<R, O>) -> Result<i64>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":20776,"byte_end":20785,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"u128_size","qualname":"::config::int::IntEncoding::u128_size","value":"fn (v: u128) -> u64","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":20815,"byte_end":20824,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"i128_size","qualname":"::config::int::IntEncoding::i128_size","value":"fn (v: i128) -> u64","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":20854,"byte_end":20868,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"serialize_u128","qualname":"::config::int::IntEncoding::serialize_u128","value":"fn <W, O> (ser: &mut ::Serializer<W, O>, val: u128) -> Result<()>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":20997,"byte_end":21013,"line_start":106,"line_end":106,"column_start":12,"column_end":28},"name":"deserialize_u128","qualname":"::config::int::IntEncoding::deserialize_u128","value":"fn <'de, R, O> (de: &mut ::Deserializer<R, O>) -> Result<u128>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":21137,"byte_end":21151,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"serialize_i128","qualname":"::config::int::IntEncoding::serialize_i128","value":"fn <W, O> (ser: &mut ::Serializer<W, O>, val: i128) -> Result<()>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":21280,"byte_end":21296,"line_start":113,"line_end":113,"column_start":12,"column_end":28},"name":"deserialize_i128","qualname":"::config::int::IntEncoding::deserialize_i128","value":"fn <'de, R, O> (de: &mut ::Deserializer<R, O>) -> Result<i128>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1073},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":21632,"byte_end":21646,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"FixintEncoding","qualname":"::config::int::FixintEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" Fixed-size integer encoding.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1078},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":23414,"byte_end":23428,"line_start":170,"line_end":170,"column_start":12,"column_end":26},"name":"VarintEncoding","qualname":"::config::int::VarintEncoding","value":"","parent":null,"children":[],"decl_id":null,"docs":" Variable-size integer encoding (excepting [ui]8).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1125},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":41352,"byte_end":41358,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::legacy::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127}],"decl_id":null,"docs":" A configuration builder whose options Bincode will use\n while serializing and deserializing.","sig":null,"attributes":[{"value":"deprecated(since = \"1.3.0\", note =\n             \"please use the `DefaultOptions`/`Options` system instead\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":41229,"byte_end":41339,"line_start":24,"line_end":27,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":43840,"byte_end":43848,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"no_limit","qualname":"<Config>::no_limit","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to be unlimited.\n This is the default.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":43810,"byte_end":43827,"line_start":113,"line_end":113,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":44020,"byte_end":44025,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"limit","qualname":"<Config>::limit","value":"fn (&mut self, limit: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to `limit`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":43990,"byte_end":44007,"line_start":120,"line_end":120,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":44249,"byte_end":44262,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Config>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to little-endian\n This is the default.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":44219,"byte_end":44236,"line_start":128,"line_end":128,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":44435,"byte_end":44445,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Config>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to big-endian\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":44405,"byte_end":44422,"line_start":135,"line_end":135,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":44638,"byte_end":44651,"line_start":143,"line_end":143,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Config>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to the the machine-native endianness\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":44608,"byte_end":44625,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":44870,"byte_end":44879,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Config>::serialize","value":"fn <T> (&self, t: &T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":44840,"byte_end":44857,"line_start":149,"line_end":149,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":45158,"byte_end":45173,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"serialized_size","qualname":"<Config>::serialized_size","value":"fn <T> (&self, t: &T) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":45128,"byte_end":45145,"line_start":155,"line_end":155,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":45604,"byte_end":45618,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"serialize_into","qualname":"<Config>::serialize_into","value":"fn <W, T> (&self, w: W, t: &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":45574,"byte_end":45591,"line_start":164,"line_end":164,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":45937,"byte_end":45948,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Config>::deserialize","value":"fn <'a, T> (&self, bytes: &'a [u8]) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":45907,"byte_end":45924,"line_start":174,"line_end":174,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":46180,"byte_end":46200,"line_start":182,"line_end":182,"column_start":12,"column_end":32},"name":"deserialize_in_place","qualname":"<Config>::deserialize_in_place","value":"fn <'a, R, T> (&self, reader: R, place: &mut T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" TODO: document\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":46150,"byte_end":46167,"line_start":181,"line_end":181,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":46562,"byte_end":46578,"line_start":192,"line_end":192,"column_start":12,"column_end":28},"name":"deserialize_seed","qualname":"<Config>::deserialize_seed","value":"fn <'a, T> (&self, seed: T, bytes: &'a [u8]) -> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes with state `seed` using this configuration.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":46532,"byte_end":46549,"line_start":191,"line_end":191,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":47001,"byte_end":47017,"line_start":204,"line_end":204,"column_start":12,"column_end":28},"name":"deserialize_from","qualname":"<Config>::deserialize_from","value":"fn <R, T> (&self, reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":46971,"byte_end":46988,"line_start":203,"line_end":203,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":47424,"byte_end":47445,"line_start":215,"line_end":215,"column_start":12,"column_end":33},"name":"deserialize_from_seed","qualname":"<Config>::deserialize_from_seed","value":"fn <'a, R, T> (&self, seed: T, reader: R) -> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er with state `seed` using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":47394,"byte_end":47411,"line_start":214,"line_end":214,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":48027,"byte_end":48050,"line_start":229,"line_end":229,"column_start":12,"column_end":35},"name":"deserialize_from_custom","qualname":"<Config>::deserialize_from_custom","value":"fn <'a, R, T> (&self, reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":47997,"byte_end":48014,"line_start":228,"line_end":228,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":48629,"byte_end":48657,"line_start":242,"line_end":242,"column_start":12,"column_end":40},"name":"deserialize_from_custom_seed","qualname":"<Config>::deserialize_from_custom_seed","value":"fn <'a, R, T> (&self, seed: T, reader: R) -> Result<T::Value>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er with state `seed` using the default\n configuration. It is highly recommended to use `deserialize_from` unless you need to\n implement `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":48599,"byte_end":48616,"line_start":241,"line_end":241,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":294},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/limit.rs","byte_start":49089,"byte_end":49098,"line_start":4,"line_end":4,"column_start":11,"column_end":20},"name":"SizeLimit","qualname":"::config::limit::SizeLimit","value":"SizeLimit","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"decl_id":null,"docs":" A trait for stopping serialization and deserialization when a certain limit has been reached.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/limit.rs","byte_start":49249,"byte_end":49252,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"add","qualname":"::config::limit::SizeLimit::add","value":"fn (&mut self, n: u64) -> Result<()>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Tells the SizeLimit that a certain number of bytes has been\n read or written.  Returns Err if the limit has been exceeded.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/limit.rs","byte_start":49343,"byte_end":49348,"line_start":9,"line_end":9,"column_start":8,"column_end":13},"name":"limit","qualname":"::config::limit::SizeLimit::limit","value":"fn (&self) -> Option<u64>","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" Returns the hard limit (if one exists)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1155},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/limit.rs","byte_start":49524,"byte_end":49531,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"Bounded","qualname":"::config::limit::Bounded","value":"","parent":null,"children":[],"decl_id":null,"docs":" A SizeLimit that restricts serialized or deserialized messages from\n exceeding a certain byte length.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1161},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/limit.rs","byte_start":49693,"byte_end":49701,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Infinite","qualname":"::config::limit::Infinite","value":"","parent":null,"children":[],"decl_id":null,"docs":" A SizeLimit without a limit!\n Use this if you don't care about the size of encoded or decoded messages.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":308},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/trailing.rs","byte_start":50408,"byte_end":50421,"line_start":5,"line_end":5,"column_start":11,"column_end":24},"name":"TrailingBytes","qualname":"::config::trailing::TrailingBytes","value":"TrailingBytes","parent":null,"children":[{"krate":0,"index":309}],"decl_id":null,"docs":" A trait for erroring deserialization if not all bytes were read.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/trailing.rs","byte_start":50530,"byte_end":50539,"line_start":7,"line_end":7,"column_start":8,"column_end":17},"name":"check_end","qualname":"::config::trailing::TrailingBytes::check_end","value":"fn (reader: &SliceReader) -> Result<()>","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":" Checks a given slice reader to determine if deserialization used all bytes in the slice.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1166},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/trailing.rs","byte_start":50710,"byte_end":50723,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"AllowTrailing","qualname":"::config::trailing::AllowTrailing","value":"","parent":null,"children":[],"decl_id":null,"docs":" A TrailingBytes config that will allow trailing bytes in slices after deserialization.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1171},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/trailing.rs","byte_start":50907,"byte_end":50921,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"RejectTrailing","qualname":"::config::trailing::RejectTrailing","value":"","parent":null,"children":[],"decl_id":null,"docs":" A TrailingBytes config that will cause bincode to produce an error if bytes are left over in the slice when deserialization is complete.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1176},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":5974,"byte_end":5988,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"name":"DefaultOptions","qualname":"::config::DefaultOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default options for bincode serialization/deserialization.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":6352,"byte_end":6355,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultOptions>::new","value":"fn () -> DefaultOptions","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":7917,"byte_end":7924,"line_start":84,"line_end":84,"column_start":11,"column_end":18},"name":"Options","qualname":"::config::Options","value":"Options: InternalOptions + Sized","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":358},{"krate":0,"index":362}],"decl_id":null,"docs":" A configuration builder trait whose options Bincode will use\n while serializing and deserializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":8036,"byte_end":8049,"line_start":87,"line_end":87,"column_start":8,"column_end":21},"name":"with_no_limit","qualname":"::config::Options::with_no_limit","value":"fn (self) -> WithOtherLimit<Self, Infinite>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Sets the byte limit to be unlimited.\n This is the default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":8195,"byte_end":8205,"line_start":92,"line_end":92,"column_start":8,"column_end":18},"name":"with_limit","qualname":"::config::Options::with_limit","value":"fn (self, limit: u64) -> WithOtherLimit<Self, Bounded>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Sets the byte limit to `limit`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":8403,"byte_end":8421,"line_start":98,"line_end":98,"column_start":8,"column_end":26},"name":"with_little_endian","qualname":"::config::Options::with_little_endian","value":"fn (self) -> WithOtherEndian<Self, LittleEndian>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Sets the endianness to little-endian\n This is the default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":8565,"byte_end":8580,"line_start":103,"line_end":103,"column_start":8,"column_end":23},"name":"with_big_endian","qualname":"::config::Options::with_big_endian","value":"fn (self) -> WithOtherEndian<Self, BigEndian>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Sets the endianness to big-endian\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":8744,"byte_end":8762,"line_start":108,"line_end":108,"column_start":8,"column_end":26},"name":"with_native_endian","qualname":"::config::Options::with_native_endian","value":"fn (self) -> WithOtherEndian<Self, NativeEndian>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Sets the endianness to the the machine-native endianness\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":8907,"byte_end":8927,"line_start":113,"line_end":113,"column_start":8,"column_end":28},"name":"with_varint_encoding","qualname":"::config::Options::with_varint_encoding","value":"fn (self) -> WithOtherIntEncoding<Self, VarintEncoding>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Sets the length encoding to varint\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":9086,"byte_end":9106,"line_start":118,"line_end":118,"column_start":8,"column_end":28},"name":"with_fixint_encoding","qualname":"::config::Options::with_fixint_encoding","value":"fn (self) -> WithOtherIntEncoding<Self, FixintEncoding>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Sets the length encoding to be fixed\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":9275,"byte_end":9296,"line_start":123,"line_end":123,"column_start":8,"column_end":29},"name":"reject_trailing_bytes","qualname":"::config::Options::reject_trailing_bytes","value":"fn (self) -> WithOtherTrailing<Self, RejectTrailing>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Sets the deserializer to reject trailing bytes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":9458,"byte_end":9478,"line_start":128,"line_end":128,"column_start":8,"column_end":28},"name":"allow_trailing_bytes","qualname":"::config::Options::allow_trailing_bytes","value":"fn (self) -> WithOtherTrailing<Self, AllowTrailing>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Sets the deserializer to allow trailing bytes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":9696,"byte_end":9705,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"serialize","qualname":"::config::Options::serialize","value":"fn <S> (self, t: &S) -> Result<Vec<u8>>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":9670,"byte_end":9687,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":9952,"byte_end":9967,"line_start":140,"line_end":140,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::config::Options::serialized_size","value":"fn <T> (self, t: &T) -> Result<u64>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":9926,"byte_end":9943,"line_start":139,"line_end":139,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":10366,"byte_end":10380,"line_start":149,"line_end":149,"column_start":8,"column_end":22},"name":"serialize_into","qualname":"::config::Options::serialize_into","value":"fn <W, T> (self, w: W, t: &T) -> Result<()>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":10340,"byte_end":10357,"line_start":148,"line_end":148,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":10632,"byte_end":10643,"line_start":155,"line_end":155,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::config::Options::deserialize","value":"fn <'a, T> (self, bytes: &'a [u8]) -> Result<T>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":10606,"byte_end":10623,"line_start":154,"line_end":154,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":10843,"byte_end":10863,"line_start":162,"line_end":162,"column_start":8,"column_end":28},"name":"deserialize_in_place","qualname":"::config::Options::deserialize_in_place","value":"fn <'a, R, T> (self, reader: R, place: &mut T) -> Result<()>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" TODO: document\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":10817,"byte_end":10834,"line_start":161,"line_end":161,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":11193,"byte_end":11209,"line_start":172,"line_end":172,"column_start":8,"column_end":24},"name":"deserialize_seed","qualname":"::config::Options::deserialize_seed","value":"fn <'a, T> (self, seed: T, bytes: &'a [u8]) -> Result<T::Value>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes with state `seed` using this configuration.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":11167,"byte_end":11184,"line_start":171,"line_end":171,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":11600,"byte_end":11616,"line_start":184,"line_end":184,"column_start":8,"column_end":24},"name":"deserialize_from","qualname":"::config::Options::deserialize_from","value":"fn <R, T> (self, reader: R) -> Result<T>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":11574,"byte_end":11591,"line_start":183,"line_end":183,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":11965,"byte_end":11986,"line_start":192,"line_end":192,"column_start":8,"column_end":29},"name":"deserialize_from_seed","qualname":"::config::Options::deserialize_from_seed","value":"fn <'a, R, T> (self, seed: T, reader: R) -> Result<T::Value>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er with state `seed` using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":11939,"byte_end":11956,"line_start":191,"line_end":191,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":12536,"byte_end":12559,"line_start":206,"line_end":206,"column_start":8,"column_end":31},"name":"deserialize_from_custom","qualname":"::config::Options::deserialize_from_custom","value":"fn <'a, R, T> (self, reader: R) -> Result<T>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":12510,"byte_end":12527,"line_start":205,"line_end":205,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":13106,"byte_end":13134,"line_start":219,"line_end":219,"column_start":8,"column_end":36},"name":"deserialize_from_custom_seed","qualname":"::config::Options::deserialize_from_custom_seed","value":"fn <'a, R, T> (self, seed: T, reader: R) -> Result<T::Value>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er with state `seed` using the default\n configuration. It is highly recommended to use `deserialize_from` unless you need to\n implement `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":13080,"byte_end":13097,"line_start":218,"line_end":218,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1182},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":13501,"byte_end":13515,"line_start":232,"line_end":232,"column_start":12,"column_end":26},"name":"WithOtherLimit","qualname":"::config::WithOtherLimit","value":"WithOtherLimit {  }","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1186}],"decl_id":null,"docs":" A configuration struct with a user-specified byte limit\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1194},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":13696,"byte_end":13711,"line_start":239,"line_end":239,"column_start":12,"column_end":27},"name":"WithOtherEndian","qualname":"::config::WithOtherEndian","value":"WithOtherEndian {  }","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198}],"decl_id":null,"docs":" A configuration struct with a user-specified endian order\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":368},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":13877,"byte_end":13897,"line_start":245,"line_end":245,"column_start":12,"column_end":32},"name":"WithOtherIntEncoding","qualname":"::config::WithOtherIntEncoding","value":"WithOtherIntEncoding {  }","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"decl_id":null,"docs":" A configuration struct with a user-specified length encoding\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":14067,"byte_end":14084,"line_start":251,"line_end":251,"column_start":12,"column_end":29},"name":"WithOtherTrailing","qualname":"::config::WithOtherTrailing","value":"WithOtherTrailing {  }","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" A configuration struct with a user-specified trailing bytes behavior.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":428},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":16480,"byte_end":16495,"line_start":342,"line_end":342,"column_start":15,"column_end":30},"name":"InternalOptions","qualname":"::config::internal::InternalOptions","value":"InternalOptions","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":429},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":16512,"byte_end":16517,"line_start":343,"line_end":343,"column_start":14,"column_end":19},"name":"Limit","qualname":"::config::internal::InternalOptions::Limit","value":"type Limit: SizeLimit + 'static;","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":430},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":16554,"byte_end":16560,"line_start":344,"line_end":344,"column_start":14,"column_end":20},"name":"Endian","qualname":"::config::internal::InternalOptions::Endian","value":"type Endian: BincodeByteOrder + 'static;","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":431},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":16604,"byte_end":16615,"line_start":345,"line_end":345,"column_start":14,"column_end":25},"name":"IntEncoding","qualname":"::config::internal::InternalOptions::IntEncoding","value":"type IntEncoding: IntEncoding + 'static;","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":432},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":16654,"byte_end":16662,"line_start":346,"line_end":346,"column_start":14,"column_end":22},"name":"Trailing","qualname":"::config::internal::InternalOptions::Trailing","value":"type Trailing: TrailingBytes + 'static;","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":16703,"byte_end":16708,"line_start":348,"line_end":348,"column_start":12,"column_end":17},"name":"limit","qualname":"::config::internal::InternalOptions::limit","value":"fn (&mut self) -> &mut Self::Limit","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":442},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":520},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":531},{"krate":0,"index":535},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":649},{"krate":0,"index":662},{"krate":0,"index":664}],"decl_id":null,"docs":" Deserialize bincode data to a Rust data structure.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":462},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::de::read","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":480},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":493},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":509},{"krate":0,"index":512}],"decl_id":null,"docs":" Specialized ways to read data into bincode.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":466},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":67665,"byte_end":67676,"line_start":13,"line_end":13,"column_start":11,"column_end":22},"name":"BincodeRead","qualname":"::de::read::BincodeRead","value":"BincodeRead<'storage>: io::Read","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":471}],"decl_id":null,"docs":" An optional Read trait for advanced Bincode usage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":67815,"byte_end":67831,"line_start":16,"line_end":16,"column_start":8,"column_end":24},"name":"forward_read_str","qualname":"::de::read::BincodeRead::forward_read_str","value":"fn <V> (&mut self, length: usize, visitor: V) -> Result<V::Value>","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Check that the next `length` bytes are a valid string and pass\n it on to the serde reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":68026,"byte_end":68041,"line_start":21,"line_end":21,"column_start":8,"column_end":23},"name":"get_byte_buffer","qualname":"::de::read::BincodeRead::get_byte_buffer","value":"fn (&mut self, length: usize) -> Result<Vec<u8>>","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Transfer ownership of the next `length` bytes to the caller.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":68171,"byte_end":68189,"line_start":24,"line_end":24,"column_start":8,"column_end":26},"name":"forward_read_bytes","qualname":"::de::read::BincodeRead::forward_read_bytes","value":"fn <V> (&mut self, length: usize, visitor: V) -> Result<V::Value>","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Pass a slice of the next `length` bytes on to the serde reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":473},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":68371,"byte_end":68382,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"SliceReader","qualname":"::de::read::SliceReader","value":"SliceReader {  }","parent":null,"children":[{"krate":0,"index":475}],"decl_id":null,"docs":" A BincodeRead implementation for byte slices\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":476},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":68492,"byte_end":68500,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::de::read::IoReader","value":"IoReader {  }","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"decl_id":null,"docs":" A BincodeRead implementation for `io::Read`ers\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":520},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":52280,"byte_end":52292,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" A Deserializer that reads bytes from a buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":52876,"byte_end":52887,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"with_reader","qualname":"<Deserializer<IoReader<IR>, O>>::with_reader","value":"fn (r: IR, options: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Deserializer with a given `Read`er and options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":53169,"byte_end":53179,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Deserializer<SliceReader, O>>::from_slice","value":"fn (slice: &'de [u8], options: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Deserializer that will read from the given slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":53479,"byte_end":53496,"line_start":67,"line_end":67,"column_start":12,"column_end":29},"name":"with_bincode_read","qualname":"<Deserializer<R, O>>::with_bincode_read","value":"fn (r: R, options: O) -> Deserializer<R, O>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Deserializer with the given `BincodeRead`er\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":673},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":73268,"byte_end":73274,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a serialization or deserialization operation.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":675},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":73384,"byte_end":73389,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Box<ErrorKind>","parent":null,"children":[],"decl_id":null,"docs":" An error that can be produced during (de)serializing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":73692,"byte_end":73694,"line_start":19,"line_end":19,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" If the error stems from the reader/writer that is being used\n during (de)serialization, that error will be stored and returned here.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":73806,"byte_end":73825,"line_start":21,"line_end":21,"column_start":5,"column_end":24},"name":"InvalidUtf8Encoding","qualname":"::error::ErrorKind::InvalidUtf8Encoding","value":"ErrorKind::InvalidUtf8Encoding(Utf8Error)","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a string that is not valid utf8\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1233},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":73963,"byte_end":73982,"line_start":24,"line_end":24,"column_start":5,"column_end":24},"name":"InvalidBoolEncoding","qualname":"::error::ErrorKind::InvalidBoolEncoding","value":"ErrorKind::InvalidBoolEncoding(u8)","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a bool that was\n not encoded as either a 1 or a 0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1236},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":74097,"byte_end":74116,"line_start":26,"line_end":26,"column_start":5,"column_end":24},"name":"InvalidCharEncoding","qualname":"::error::ErrorKind::InvalidCharEncoding","value":"ErrorKind::InvalidCharEncoding","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a char that is not in the correct format.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1238},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":74248,"byte_end":74266,"line_start":29,"line_end":29,"column_start":5,"column_end":23},"name":"InvalidTagEncoding","qualname":"::error::ErrorKind::InvalidTagEncoding","value":"ErrorKind::InvalidTagEncoding(usize)","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize the tag of an enum that is\n not in the expected ranges\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":74411,"byte_end":74437,"line_start":32,"line_end":32,"column_start":5,"column_end":31},"name":"DeserializeAnyNotSupported","qualname":"::error::ErrorKind::DeserializeAnyNotSupported","value":"ErrorKind::DeserializeAnyNotSupported","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Serde has a deserialize_any method that lets the format hint to the\n object which route to take in deserializing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":74556,"byte_end":74565,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"SizeLimit","qualname":"::error::ErrorKind::SizeLimit","value":"ErrorKind::SizeLimit","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" If (de)serializing a message takes more than the provided size limit, this\n error is returned.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1245},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":74650,"byte_end":74672,"line_start":37,"line_end":37,"column_start":5,"column_end":27},"name":"SequenceMustHaveLength","qualname":"::error::ErrorKind::SequenceMustHaveLength","value":"ErrorKind::SequenceMustHaveLength","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Bincode can not encode sequences of unknown length (like iterators).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":74723,"byte_end":74729,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::ErrorKind::Custom","value":"ErrorKind::Custom(String)","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" A custom error message from Serde.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1226},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":73525,"byte_end":73534,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"ErrorKind::{Io, InvalidUtf8Encoding, InvalidBoolEncoding, InvalidCharEncoding, InvalidTagEncoding, DeserializeAnyNotSupported, SizeLimit, SequenceMustHaveLength, Custom}","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1247}],"decl_id":null,"docs":" The kind of error that can be produced during a serialization or deserialization.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":81979,"byte_end":81989,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"decl_id":null,"docs":" An Serializer that encodes values directly into a Writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":82486,"byte_end":82489,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer<W, O>>::new","value":"fn (w: W, options: O) -> Serializer<W, O>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Serializer with the given `Write`r.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":861},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":93787,"byte_end":93795,"line_start":427,"line_end":427,"column_start":12,"column_end":20},"name":"Compound","qualname":"::ser::Compound","value":"Compound {  }","parent":null,"children":[{"krate":0,"index":865}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1019},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1775,"byte_end":1781,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"config","qualname":"::config","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1676,"byte_end":1693,"line_start":58,"line_end":58,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"1.3.0\", note = \"please use `options()` instead\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1695,"byte_end":1766,"line_start":59,"line_end":59,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":1020},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":2134,"byte_end":2141,"line_start":72,"line_end":72,"column_start":8,"column_end":15},"name":"options","qualname":"::options","value":"fn () -> DefaultOptions","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":2108,"byte_end":2125,"line_start":71,"line_end":71,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1021},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":2449,"byte_end":2463,"line_start":80,"line_end":80,"column_start":8,"column_end":22},"name":"serialize_into","qualname":"::serialize_into","value":"fn <W, T> (writer: W, value: &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using the default configuration.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1024},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":2780,"byte_end":2789,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize","value":"fn <T> (value: &T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1026},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":3161,"byte_end":3177,"line_start":104,"line_end":104,"column_start":8,"column_end":24},"name":"deserialize_from","qualname":"::deserialize_from","value":"fn <R, T> (reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using the default configuration.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1029},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":3714,"byte_end":3737,"line_start":120,"line_end":120,"column_start":8,"column_end":31},"name":"deserialize_from_custom","qualname":"::deserialize_from_custom","value":"fn <'a, R, T> (reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1033},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":4110,"byte_end":4130,"line_start":135,"line_end":135,"column_start":8,"column_end":28},"name":"deserialize_in_place","qualname":"::deserialize_in_place","value":"fn <'a, R, T> (reader: R, place: &mut T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Only use this if you know what you're doing.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1037},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":4496,"byte_end":4507,"line_start":147,"line_end":147,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::deserialize","value":"fn <'a, T> (bytes: &'a [u8]) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1040},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":4832,"byte_end":4847,"line_start":158,"line_end":158,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::serialized_size","value":"fn <T> (value: &T) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with the default configuration.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17504,"byte_end":17516,"line_start":19,"line_end":19,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17595,"byte_end":17604,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17680,"byte_end":17692,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":23779,"byte_end":23793,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":29118,"byte_end":29132,"line_start":330,"line_end":330,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":180},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":33189,"byte_end":33203,"line_start":460,"line_end":460,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":43535,"byte_end":43541,"line_start":102,"line_end":102,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/limit.rs","byte_start":49725,"byte_end":49732,"line_start":22,"line_end":22,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/limit.rs","byte_start":50079,"byte_end":50087,"line_start":39,"line_end":39,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/trailing.rs","byte_start":50949,"byte_end":50962,"line_start":19,"line_end":19,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/trailing.rs","byte_start":51097,"byte_end":51111,"line_start":26,"line_end":26,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":6008,"byte_end":6022,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":6442,"byte_end":6456,"line_start":46,"line_end":46,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":6546,"byte_end":6560,"line_start":52,"line_end":52,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":13397,"byte_end":13398,"line_start":228,"line_end":228,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":14203,"byte_end":14217,"line_start":256,"line_end":256,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":14471,"byte_end":14486,"line_start":266,"line_end":266,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":14721,"byte_end":14741,"line_start":276,"line_end":276,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":14988,"byte_end":15005,"line_start":286,"line_end":286,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":15281,"byte_end":15296,"line_start":296,"line_end":296,"column_start":69,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":15600,"byte_end":15614,"line_start":307,"line_end":307,"column_start":62,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":15890,"byte_end":15910,"line_start":317,"line_end":317,"column_start":64,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":16192,"byte_end":16209,"line_start":328,"line_end":328,"column_start":66,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":68570,"byte_end":68581,"line_start":40,"line_end":40,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":69190,"byte_end":69198,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":69416,"byte_end":69427,"line_start":71,"line_end":71,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":69991,"byte_end":69999,"line_start":90,"line_end":90,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":70283,"byte_end":70294,"line_start":101,"line_end":101,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":70554,"byte_end":70565,"line_start":111,"line_end":111,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":71440,"byte_end":71448,"line_start":139,"line_end":139,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":71709,"byte_end":71717,"line_start":152,"line_end":152,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":52761,"byte_end":52773,"line_start":45,"line_end":45,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":53048,"byte_end":53060,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":53379,"byte_end":53391,"line_start":65,"line_end":65,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":60778,"byte_end":60784,"line_start":303,"line_end":303,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":62589,"byte_end":62595,"line_start":363,"line_end":363,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":74763,"byte_end":74772,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":76266,"byte_end":76271,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":76384,"byte_end":76393,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":77494,"byte_end":77499,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":77646,"byte_end":77651,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":82396,"byte_end":82406,"line_start":35,"line_end":35,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":88518,"byte_end":88529,"line_start":239,"line_end":239,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":93912,"byte_end":93920,"line_start":431,"line_end":431,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":94334,"byte_end":94342,"line_start":453,"line_end":453,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":94762,"byte_end":94770,"line_start":475,"line_end":475,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":95189,"byte_end":95197,"line_start":497,"line_end":497,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":95607,"byte_end":95615,"line_start":519,"line_end":519,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":96215,"byte_end":96223,"line_start":549,"line_end":549,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":96663,"byte_end":96671,"line_start":571,"line_end":571,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":97201,"byte_end":97213,"line_start":597,"line_end":597,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":97590,"byte_end":97602,"line_start":615,"line_end":615,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":97985,"byte_end":97997,"line_start":633,"line_end":633,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":98379,"byte_end":98391,"line_start":651,"line_end":651,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":98769,"byte_end":98781,"line_start":669,"line_end":669,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":99344,"byte_end":99356,"line_start":695,"line_end":695,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":99759,"byte_end":99771,"line_start":713,"line_end":713,"column_start":61,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":101243,"byte_end":101253,"line_start":768,"line_end":768,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1192,"byte_end":1198,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/lib.rs","byte_start":1265,"byte_end":1267,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":442}},{"kind":"Mod","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":51791,"byte_end":51795,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":462}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17504,"byte_end":17516,"line_start":19,"line_end":19,"column_start":27,"column_end":39},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1042},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17595,"byte_end":17604,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1047},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/endian.rs","byte_start":17680,"byte_end":17692,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1052},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":23779,"byte_end":23793,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":29118,"byte_end":29132,"line_start":330,"line_end":330,"column_start":22,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1073},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/int.rs","byte_start":33189,"byte_end":33203,"line_start":460,"line_end":460,"column_start":22,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1078},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/legacy.rs","byte_start":43535,"byte_end":43541,"line_start":102,"line_end":102,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/limit.rs","byte_start":49725,"byte_end":49732,"line_start":22,"line_end":22,"column_start":20,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1155},"to":{"krate":0,"index":294}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/limit.rs","byte_start":50079,"byte_end":50087,"line_start":39,"line_end":39,"column_start":20,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1161},"to":{"krate":0,"index":294}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/trailing.rs","byte_start":50949,"byte_end":50962,"line_start":19,"line_end":19,"column_start":24,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/trailing.rs","byte_start":51097,"byte_end":51111,"line_start":26,"line_end":26,"column_start":24,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1171},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":6008,"byte_end":6022,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":6442,"byte_end":6456,"line_start":46,"line_end":46,"column_start":18,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":6546,"byte_end":6560,"line_start":52,"line_end":52,"column_start":26,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1176},"to":{"krate":0,"index":428}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":7926,"byte_end":7941,"line_start":84,"line_end":84,"column_start":20,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":428},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":7944,"byte_end":7949,"line_start":84,"line_end":84,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":13397,"byte_end":13398,"line_start":228,"line_end":228,"column_start":38,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":14203,"byte_end":14217,"line_start":256,"line_end":256,"column_start":32,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":14471,"byte_end":14486,"line_start":266,"line_end":266,"column_start":39,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":14721,"byte_end":14741,"line_start":276,"line_end":276,"column_start":34,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":14988,"byte_end":15005,"line_start":286,"line_end":286,"column_start":36,"column_end":53},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":15281,"byte_end":15296,"line_start":296,"line_end":296,"column_start":69,"column_end":84},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1194},"to":{"krate":0,"index":428}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":15600,"byte_end":15614,"line_start":307,"line_end":307,"column_start":62,"column_end":76},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1182},"to":{"krate":0,"index":428}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":15890,"byte_end":15910,"line_start":317,"line_end":317,"column_start":64,"column_end":84},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":368},"to":{"krate":0,"index":428}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/config/mod.rs","byte_start":16192,"byte_end":16209,"line_start":328,"line_end":328,"column_start":66,"column_end":83},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":373},"to":{"krate":0,"index":428}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":67692,"byte_end":67696,"line_start":13,"line_end":13,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2848},"to":{"krate":0,"index":466}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":68570,"byte_end":68581,"line_start":40,"line_end":40,"column_start":16,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":69190,"byte_end":69198,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":69416,"byte_end":69427,"line_start":71,"line_end":71,"column_start":29,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":473},"to":{"krate":1,"index":2848}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":69991,"byte_end":69999,"line_start":90,"line_end":90,"column_start":32,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":476},"to":{"krate":1,"index":2848}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":70283,"byte_end":70294,"line_start":101,"line_end":101,"column_start":16,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":70554,"byte_end":70565,"line_start":111,"line_end":111,"column_start":42,"column_end":53},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":473},"to":{"krate":0,"index":466}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":71440,"byte_end":71448,"line_start":139,"line_end":139,"column_start":9,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/read.rs","byte_start":71709,"byte_end":71717,"line_start":152,"line_end":152,"column_start":33,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":476},"to":{"krate":0,"index":466}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":52761,"byte_end":52773,"line_start":45,"line_end":45,"column_start":33,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":53048,"byte_end":53060,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":53379,"byte_end":53391,"line_start":65,"line_end":65,"column_start":44,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":60778,"byte_end":60784,"line_start":303,"line_end":303,"column_start":17,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":596},"to":{"krate":16,"index":1358}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/de/mod.rs","byte_start":62589,"byte_end":62595,"line_start":363,"line_end":363,"column_start":17,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":618},"to":{"krate":16,"index":1376}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":74763,"byte_end":74772,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1226},"to":{"krate":1,"index":1623}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":76266,"byte_end":76271,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":675},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":76384,"byte_end":76393,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":77494,"byte_end":77499,"line_start":105,"line_end":105,"column_start":27,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":675},"to":{"krate":16,"index":8131}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/error.rs","byte_start":77646,"byte_end":77651,"line_start":111,"line_end":111,"column_start":28,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":675},"to":{"krate":16,"index":8751}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":82396,"byte_end":82406,"line_start":35,"line_end":35,"column_start":28,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":88518,"byte_end":88529,"line_start":239,"line_end":239,"column_start":18,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":93912,"byte_end":93920,"line_start":431,"line_end":431,"column_start":45,"column_end":53},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":861},"to":{"krate":16,"index":1767}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":94334,"byte_end":94342,"line_start":453,"line_end":453,"column_start":47,"column_end":55},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":861},"to":{"krate":16,"index":1773}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":94762,"byte_end":94770,"line_start":475,"line_end":475,"column_start":53,"column_end":61},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":861},"to":{"krate":16,"index":1779}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":95189,"byte_end":95197,"line_start":497,"line_end":497,"column_start":54,"column_end":62},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":861},"to":{"krate":16,"index":1785}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":95607,"byte_end":95615,"line_start":519,"line_end":519,"column_start":45,"column_end":53},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":861},"to":{"krate":16,"index":1791}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":96215,"byte_end":96223,"line_start":549,"line_end":549,"column_start":48,"column_end":56},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":861},"to":{"krate":16,"index":1802}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":96663,"byte_end":96671,"line_start":571,"line_end":571,"column_start":55,"column_end":63},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":861},"to":{"krate":16,"index":1809}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":97201,"byte_end":97213,"line_start":597,"line_end":597,"column_start":51,"column_end":63},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":931},"to":{"krate":16,"index":1767}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":97590,"byte_end":97602,"line_start":615,"line_end":615,"column_start":53,"column_end":65},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":931},"to":{"krate":16,"index":1773}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":97985,"byte_end":97997,"line_start":633,"line_end":633,"column_start":59,"column_end":71},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":931},"to":{"krate":16,"index":1779}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":98379,"byte_end":98391,"line_start":651,"line_end":651,"column_start":60,"column_end":72},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":931},"to":{"krate":16,"index":1785}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":98769,"byte_end":98781,"line_start":669,"line_end":669,"column_start":56,"column_end":68},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":931},"to":{"krate":16,"index":1791}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":99344,"byte_end":99356,"line_start":695,"line_end":695,"column_start":54,"column_end":66},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":931},"to":{"krate":16,"index":1802}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":99759,"byte_end":99771,"line_start":713,"line_end":713,"column_start":61,"column_end":73},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":931},"to":{"krate":16,"index":1809}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/bincode-1.3.1/src/ser/mod.rs","byte_start":101243,"byte_end":101253,"line_start":768,"line_end":768,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1002},"to":{"krate":4294967295,"index":4294967295}}]}