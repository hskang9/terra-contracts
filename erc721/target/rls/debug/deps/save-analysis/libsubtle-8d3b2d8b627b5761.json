{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3","program":"/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","subtle","/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=8d3b2d8b627b5761","-C","extra-filename=-8d3b2d8b627b5761","--out-dir","/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","-L","dependency=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libsubtle-8d3b2d8b627b5761.rmeta"},"prelude":{"crate_id":{"name":"subtle","disambiguator":[13855503773054382944,9797051755389219016]},"crate_root":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src","external_crates":[{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}}],"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":320,"byte_end":19430,"line_start":11,"line_end":636,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":320,"byte_end":19430,"line_start":11,"line_end":636,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":90},{"krate":0,"index":97},{"krate":0,"index":95},{"krate":0,"index":93},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":150},{"krate":0,"index":159},{"krate":0,"index":157},{"krate":0,"index":154},{"krate":0,"index":67},{"krate":0,"index":84},{"krate":0,"index":87}],"decl_id":null,"docs":" Note that docs will only build on nightly Rust until\n [RFC 1990 stabilizes](https://github.com/rust-lang/rust/issues/44732).\n","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":320,"byte_end":330,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":90},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":1827,"byte_end":1833,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"Choice","qualname":"::Choice","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `Choice` struct represents a choice for use in conditional assignment.\n \n It is a wrapper around a `u8`, which should have the value either `1` (true)\n or `0` (false).\n \n The conversion from `u8` to `Choice` passes the value through an optimization\n barrier, as a best-effort attempt to prevent the compiler from inferring that\n the `Choice` value is a boolean. This strategy is based on Tim Maclean's\n [work on `rust-timing-shield`][rust-timing-shield], which attempts to provide\n a more comprehensive approach for preventing software side-channels in Rust\n code.\n \n The `Choice` struct implements operators for AND, OR, XOR, and NOT, to allow\n combining `Choice` values. These operations do not short-circuit.\n \n [rust-timing-shield]:\n https://www.chosenplaintext.ca/open-source/rust-timing-shield/security\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":2235,"byte_end":2244,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"unwrap_u8","qualname":"<Choice>::unwrap_u8","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the `Choice` wrapper to reveal the underlying `u8`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":2214,"byte_end":2223,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":5688,"byte_end":5702,"line_start":185,"line_end":185,"column_start":11,"column_end":25},"name":"ConstantTimeEq","qualname":"::ConstantTimeEq","value":"ConstantTimeEq","parent":null,"children":[{"krate":0,"index":48}],"decl_id":null,"docs":" An `Eq`-like trait that produces a `Choice` instead of a `bool`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":5960,"byte_end":5965,"line_start":195,"line_end":195,"column_start":8,"column_end":13},"name":"ct_eq","qualname":"::ConstantTimeEq::ct_eq","value":"fn (&self, other: &Self) -> Choice","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Determine if two items are equal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":5943,"byte_end":5952,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":8956,"byte_end":8979,"line_start":284,"line_end":284,"column_start":11,"column_end":34},"name":"ConditionallySelectable","qualname":"::ConditionallySelectable","value":"ConditionallySelectable: Copy","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" A type which can be conditionally selected in constant time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":9637,"byte_end":9655,"line_start":311,"line_end":311,"column_start":8,"column_end":26},"name":"conditional_select","qualname":"::ConditionallySelectable::conditional_select","value":"fn (a: &Self, b: &Self, choice: Choice) -> Self","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Select `a` or `b` according to `choice`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":9620,"byte_end":9629,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":10241,"byte_end":10259,"line_start":334,"line_end":334,"column_start":8,"column_end":26},"name":"conditional_assign","qualname":"::ConditionallySelectable::conditional_assign","value":"fn (&mut self, other: &Self, choice: Choice) -> ()","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Conditionally assign `other` to `self`, according to `choice`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":10224,"byte_end":10233,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":11033,"byte_end":11049,"line_start":362,"line_end":362,"column_start":8,"column_end":24},"name":"conditional_swap","qualname":"::ConditionallySelectable::conditional_swap","value":"fn (a: &mut Self, b: &mut Self, choice: Choice) -> ()","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Conditionally swap `self` and `other` if `choice == 1`; otherwise,\n reassign both unto themselves.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":11016,"byte_end":11025,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":13570,"byte_end":13592,"line_start":455,"line_end":455,"column_start":11,"column_end":33},"name":"ConditionallyNegatable","qualname":"::ConditionallyNegatable","value":"ConditionallyNegatable","parent":null,"children":[{"krate":0,"index":62}],"decl_id":null,"docs":" A type which can be conditionally negated in constant time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":13766,"byte_end":13784,"line_start":461,"line_end":461,"column_start":8,"column_end":26},"name":"conditional_negate","qualname":"::ConditionallyNegatable::conditional_negate","value":"fn (&mut self, choice: Choice) -> ()","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Negate `self` if `choice == Choice(1)`; otherwise, leave it\n unchanged.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":13749,"byte_end":13758,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":150},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":15243,"byte_end":15251,"line_start":497,"line_end":497,"column_start":12,"column_end":20},"name":"CtOption","qualname":"::CtOption","value":"CtOption {  }","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"decl_id":null,"docs":" The `CtOption<T>` type represents an optional value similar to the\n [`Option<T>`](core::option::Option) type but is intended for\n use in constant time APIs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":15635,"byte_end":15638,"line_start":509,"line_end":509,"column_start":12,"column_end":15},"name":"new","qualname":"<CtOption<T>>::new","value":"fn (value: T, is_some: Choice) -> CtOption<T>","parent":null,"children":[],"decl_id":null,"docs":" This method is used to construct a new `CtOption<T>` and takes\n a value of type `T`, and a `Choice` that determines whether\n the optional value should be `Some` or not. If `is_some` is\n false, the value will still be stored but its value is never\n exposed.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":15614,"byte_end":15623,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":15849,"byte_end":15855,"line_start":516,"line_end":516,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<CtOption<T>>::unwrap","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" This returns the underlying value but panics if it\n is not `Some`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":15828,"byte_end":15837,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":16069,"byte_end":16078,"line_start":525,"line_end":525,"column_start":12,"column_end":21},"name":"unwrap_or","qualname":"<CtOption<T>>::unwrap_or","value":"fn (self, def: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" This returns the underlying value if it is `Some`\n or the provided value otherwise.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":16048,"byte_end":16057,"line_start":524,"line_end":524,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":16368,"byte_end":16382,"line_start":535,"line_end":535,"column_start":12,"column_end":26},"name":"unwrap_or_else","qualname":"<CtOption<T>>::unwrap_or_else","value":"fn <F> (self, f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" This returns the underlying value if it is `Some`\n or the value produced by the provided closure otherwise.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":16347,"byte_end":16356,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":16633,"byte_end":16640,"line_start":545,"line_end":545,"column_start":12,"column_end":19},"name":"is_some","qualname":"<CtOption<T>>::is_some","value":"fn (&self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Returns a true `Choice` if this value is `Some`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":16612,"byte_end":16621,"line_start":544,"line_end":544,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":16770,"byte_end":16777,"line_start":551,"line_end":551,"column_start":12,"column_end":19},"name":"is_none","qualname":"<CtOption<T>>::is_none","value":"fn (&self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Returns a true `Choice` if this value is `None`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":16749,"byte_end":16758,"line_start":550,"line_end":550,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":17253,"byte_end":17256,"line_start":564,"line_end":564,"column_start":12,"column_end":15},"name":"map","qualname":"<CtOption<T>>::map","value":"fn <U, F> (self, f: F) -> CtOption<U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `None` value if the option is `None`, otherwise\n returns a `CtOption` enclosing the value of the provided closure.\n The closure is given the enclosed value or, if the option is\n `None`, it is provided a dummy value computed using\n `Default::default()`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":17232,"byte_end":17241,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":17985,"byte_end":17993,"line_start":587,"line_end":587,"column_start":12,"column_end":20},"name":"and_then","qualname":"<CtOption<T>>::and_then","value":"fn <U, F> (self, f: F) -> CtOption<U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `None` value if the option is `None`, otherwise\n returns the result of the provided closure. The closure is\n given the enclosed value or, if the option is `None`, it\n is provided a dummy value computed using `Default::default()`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":17964,"byte_end":17973,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":18493,"byte_end":18500,"line_start":605,"line_end":605,"column_start":12,"column_end":19},"name":"or_else","qualname":"<CtOption<T>>::or_else","value":"fn <F> (self, f: F) -> CtOption<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` if it contains a value, and otherwise returns the result of\n calling `f`. The provided function `f` is always called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":18472,"byte_end":18481,"line_start":604,"line_end":604,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":1845,"byte_end":1851,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3091,"byte_end":3097,"line_start":84,"line_end":84,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3248,"byte_end":3254,"line_start":92,"line_end":92,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3371,"byte_end":3377,"line_start":99,"line_end":99,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3526,"byte_end":3532,"line_start":107,"line_end":107,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3649,"byte_end":3655,"line_start":114,"line_end":114,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3806,"byte_end":3812,"line_start":122,"line_end":122,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3927,"byte_end":3933,"line_start":129,"line_end":129,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":5140,"byte_end":5146,"line_start":164,"line_end":164,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":13151,"byte_end":13157,"line_start":441,"line_end":441,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":13851,"byte_end":13852,"line_start":464,"line_end":464,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":15303,"byte_end":15311,"line_start":502,"line_end":502,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":18802,"byte_end":18810,"line_start":617,"line_end":617,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":19108,"byte_end":19116,"line_start":626,"line_end":626,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":1845,"byte_end":1851,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3091,"byte_end":3097,"line_start":84,"line_end":84,"column_start":17,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3248,"byte_end":3254,"line_start":92,"line_end":92,"column_start":23,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":1680}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3371,"byte_end":3377,"line_start":99,"line_end":99,"column_start":16,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3526,"byte_end":3532,"line_start":107,"line_end":107,"column_start":22,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":1684}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3649,"byte_end":3655,"line_start":114,"line_end":114,"column_start":17,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":1663}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3806,"byte_end":3812,"line_start":122,"line_end":122,"column_start":23,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":1688}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":3927,"byte_end":3933,"line_start":129,"line_end":129,"column_start":14,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":1649}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":5140,"byte_end":5146,"line_start":164,"line_end":164,"column_start":19,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":2221}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":8981,"byte_end":8985,"line_start":284,"line_end":284,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":1542},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":13151,"byte_end":13157,"line_start":441,"line_end":441,"column_start":34,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":90},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":13851,"byte_end":13852,"line_start":464,"line_end":464,"column_start":36,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":64},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":15303,"byte_end":15311,"line_start":502,"line_end":502,"column_start":9,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":18802,"byte_end":18810,"line_start":617,"line_end":617,"column_start":62,"column_end":70},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":150},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/subtle-2.2.3/src/lib.rs","byte_start":19108,"byte_end":19116,"line_start":626,"line_end":626,"column_start":44,"column_end":52},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":150},"to":{"krate":0,"index":47}}]}