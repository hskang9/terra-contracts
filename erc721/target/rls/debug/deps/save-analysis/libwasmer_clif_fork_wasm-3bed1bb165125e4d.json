{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0","program":"/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","wasmer_clif_fork_wasm","/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=3bed1bb165125e4d","-C","extra-filename=-3bed1bb165125e4d","--out-dir","/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","-L","dependency=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps","--extern","cranelift_codegen=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libcranelift_codegen-8e436a999439e664.rmeta","--extern","cranelift_entity=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libcranelift_entity-fe1d0406170917ad.rmeta","--extern","log=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/liblog-83ab5daad5e3b450.rmeta","--extern","thiserror=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libthiserror-e23f44edd0163a9e.rmeta","--extern","wasmer_clif_fork_frontend=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libwasmer_clif_fork_frontend-8c7ac32ed46c7aab.rmeta","--extern","wasmparser=/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libwasmparser-bf1de23957a7cef3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hskang9/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hskang9/terra-contracts/erc721/target/rls/debug/deps/libwasmer_clif_fork_wasm-3bed1bb165125e4d.rmeta"},"prelude":{"crate_id":{"name":"wasmer_clif_fork_wasm","disambiguator":[5641743141736459185,2488120695085183713]},"crate_root":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src","external_crates":[{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":15,"id":{"name":"cranelift_codegen","disambiguator":[1840169337593454183,2714285077174093308]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":16,"id":{"name":"cranelift_bforest","disambiguator":[13856497635522155208,18351677305291548907]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","num":17,"id":{"name":"cranelift_entity","disambiguator":[15649407093681424624,11725493798286033142]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","num":18,"id":{"name":"log","disambiguator":[3334928426747378909,12614284579594638240]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":19,"id":{"name":"cfg_if","disambiguator":[8192225388863340420,3173580909043468535]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":20,"id":{"name":"cranelift_codegen_shared","disambiguator":[11003585404555025731,7233693928327429023]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":21,"id":{"name":"target_lexicon","disambiguator":[7506543512126835546,2105196375576306871]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","num":22,"id":{"name":"thiserror","disambiguator":[7346906650837406466,1053315444462595808]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":23,"id":{"name":"thiserror_impl","disambiguator":[17721261021118503845,8704871421299299668]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":24,"id":{"name":"gimli","disambiguator":[10223812154897667566,17080436645826354926]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":25,"id":{"name":"byteorder","disambiguator":[13772483050154113105,4416411086848908966]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":26,"id":{"name":"indexmap","disambiguator":[7264607058481689396,12845694084437745282]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":27,"id":{"name":"hashbrown","disambiguator":[12025763491025572525,15479303319156871661]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":28,"id":{"name":"serde","disambiguator":[6972129048178836725,6892762498666106127]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":29,"id":{"name":"serde_derive","disambiguator":[14746363068757113999,2138961080548715939]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":30,"id":{"name":"smallvec","disambiguator":[3347676757453290836,17416371363708809587]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":31,"id":{"name":"wasmer_clif_fork_frontend","disambiguator":[16542537222559624729,14100644542149230447]}},{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","num":32,"id":{"name":"wasmparser","disambiguator":[4858242811302968815,18214995134879718594]}}],"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":0,"byte_end":2563,"line_start":1,"line_end":76,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1756,"byte_end":1774,"line_start":60,"line_end":60,"column_start":33,"column_end":51},"alias_span":null,"name":"translate_operator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1806,"byte_end":1822,"line_start":62,"line_end":62,"column_start":5,"column_end":21},"alias_span":null,"name":"DummyEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1824,"byte_end":1839,"line_start":62,"line_end":62,"column_start":23,"column_end":38},"alias_span":null,"name":"FuncEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":647},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1841,"byte_end":1855,"line_start":62,"line_end":62,"column_start":40,"column_end":54},"alias_span":null,"name":"GlobalVariable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1857,"byte_end":1874,"line_start":62,"line_end":62,"column_start":56,"column_end":73},"alias_span":null,"name":"ModuleEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":680},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1876,"byte_end":1886,"line_start":62,"line_end":62,"column_start":75,"column_end":85},"alias_span":null,"name":"ReturnMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1892,"byte_end":1909,"line_start":63,"line_end":63,"column_start":5,"column_end":22},"alias_span":null,"name":"TargetEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1911,"byte_end":1920,"line_start":63,"line_end":63,"column_start":24,"column_end":33},"alias_span":null,"name":"WasmError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1922,"byte_end":1932,"line_start":63,"line_end":63,"column_start":35,"column_end":45},"alias_span":null,"name":"WasmResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1970,"byte_end":1984,"line_start":65,"line_end":65,"column_start":34,"column_end":48},"alias_span":null,"name":"declare_locals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1986,"byte_end":2000,"line_start":65,"line_end":65,"column_start":50,"column_end":64},"alias_span":null,"name":"FuncTranslator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2037,"byte_end":2053,"line_start":66,"line_end":66,"column_start":35,"column_end":51},"alias_span":null,"name":"translate_module","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2089,"byte_end":2109,"line_start":67,"line_end":67,"column_start":35,"column_end":55},"alias_span":null,"name":"FuncTranslationState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2147,"byte_end":2169,"line_start":68,"line_end":68,"column_start":37,"column_end":59},"alias_span":null,"name":"ModuleTranslationState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":610},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2211,"byte_end":2232,"line_start":70,"line_end":70,"column_start":5,"column_end":26},"alias_span":null,"name":"get_vmctx_value_label","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2234,"byte_end":2250,"line_start":70,"line_end":70,"column_start":28,"column_end":44},"alias_span":null,"name":"DefinedFuncIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":858},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2252,"byte_end":2270,"line_start":70,"line_end":70,"column_start":46,"column_end":64},"alias_span":null,"name":"DefinedGlobalIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2272,"byte_end":2290,"line_start":70,"line_end":70,"column_start":66,"column_end":84},"alias_span":null,"name":"DefinedMemoryIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2296,"byte_end":2313,"line_start":71,"line_end":71,"column_start":5,"column_end":22},"alias_span":null,"name":"DefinedTableIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2315,"byte_end":2324,"line_start":71,"line_end":71,"column_start":24,"column_end":33},"alias_span":null,"name":"FuncIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1082},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2326,"byte_end":2332,"line_start":71,"line_end":71,"column_start":35,"column_end":41},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2334,"byte_end":2345,"line_start":71,"line_end":71,"column_start":43,"column_end":54},"alias_span":null,"name":"GlobalIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1094},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2347,"byte_end":2357,"line_start":71,"line_end":71,"column_start":56,"column_end":66},"alias_span":null,"name":"GlobalInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1154},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2359,"byte_end":2365,"line_start":71,"line_end":71,"column_start":68,"column_end":74},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2367,"byte_end":2378,"line_start":71,"line_end":71,"column_start":76,"column_end":87},"alias_span":null,"name":"MemoryIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1018},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2384,"byte_end":2400,"line_start":72,"line_end":72,"column_start":5,"column_end":21},"alias_span":null,"name":"PassiveDataIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1050},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2402,"byte_end":2418,"line_start":72,"line_end":72,"column_start":23,"column_end":39},"alias_span":null,"name":"PassiveElemIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":986},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2420,"byte_end":2434,"line_start":72,"line_end":72,"column_start":41,"column_end":55},"alias_span":null,"name":"SignatureIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2436,"byte_end":2441,"line_start":72,"line_end":72,"column_start":57,"column_end":62},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1140},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2443,"byte_end":2459,"line_start":72,"line_end":72,"column_start":64,"column_end":80},"alias_span":null,"name":"TableElementType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":890},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2461,"byte_end":2471,"line_start":72,"line_end":72,"column_start":82,"column_end":92},"alias_span":null,"name":"TableIndex","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":0,"byte_end":2563,"line_start":1,"line_end":76,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":20},{"krate":0,"index":95},{"krate":0,"index":345},{"krate":0,"index":396},{"krate":0,"index":421},{"krate":0,"index":506},{"krate":0,"index":589},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":646}],"decl_id":null,"docs":" Performs translation from a wasm module in binary format to the in-memory form\n of Cranelift IR. More particularly, it translates the code of all the functions bodies and\n interacts with an environment implementing the\n [`ModuleEnvironment`](trait.ModuleEnvironment.html)\n trait to deal with tables, globals and linear memory.","sig":null,"attributes":[{"value":"deny(missing_docs, trivial_numeric_casts, unused_extern_crates)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":578,"byte_end":645,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"warn(unused_import_braces)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":646,"byte_end":676,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"deny(unstable_features)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":706,"byte_end":729,"line_start":14,"line_end":14,"column_start":30,"column_end":53}},{"value":"no_std","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":1212,"byte_end":1222,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/code_translator.rs","byte_start":5112,"byte_end":5130,"line_start":51,"line_end":51,"column_start":8,"column_end":26},"name":"translate_operator","qualname":"::code_translator::translate_operator","value":"fn <FE> (module_translation_state: &ModuleTranslationState, op: &Operator, builder: &mut FunctionBuilder, state: &mut FuncTranslationState, environ: &mut FE) -> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Translates wasm operators into Cranelift IR instructions. Returns `true` if it inserted\n a return.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95026,"byte_end":95036,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"Exportable","qualname":"::environ::dummy::Exportable","value":"Exportable { entity, export_names }","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":" A collection of names under which a given entity is exported.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":138},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95073,"byte_end":95079,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"entity","qualname":"::environ::dummy::Exportable::entity","value":"T","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" A wasm entity.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":139},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95143,"byte_end":95155,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"export_names","qualname":"::environ::dummy::Exportable::export_names","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Names under which the entity is exported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95208,"byte_end":95211,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Exportable<T>>::new","value":"fn (entity: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95511,"byte_end":95526,"line_start":54,"line_end":54,"column_start":12,"column_end":27},"name":"DummyModuleInfo","qualname":"::environ::dummy::DummyModuleInfo","value":"DummyModuleInfo { signatures, imported_funcs, imported_globals, imported_tables, imported_memories, functions, function_bodies, tables, memories, globals, start_func }","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"decl_id":null,"docs":" The main state belonging to a `DummyEnvironment`. This is split out from\n `DummyEnvironment` to allow it to be borrowed separately from the\n `FuncTranslator` field.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95700,"byte_end":95710,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"name":"signatures","qualname":"::environ::dummy::DummyModuleInfo::signatures","value":"cranelift_entity::primary::PrimaryMap<translation_utils::SignatureIndex, cranelift_codegen::ir::extfunc::Signature>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Signatures as provided by `declare_signature`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95855,"byte_end":95869,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"imported_funcs","qualname":"::environ::dummy::DummyModuleInfo::imported_funcs","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Module and field names of imported functions as provided by `declare_func_import`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":147},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95994,"byte_end":96010,"line_start":65,"line_end":65,"column_start":9,"column_end":25},"name":"imported_globals","qualname":"::environ::dummy::DummyModuleInfo::imported_globals","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Module and field names of imported globals as provided by `declare_global_import`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":148},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96133,"byte_end":96148,"line_start":68,"line_end":68,"column_start":9,"column_end":24},"name":"imported_tables","qualname":"::environ::dummy::DummyModuleInfo::imported_tables","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Module and field names of imported tables as provided by `declare_table_import`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":149},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96274,"byte_end":96291,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"name":"imported_memories","qualname":"::environ::dummy::DummyModuleInfo::imported_memories","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Module and field names of imported memories as provided by `declare_memory_import`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":150},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96364,"byte_end":96373,"line_start":74,"line_end":74,"column_start":9,"column_end":18},"name":"functions","qualname":"::environ::dummy::DummyModuleInfo::functions","value":"cranelift_entity::primary::PrimaryMap<translation_utils::FuncIndex, environ::dummy::Exportable<translation_utils::SignatureIndex>>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Functions, imported and local.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":151},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96460,"byte_end":96475,"line_start":77,"line_end":77,"column_start":9,"column_end":24},"name":"function_bodies","qualname":"::environ::dummy::DummyModuleInfo::function_bodies","value":"cranelift_entity::primary::PrimaryMap<translation_utils::DefinedFuncIndex, cranelift_codegen::ir::function::Function>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Function bodies.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":152},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96577,"byte_end":96583,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"name":"tables","qualname":"::environ::dummy::DummyModuleInfo::tables","value":"cranelift_entity::primary::PrimaryMap<translation_utils::TableIndex, environ::dummy::Exportable<translation_utils::Table>>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Tables as provided by `declare_table`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":153},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96687,"byte_end":96695,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"name":"memories","qualname":"::environ::dummy::DummyModuleInfo::memories","value":"cranelift_entity::primary::PrimaryMap<translation_utils::MemoryIndex, environ::dummy::Exportable<translation_utils::Memory>>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Memories as provided by `declare_memory`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":154},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96800,"byte_end":96807,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"globals","qualname":"::environ::dummy::DummyModuleInfo::globals","value":"cranelift_entity::primary::PrimaryMap<translation_utils::GlobalIndex, environ::dummy::Exportable<translation_utils::Global>>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Globals as provided by `declare_global`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":155},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96891,"byte_end":96901,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"name":"start_func","qualname":"::environ::dummy::DummyModuleInfo::start_func","value":"core::option::Option<translation_utils::FuncIndex>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" The start function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":97009,"byte_end":97012,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyModuleInfo>::new","value":"fn (config: TargetFrontendConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DummyModuleInfo` instance.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":158},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":97814,"byte_end":97830,"line_start":115,"line_end":115,"column_start":12,"column_end":28},"name":"DummyEnvironment","qualname":"::environ::dummy::DummyEnvironment","value":"DummyEnvironment { info, func_bytecode_sizes }","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" This `ModuleEnvironment` implementation is a \"naïve\" one, doing essentially nothing and\n emitting placeholders when forced to. Don't try to execute code translated for this\n environment, essentially here for translation debug purposes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":159},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":97869,"byte_end":97873,"line_start":117,"line_end":117,"column_start":9,"column_end":13},"name":"info","qualname":"::environ::dummy::DummyEnvironment::info","value":"environ::dummy::DummyModuleInfo","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Module information.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":98015,"byte_end":98034,"line_start":123,"line_end":123,"column_start":9,"column_end":28},"name":"func_bytecode_sizes","qualname":"::environ::dummy::DummyEnvironment::func_bytecode_sizes","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Vector of wasm bytecode size for each function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":98366,"byte_end":98369,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyEnvironment>::new","value":"fn (config: TargetFrontendConfig, return_mode: ReturnMode, debug_info: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DummyEnvironment` instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":98835,"byte_end":98843,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"func_env","qualname":"<DummyEnvironment>::func_env","value":"fn (&self) -> DummyFuncEnvironment","parent":null,"children":[],"decl_id":null,"docs":" Return a `DummyFuncEnvironment` for translating functions within this\n `DummyEnvironment`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":99164,"byte_end":99184,"line_start":159,"line_end":159,"column_start":12,"column_end":32},"name":"get_num_func_imports","qualname":"<DummyEnvironment>::get_num_func_imports","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of imported functions within this `DummyEnvironment`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":99373,"byte_end":99386,"line_start":165,"line_end":165,"column_start":12,"column_end":25},"name":"get_func_name","qualname":"<DummyEnvironment>::get_func_name","value":"fn (&self, func_index: FuncIndex) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the function, if a name for the function with\n the corresponding index exists.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":171},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":99595,"byte_end":99615,"line_start":171,"line_end":171,"column_start":12,"column_end":32},"name":"DummyFuncEnvironment","qualname":"::environ::dummy::DummyFuncEnvironment","value":"DummyFuncEnvironment { mod_info }","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" The `FuncEnvironment` implementation for use by the `DummyEnvironment`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":173},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":99646,"byte_end":99654,"line_start":172,"line_end":172,"column_start":9,"column_end":17},"name":"mod_info","qualname":"::environ::dummy::DummyFuncEnvironment::mod_info","value":"&'dummy_environment environ::dummy::DummyModuleInfo","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":99805,"byte_end":99808,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyFuncEnvironment>::new","value":"fn (mod_info: &'dummy_environment DummyModuleInfo, return_mode: ReturnMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":648},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":117036,"byte_end":117041,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Const","qualname":"::environ::spec::GlobalVariable::Const","value":"GlobalVariable::Const(ir::Value)","parent":{"krate":0,"index":647},"children":[],"decl_id":null,"docs":" This is a constant global with a value known at compile time.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":651},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":117147,"byte_end":117153,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Memory","qualname":"::environ::spec::GlobalVariable::Memory","value":"GlobalVariable::Memory { gv, offset, ty }","parent":{"krate":0,"index":647},"children":[],"decl_id":null,"docs":" This is a variable in memory that should be referenced through a `GlobalValue`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":655},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":117465,"byte_end":117471,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Custom","qualname":"::environ::spec::GlobalVariable::Custom","value":"GlobalVariable::Custom","parent":{"krate":0,"index":647},"children":[],"decl_id":null,"docs":" This is a global variable that needs to be handled by the environment.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":647},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":116945,"byte_end":116959,"line_start":27,"line_end":27,"column_start":10,"column_end":24},"name":"GlobalVariable","qualname":"::environ::spec::GlobalVariable","value":"GlobalVariable::{Const, Memory, Custom}","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":655}],"decl_id":null,"docs":" The value of a WebAssembly global variable.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":661},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":117992,"byte_end":118010,"line_start":56,"line_end":56,"column_start":5,"column_end":23},"name":"InvalidWebAssembly","qualname":"::environ::spec::WasmError::InvalidWebAssembly","value":"WasmError::InvalidWebAssembly { message, offset }","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":" The input WebAssembly code is invalid.","sig":null,"attributes":[{"value":"error(\"Invalid input WebAssembly code at offset {offset}: {message}\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":117915,"byte_end":117987,"line_start":55,"line_end":55,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":664},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":118429,"byte_end":118440,"line_start":67,"line_end":67,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::environ::spec::WasmError::Unsupported","value":"WasmError::Unsupported(std::string::String)","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":" A feature used by the WebAssembly code is not supported by the embedding environment.","sig":null,"attributes":[{"value":"error(\"Unsupported feature: {0}\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":118388,"byte_end":118424,"line_start":66,"line_end":66,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":667},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":118842,"byte_end":118859,"line_start":76,"line_end":76,"column_start":5,"column_end":22},"name":"ImplLimitExceeded","qualname":"::environ::spec::WasmError::ImplLimitExceeded","value":"WasmError::ImplLimitExceeded","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":" An implementation limit was exceeded.","sig":null,"attributes":[{"value":"error(\"Implementation limit exceeded\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":118796,"byte_end":118837,"line_start":75,"line_end":75,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":669},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":118930,"byte_end":118934,"line_start":80,"line_end":80,"column_start":5,"column_end":9},"name":"User","qualname":"::environ::spec::WasmError::User","value":"WasmError::User(std::string::String)","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":" Any user-defined error.\n","sig":null,"attributes":[{"value":"error(\"User error: {0}\")","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":118898,"byte_end":118925,"line_start":79,"line_end":79,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":660},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":117674,"byte_end":117683,"line_start":50,"line_end":50,"column_start":10,"column_end":19},"name":"WasmError","qualname":"::environ::spec::WasmError","value":"WasmError::{InvalidWebAssembly, Unsupported, ImplLimitExceeded, User}","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":669}],"decl_id":null,"docs":" A WebAssembly translation error.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":263},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":119595,"byte_end":119605,"line_start":101,"line_end":101,"column_start":10,"column_end":20},"name":"WasmResult","qualname":"::environ::spec::WasmResult","value":"Result<T, WasmError>","parent":null,"children":[],"decl_id":null,"docs":" A convenient alias for a `Result` that uses `WasmError` as the error type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":681},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":119789,"byte_end":119802,"line_start":107,"line_end":107,"column_start":5,"column_end":18},"name":"NormalReturns","qualname":"::environ::spec::ReturnMode::NormalReturns","value":"ReturnMode::NormalReturns","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" Use normal return instructions as needed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":683},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":119876,"byte_end":119893,"line_start":109,"line_end":109,"column_start":5,"column_end":22},"name":"FallthroughReturn","qualname":"::environ::spec::ReturnMode::FallthroughReturn","value":"ReturnMode::FallthroughReturn","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" Use a single fallthrough return at the end of the function.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":680},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":119722,"byte_end":119732,"line_start":105,"line_end":105,"column_start":10,"column_end":20},"name":"ReturnMode","qualname":"::environ::spec::ReturnMode","value":"ReturnMode::{NormalReturns, FallthroughReturn}","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":683}],"decl_id":null,"docs":" How to return from functions.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":119968,"byte_end":119985,"line_start":113,"line_end":113,"column_start":11,"column_end":28},"name":"TargetEnvironment","qualname":"::environ::spec::TargetEnvironment","value":"TargetEnvironment","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"decl_id":null,"docs":" Environment affecting the translation of a WebAssembly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":120076,"byte_end":120089,"line_start":115,"line_end":115,"column_start":8,"column_end":21},"name":"target_config","qualname":"::environ::spec::TargetEnvironment::target_config","value":"fn (&self) -> TargetFrontendConfig","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Get the information needed to produce Cranelift IR for the given target.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":120293,"byte_end":120305,"line_start":120,"line_end":120,"column_start":8,"column_end":20},"name":"pointer_type","qualname":"::environ::spec::TargetEnvironment::pointer_type","value":"fn (&self) -> ir::Type","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Get the Cranelift integer type to use for native pointers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":120472,"byte_end":120485,"line_start":125,"line_end":125,"column_start":8,"column_end":21},"name":"pointer_bytes","qualname":"::environ::spec::TargetEnvironment::pointer_bytes","value":"fn (&self) -> u8","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Get the size of a native pointer, in bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":120727,"byte_end":120741,"line_start":132,"line_end":132,"column_start":8,"column_end":22},"name":"reference_type","qualname":"::environ::spec::TargetEnvironment::reference_type","value":"fn (&self) -> ir::Type","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Get the Cranelift reference type to use for native references.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":270},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":121274,"byte_end":121289,"line_start":146,"line_end":146,"column_start":11,"column_end":26},"name":"FuncEnvironment","qualname":"::environ::spec::FuncEnvironment","value":"FuncEnvironment: TargetEnvironment","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"decl_id":null,"docs":" Environment affecting the translation of a single WebAssembly function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":121473,"byte_end":121490,"line_start":149,"line_end":149,"column_start":8,"column_end":25},"name":"is_wasm_parameter","qualname":"::environ::spec::FuncEnvironment::is_wasm_parameter","value":"fn (&self, signature: &ir::Signature, index: usize) -> bool","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Is the given parameter of the given function a wasm-level parameter, as opposed to a hidden\n parameter added for use by the implementation?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":121786,"byte_end":121800,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"is_wasm_return","qualname":"::environ::spec::FuncEnvironment::is_wasm_return","value":"fn (&self, signature: &ir::Signature, index: usize) -> bool","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Is the given return of the given function a wasm-level parameter, as\n opposed to a hidden parameter added for use by the implementation?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":122174,"byte_end":122185,"line_start":162,"line_end":162,"column_start":8,"column_end":19},"name":"return_mode","qualname":"::environ::spec::FuncEnvironment::return_mode","value":"fn (&self) -> ReturnMode","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Should the code be structured to use a single `fallthrough_return` instruction at the end\n of the function body, rather than `return` instructions as needed? This is used by VMs\n to append custom epilogues.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":122616,"byte_end":122627,"line_start":173,"line_end":173,"column_start":8,"column_end":19},"name":"make_global","qualname":"::environ::spec::FuncEnvironment::make_global","value":"fn (&mut self, func: &mut ir::Function, index: GlobalIndex) -> WasmResult<GlobalVariable>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Set up the necessary preamble definitions in `func` to access the global variable\n identified by `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":122957,"byte_end":122966,"line_start":183,"line_end":183,"column_start":8,"column_end":17},"name":"make_heap","qualname":"::environ::spec::FuncEnvironment::make_heap","value":"fn (&mut self, func: &mut ir::Function, index: MemoryIndex) -> WasmResult<ir::Heap>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Set up the necessary preamble definitions in `func` to access the linear memory identified\n by `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":123249,"byte_end":123259,"line_start":189,"line_end":189,"column_start":8,"column_end":18},"name":"make_table","qualname":"::environ::spec::FuncEnvironment::make_table","value":"fn (&mut self, func: &mut ir::Function, index: TableIndex) -> WasmResult<ir::Table>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Set up the necessary preamble definitions in `func` to access the table identified\n by `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":123854,"byte_end":123871,"line_start":200,"line_end":200,"column_start":8,"column_end":25},"name":"make_indirect_sig","qualname":"::environ::spec::FuncEnvironment::make_indirect_sig","value":"fn (&mut self, func: &mut ir::Function, index: SignatureIndex) -> WasmResult<ir::SigRef>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Set up a signature definition in the preamble of `func` that can be used for an indirect\n call with signature `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":124623,"byte_end":124639,"line_start":217,"line_end":217,"column_start":8,"column_end":24},"name":"make_direct_func","qualname":"::environ::spec::FuncEnvironment::make_direct_func","value":"fn (&mut self, func: &mut ir::Function, index: FuncIndex) -> WasmResult<ir::FuncRef>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Set up an external function definition in the preamble of `func` that can be used to\n directly call the function `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":125305,"byte_end":125328,"line_start":233,"line_end":233,"column_start":8,"column_end":31},"name":"translate_call_indirect","qualname":"::environ::spec::FuncEnvironment::translate_call_indirect","value":"fn (&mut self, pos: FuncCursor, table_index: TableIndex, table: ir::Table, sig_index: SignatureIndex, sig_ref: ir::SigRef, callee: ir::Value, call_args: &[ir::Value]) -> WasmResult<ir::Inst>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `call_indirect` WebAssembly instruction at `pos`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":125941,"byte_end":125955,"line_start":251,"line_end":251,"column_start":8,"column_end":22},"name":"translate_call","qualname":"::environ::spec::FuncEnvironment::translate_call","value":"fn (&mut self, mut pos: FuncCursor, _callee_index: FuncIndex, callee: ir::FuncRef, call_args: &[ir::Value]) -> WasmResult<ir::Inst>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `call` WebAssembly instruction at `pos`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":126546,"byte_end":126567,"line_start":269,"line_end":269,"column_start":8,"column_end":29},"name":"translate_memory_grow","qualname":"::environ::spec::FuncEnvironment::translate_memory_grow","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap, val: ir::Value) -> WasmResult<ir::Value>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `memory.grow` WebAssembly instruction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":127007,"byte_end":127028,"line_start":283,"line_end":283,"column_start":8,"column_end":29},"name":"translate_memory_size","qualname":"::environ::spec::FuncEnvironment::translate_memory_size","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap) -> WasmResult<ir::Value>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translates a `memory.size` WebAssembly instruction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":127386,"byte_end":127407,"line_start":294,"line_end":294,"column_start":8,"column_end":29},"name":"translate_memory_copy","qualname":"::environ::spec::FuncEnvironment::translate_memory_copy","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap, dst: ir::Value, src: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `memory.copy` WebAssembly instruction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":127830,"byte_end":127851,"line_start":308,"line_end":308,"column_start":8,"column_end":29},"name":"translate_memory_fill","qualname":"::environ::spec::FuncEnvironment::translate_memory_fill","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap, dst: ir::Value, val: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `memory.fill` WebAssembly instruction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":128377,"byte_end":128398,"line_start":324,"line_end":324,"column_start":8,"column_end":29},"name":"translate_memory_init","qualname":"::environ::spec::FuncEnvironment::translate_memory_init","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap, seg_index: u32, dst: ir::Value, src: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `memory.init` WebAssembly instruction.","sig":null,"attributes":[{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":128333,"byte_end":128369,"line_start":323,"line_end":323,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":128682,"byte_end":128701,"line_start":336,"line_end":336,"column_start":8,"column_end":27},"name":"translate_data_drop","qualname":"::environ::spec::FuncEnvironment::translate_data_drop","value":"fn (&mut self, pos: FuncCursor, seg_index: u32) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `data.drop` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":128831,"byte_end":128851,"line_start":339,"line_end":339,"column_start":8,"column_end":28},"name":"translate_table_size","qualname":"::environ::spec::FuncEnvironment::translate_table_size","value":"fn (&mut self, pos: FuncCursor, index: TableIndex, table: ir::Table) -> WasmResult<ir::Value>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `table.size` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":129048,"byte_end":129068,"line_start":347,"line_end":347,"column_start":8,"column_end":28},"name":"translate_table_grow","qualname":"::environ::spec::FuncEnvironment::translate_table_grow","value":"fn (&mut self, pos: FuncCursor, table_index: u32, delta: ir::Value, init_value: ir::Value) -> WasmResult<ir::Value>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `table.grow` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":129294,"byte_end":129313,"line_start":356,"line_end":356,"column_start":8,"column_end":27},"name":"translate_table_get","qualname":"::environ::spec::FuncEnvironment::translate_table_get","value":"fn (&mut self, pos: FuncCursor, table_index: u32, index: ir::Value) -> WasmResult<ir::Value>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `table.get` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":129508,"byte_end":129527,"line_start":364,"line_end":364,"column_start":8,"column_end":27},"name":"translate_table_set","qualname":"::environ::spec::FuncEnvironment::translate_table_set","value":"fn (&mut self, pos: FuncCursor, table_index: u32, value: ir::Value, index: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `table.set` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":129783,"byte_end":129803,"line_start":374,"line_end":374,"column_start":8,"column_end":28},"name":"translate_table_copy","qualname":"::environ::spec::FuncEnvironment::translate_table_copy","value":"fn (&mut self, pos: FuncCursor, dst_table_index: TableIndex, dst_table: ir::Table, src_table_index: TableIndex, src_table: ir::Table, dst: ir::Value, src: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `table.copy` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":129739,"byte_end":129775,"line_start":373,"line_end":373,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":130146,"byte_end":130166,"line_start":387,"line_end":387,"column_start":8,"column_end":28},"name":"translate_table_fill","qualname":"::environ::spec::FuncEnvironment::translate_table_fill","value":"fn (&mut self, pos: FuncCursor, table_index: u32, dst: ir::Value, val: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `table.fill` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":130442,"byte_end":130462,"line_start":398,"line_end":398,"column_start":8,"column_end":28},"name":"translate_table_init","qualname":"::environ::spec::FuncEnvironment::translate_table_init","value":"fn (&mut self, pos: FuncCursor, seg_index: u32, table_index: TableIndex, table: ir::Table, dst: ir::Value, src: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `table.init` WebAssembly instruction.\n","sig":null,"attributes":[{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":130398,"byte_end":130434,"line_start":397,"line_end":397,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":130753,"byte_end":130772,"line_start":410,"line_end":410,"column_start":8,"column_end":27},"name":"translate_elem_drop","qualname":"::environ::spec::FuncEnvironment::translate_elem_drop","value":"fn (&mut self, pos: FuncCursor, seg_index: u32) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `elem.drop` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":130900,"byte_end":130918,"line_start":413,"line_end":413,"column_start":8,"column_end":26},"name":"translate_ref_func","qualname":"::environ::spec::FuncEnvironment::translate_ref_func","value":"fn (&mut self, pos: FuncCursor, func_index: u32) -> WasmResult<ir::Value>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `ref.func` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":131101,"byte_end":131128,"line_start":417,"line_end":417,"column_start":8,"column_end":35},"name":"translate_custom_global_get","qualname":"::environ::spec::FuncEnvironment::translate_custom_global_get","value":"fn (&mut self, pos: FuncCursor, global_index: GlobalIndex) -> WasmResult<ir::Value>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `global.get` WebAssembly instruction at `pos` for a global\n that is custom.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":131352,"byte_end":131379,"line_start":425,"line_end":425,"column_start":8,"column_end":35},"name":"translate_custom_global_set","qualname":"::environ::spec::FuncEnvironment::translate_custom_global_set","value":"fn (&mut self, pos: FuncCursor, global_index: GlobalIndex, val: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Translate a `global.set` WebAssembly instruction at `pos` for a global\n that is custom.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":131692,"byte_end":131713,"line_start":436,"line_end":436,"column_start":8,"column_end":29},"name":"translate_loop_header","qualname":"::environ::spec::FuncEnvironment::translate_loop_header","value":"fn (&mut self, _pos: FuncCursor) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Emit code at the beginning of every wasm loop.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":132009,"byte_end":132034,"line_start":443,"line_end":443,"column_start":8,"column_end":33},"name":"before_translate_operator","qualname":"::environ::spec::FuncEnvironment::before_translate_operator","value":"fn (&mut self, _op: &Operator, _builder: &mut FunctionBuilder, _state: &FuncTranslationState) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Optional callback for the `FunctionEnvironment` performing this translation to maintain\n internal state or prepare custom state for the operator to translate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":132394,"byte_end":132418,"line_start":454,"line_end":454,"column_start":8,"column_end":32},"name":"after_translate_operator","qualname":"::environ::spec::FuncEnvironment::after_translate_operator","value":"fn (&mut self, _op: &Operator, _builder: &mut FunctionBuilder, _state: &FuncTranslationState) -> WasmResult<()>","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Optional callback for the `FunctionEnvironment` performing this translation to maintain\n internal state or finalize custom state for the operator that was translated\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":301},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":132852,"byte_end":132869,"line_start":467,"line_end":467,"column_start":11,"column_end":28},"name":"ModuleEnvironment","qualname":"::environ::spec::ModuleEnvironment","value":"ModuleEnvironment<'data>: TargetEnvironment","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":" An object satisfying the `ModuleEnvironment` trait can be passed as argument to the\n [`translate_module`](fn.translate_module.html) function. These methods should not be called\n by the user, they are only for `cranelift-wasm` internal use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":133062,"byte_end":133080,"line_start":470,"line_end":470,"column_start":8,"column_end":26},"name":"reserve_signatures","qualname":"::environ::spec::ModuleEnvironment::reserve_signatures","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of signatures up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":133210,"byte_end":133227,"line_start":475,"line_end":475,"column_start":8,"column_end":25},"name":"declare_signature","qualname":"::environ::spec::ModuleEnvironment::declare_signature","value":"fn (&mut self, sig: ir::Signature) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a function signature to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":133440,"byte_end":133455,"line_start":479,"line_end":479,"column_start":8,"column_end":23},"name":"reserve_imports","qualname":"::environ::spec::ModuleEnvironment::reserve_imports","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of imports up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":133582,"byte_end":133601,"line_start":484,"line_end":484,"column_start":8,"column_end":27},"name":"declare_func_import","qualname":"::environ::spec::ModuleEnvironment::declare_func_import","value":"fn (&mut self, sig_index: SignatureIndex, module: &'data str, field: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a function import to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":133797,"byte_end":133817,"line_start":492,"line_end":492,"column_start":8,"column_end":28},"name":"declare_table_import","qualname":"::environ::spec::ModuleEnvironment::declare_table_import","value":"fn (&mut self, table: Table, module: &'data str, field: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a table import to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":134001,"byte_end":134022,"line_start":500,"line_end":500,"column_start":8,"column_end":29},"name":"declare_memory_import","qualname":"::environ::spec::ModuleEnvironment::declare_memory_import","value":"fn (&mut self, memory: Memory, module: &'data str, field: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a memory import to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":134208,"byte_end":134229,"line_start":508,"line_end":508,"column_start":8,"column_end":29},"name":"declare_global_import","qualname":"::environ::spec::ModuleEnvironment::declare_global_import","value":"fn (&mut self, global: Global, module: &'data str, field: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a global import to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":134435,"byte_end":134449,"line_start":516,"line_end":516,"column_start":8,"column_end":22},"name":"finish_imports","qualname":"::environ::spec::ModuleEnvironment::finish_imports","value":"fn (&mut self) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Notifies the implementation that all imports have been declared.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":134674,"byte_end":134692,"line_start":522,"line_end":522,"column_start":8,"column_end":26},"name":"reserve_func_types","qualname":"::environ::spec::ModuleEnvironment::reserve_func_types","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of defined functions up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":134837,"byte_end":134854,"line_start":527,"line_end":527,"column_start":8,"column_end":25},"name":"declare_func_type","qualname":"::environ::spec::ModuleEnvironment::declare_func_type","value":"fn (&mut self, sig_index: SignatureIndex) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares the type (signature) of a local function in the module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":135081,"byte_end":135095,"line_start":531,"line_end":531,"column_start":8,"column_end":22},"name":"reserve_tables","qualname":"::environ::spec::ModuleEnvironment::reserve_tables","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of defined tables up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":135212,"byte_end":135225,"line_start":536,"line_end":536,"column_start":8,"column_end":21},"name":"declare_table","qualname":"::environ::spec::ModuleEnvironment::declare_table","value":"fn (&mut self, table: Table) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a table to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":135441,"byte_end":135457,"line_start":540,"line_end":540,"column_start":8,"column_end":24},"name":"reserve_memories","qualname":"::environ::spec::ModuleEnvironment::reserve_memories","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of defined memories up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":135574,"byte_end":135588,"line_start":545,"line_end":545,"column_start":8,"column_end":22},"name":"declare_memory","qualname":"::environ::spec::ModuleEnvironment::declare_memory","value":"fn (&mut self, memory: Memory) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a memory to the environment\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":135805,"byte_end":135820,"line_start":549,"line_end":549,"column_start":8,"column_end":23},"name":"reserve_globals","qualname":"::environ::spec::ModuleEnvironment::reserve_globals","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of defined globals up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":135938,"byte_end":135952,"line_start":554,"line_end":554,"column_start":8,"column_end":22},"name":"declare_global","qualname":"::environ::spec::ModuleEnvironment::declare_global","value":"fn (&mut self, global: Global) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a global to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":136161,"byte_end":136176,"line_start":558,"line_end":558,"column_start":8,"column_end":23},"name":"reserve_exports","qualname":"::environ::spec::ModuleEnvironment::reserve_exports","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of exports up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":136303,"byte_end":136322,"line_start":563,"line_end":563,"column_start":8,"column_end":27},"name":"declare_func_export","qualname":"::environ::spec::ModuleEnvironment::declare_func_export","value":"fn (&mut self, func_index: FuncIndex, name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a function export to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":136454,"byte_end":136474,"line_start":566,"line_end":566,"column_start":8,"column_end":28},"name":"declare_table_export","qualname":"::environ::spec::ModuleEnvironment::declare_table_export","value":"fn (&mut self, table_index: TableIndex, name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a table export to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":136617,"byte_end":136638,"line_start":570,"line_end":570,"column_start":8,"column_end":29},"name":"declare_memory_export","qualname":"::environ::spec::ModuleEnvironment::declare_memory_export","value":"fn (&mut self, memory_index: MemoryIndex, name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a memory export to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":136806,"byte_end":136827,"line_start":577,"line_end":577,"column_start":8,"column_end":29},"name":"declare_global_export","qualname":"::environ::spec::ModuleEnvironment::declare_global_export","value":"fn (&mut self, global_index: GlobalIndex, name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares a global export to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":137015,"byte_end":137029,"line_start":584,"line_end":584,"column_start":8,"column_end":22},"name":"finish_exports","qualname":"::environ::spec::ModuleEnvironment::finish_exports","value":"fn (&mut self) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Notifies the implementation that all exports have been declared.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":137136,"byte_end":137154,"line_start":589,"line_end":589,"column_start":8,"column_end":26},"name":"declare_start_func","qualname":"::environ::spec::ModuleEnvironment::declare_start_func","value":"fn (&mut self, index: FuncIndex) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares the optional start function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":137378,"byte_end":137400,"line_start":593,"line_end":593,"column_start":8,"column_end":30},"name":"reserve_table_elements","qualname":"::environ::spec::ModuleEnvironment::reserve_table_elements","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of element initializers up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":137547,"byte_end":137569,"line_start":598,"line_end":598,"column_start":8,"column_end":30},"name":"declare_table_elements","qualname":"::environ::spec::ModuleEnvironment::declare_table_elements","value":"fn (&mut self, table_index: TableIndex, base: Option<GlobalIndex>, offset: usize, elements: Box<[FuncIndex]>) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Fills a declared table with references to functions in the module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":137793,"byte_end":137816,"line_start":607,"line_end":607,"column_start":8,"column_end":31},"name":"declare_passive_element","qualname":"::environ::spec::ModuleEnvironment::declare_passive_element","value":"fn (&mut self, index: PassiveElemIndex, elements: Box<[FuncIndex]>) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declare a passive element segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":138124,"byte_end":138144,"line_start":617,"line_end":617,"column_start":8,"column_end":28},"name":"reserve_passive_data","qualname":"::environ::spec::ModuleEnvironment::reserve_passive_data","value":"fn (&mut self, count: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of passive data segments up front.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":138280,"byte_end":138300,"line_start":623,"line_end":623,"column_start":8,"column_end":28},"name":"declare_passive_data","qualname":"::environ::spec::ModuleEnvironment::declare_passive_data","value":"fn (&mut self, data_index: PassiveDataIndex, data: &'data [u8]) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declare a passive data segment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":138621,"byte_end":138641,"line_start":633,"line_end":633,"column_start":8,"column_end":28},"name":"define_function_body","qualname":"::environ::spec::ModuleEnvironment::define_function_body","value":"fn (&mut self, module_translation_state: &ModuleTranslationState, body_bytes: &'data [u8], body_offset: usize) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the contents of a function body.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":138979,"byte_end":139004,"line_start":642,"line_end":642,"column_start":8,"column_end":33},"name":"reserve_data_initializers","qualname":"::environ::spec::ModuleEnvironment::reserve_data_initializers","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Provides the number of data initializers up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":139144,"byte_end":139171,"line_start":647,"line_end":647,"column_start":8,"column_end":35},"name":"declare_data_initialization","qualname":"::environ::spec::ModuleEnvironment::declare_data_initialization","value":"fn (&mut self, memory_index: MemoryIndex, base: Option<GlobalIndex>, offset: usize, data: &'data [u8]) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Fills a declared memory with bytes at module instantiation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":139568,"byte_end":139585,"line_start":659,"line_end":659,"column_start":8,"column_end":25},"name":"declare_func_name","qualname":"::environ::spec::ModuleEnvironment::declare_func_name","value":"fn (&mut self, _func_index: FuncIndex, _name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Declares the name of a function to the environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":139761,"byte_end":139775,"line_start":664,"line_end":664,"column_start":8,"column_end":22},"name":"custom_section","qualname":"::environ::spec::ModuleEnvironment::custom_section","value":"fn (&mut self, _name: &'data str, _data: &'data [u8]) -> WasmResult<()>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Indicates that a custom section has been found in the wasm file\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":375},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","byte_start":141080,"byte_end":141094,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"FuncTranslator","qualname":"::func_translator::FuncTranslator","value":"FuncTranslator { func_ctx, state }","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" WebAssembly to Cranelift IR function translator.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":376},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","byte_start":141122,"byte_end":141130,"line_start":26,"line_end":26,"column_start":9,"column_end":17},"name":"func_ctx","qualname":"::func_translator::FuncTranslator::func_ctx","value":"wasmer_clif_fork_frontend::frontend::FunctionBuilderContext","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" Func ctx\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":377},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","byte_start":141190,"byte_end":141195,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"state","qualname":"::func_translator::FuncTranslator::state","value":"state::func_state::FuncTranslationState","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" Translation state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","byte_start":141288,"byte_end":141291,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FuncTranslator>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new translator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","byte_start":142388,"byte_end":142397,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"translate","qualname":"<FuncTranslator>::translate","value":"fn <FE> (&mut self, module_translation_state: &ModuleTranslationState, code: &[u8], code_offset: usize, func: &mut ir::Function, environ: &mut FE) -> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Translate a binary WebAssembly function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","byte_start":142915,"byte_end":142936,"line_start":75,"line_end":75,"column_start":12,"column_end":33},"name":"translate_from_reader","qualname":"<FuncTranslator>::translate_from_reader","value":"fn <FE> (&mut self, module_translation_state: &ModuleTranslationState, mut reader: BinaryReader, func: &mut ir::Function, environ: &mut FE) -> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Translate a binary WebAssembly function from a `BinaryReader`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":388},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","byte_start":147179,"byte_end":147193,"line_start":184,"line_end":184,"column_start":8,"column_end":22},"name":"declare_locals","qualname":"::func_translator::declare_locals","value":"fn <FE> (builder: &mut FunctionBuilder, count: u32, wasm_type: wasmparser::Type, next_local: &mut usize, environ: &mut FE) -> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Declare `count` local variables of the same type, starting from `next_local`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/module_translator.rs","byte_start":156753,"byte_end":156769,"line_start":15,"line_end":15,"column_start":8,"column_end":24},"name":"translate_module","qualname":"::module_translator::translate_module","value":"fn <'data> (data: &'data [u8], environ: &mut dyn ModuleEnvironment<'data>) -> WasmResult<ModuleTranslationState>","parent":null,"children":[],"decl_id":null,"docs":" Translate a sequence of bytes forming a valid Wasm binary into a list of valid Cranelift IR\n [`Function`](cranelift_codegen::ir::Function).\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":695},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":177199,"byte_end":177205,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"NoElse","qualname":"::state::func_state::ElseData::NoElse","value":"ElseData::NoElse { branch_inst }","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" The `if` does not already have an `else` block.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":697},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":177817,"byte_end":177825,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"WithElse","qualname":"::state::func_state::ElseData::WithElse","value":"ElseData::WithElse { else_block }","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" We have already allocated an `else` block.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":694},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":177017,"byte_end":177025,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"ElseData","qualname":"::state::func_state::ElseData","value":"ElseData::{NoElse, WithElse}","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":697}],"decl_id":null,"docs":" Information about the presence of an associated `else` for an `if`, or the\n lack thereof.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":702},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":178593,"byte_end":178595,"line_start":54,"line_end":54,"column_start":5,"column_end":7},"name":"If","qualname":"::state::func_state::ControlStackFrame::If","value":"ControlStackFrame::If { destination, else_data, num_param_values, num_return_values, original_stack_size, exit_is_branched_to, blocktype, head_is_reachable, consequent_ends_reachable }","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":712},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":179490,"byte_end":179495,"line_start":74,"line_end":74,"column_start":5,"column_end":10},"name":"Block","qualname":"::state::func_state::ControlStackFrame::Block","value":"ControlStackFrame::Block { destination, num_param_values, num_return_values, original_stack_size, exit_is_branched_to }","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":718},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":179675,"byte_end":179679,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"Loop","qualname":"::state::func_state::ControlStackFrame::Loop","value":"ControlStackFrame::Loop { destination, header, num_param_values, num_return_values, original_stack_size }","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":701},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":178569,"byte_end":178586,"line_start":53,"line_end":53,"column_start":10,"column_end":27},"name":"ControlStackFrame","qualname":"::state::func_state::ControlStackFrame","value":"ControlStackFrame::{If, Block, Loop}","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":712},{"krate":0,"index":718}],"decl_id":null,"docs":" A control stack frame can be an `if`, a `block` or a `loop`, each one having the following\n fields:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":179932,"byte_end":179949,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"num_return_values","qualname":"<ControlStackFrame>::num_return_values","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":180273,"byte_end":180289,"line_start":105,"line_end":105,"column_start":12,"column_end":28},"name":"num_param_values","qualname":"<ControlStackFrame>::num_param_values","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":180609,"byte_end":180623,"line_start":118,"line_end":118,"column_start":12,"column_end":26},"name":"following_code","qualname":"<ControlStackFrame>::following_code","value":"fn (&self) -> Block","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":180839,"byte_end":180853,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"br_destination","qualname":"<ControlStackFrame>::br_destination","value":"fn (&self) -> Block","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":181061,"byte_end":181080,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"original_stack_size","qualname":"<ControlStackFrame>::original_stack_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":181460,"byte_end":181467,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"is_loop","qualname":"<ControlStackFrame>::is_loop","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":181633,"byte_end":181652,"line_start":154,"line_end":154,"column_start":12,"column_end":31},"name":"exit_is_branched_to","qualname":"<ControlStackFrame>::exit_is_branched_to","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":181975,"byte_end":181995,"line_start":168,"line_end":168,"column_start":12,"column_end":32},"name":"set_branched_to_exit","qualname":"<ControlStackFrame>::set_branched_to_exit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":537},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":182596,"byte_end":182616,"line_start":188,"line_end":188,"column_start":12,"column_end":32},"name":"FuncTranslationState","qualname":"::state::func_state::FuncTranslationState","value":"FuncTranslationState { stack, control_stack, reachable }","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"decl_id":null,"docs":" Contains information passed along during a function's translation and that records:","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":538},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":182738,"byte_end":182743,"line_start":191,"line_end":191,"column_start":9,"column_end":14},"name":"stack","qualname":"::state::func_state::FuncTranslationState::stack","value":"std::vec::Vec<cranelift_codegen::ir::entities::Value>","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" A stack of values corresponding to the active values in the input wasm function at this\n point.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":539},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":182857,"byte_end":182870,"line_start":193,"line_end":193,"column_start":9,"column_end":22},"name":"control_stack","qualname":"::state::func_state::FuncTranslationState::control_stack","value":"std::vec::Vec<state::func_state::ControlStackFrame>","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" A stack of active control flow operations at this point in the input wasm function.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":540},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":183045,"byte_end":183054,"line_start":196,"line_end":196,"column_start":9,"column_end":18},"name":"reachable","qualname":"::state::func_state::FuncTranslationState::reachable","value":"bool","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Is the current translation state still reachable? This is false when translating operators\n like End, Return, or Unreachable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":184190,"byte_end":184199,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"reachable","qualname":"<FuncTranslationState>::reachable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the current translation state expresses reachable code, false if it is unreachable.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":184169,"byte_end":184178,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":185296,"byte_end":185306,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"initialize","qualname":"<FuncTranslationState>::initialize","value":"fn (&mut self, sig: &ir::Signature, exit_block: Block) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initialize the state for compiling a function with the given signature.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/module_state.rs","byte_start":194922,"byte_end":194944,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"ModuleTranslationState","qualname":"::state::module_state::ModuleTranslationState","value":"ModuleTranslationState { wasm_types }","parent":null,"children":[{"krate":0,"index":727}],"decl_id":null,"docs":" Contains information decoded from the Wasm module that must be referenced\n during each Wasm function's translation.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":727},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/module_state.rs","byte_start":195179,"byte_end":195189,"line_start":21,"line_end":21,"column_start":9,"column_end":19},"name":"wasm_types","qualname":"::state::module_state::ModuleTranslationState::wasm_types","value":"cranelift_entity::primary::PrimaryMap<translation_utils::SignatureIndex, (std::boxed::Box<[wasmparser::primitives::Type]>, std::boxed::Box<[wasmparser::primitives::Type]>)>","parent":{"krate":0,"index":726},"children":[],"decl_id":null,"docs":" A map containing a Wasm module's original, raw signatures.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/module_state.rs","byte_start":195298,"byte_end":195301,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleTranslationState>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty ModuleTranslationState.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":196072,"byte_end":196081,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"FuncIndex","qualname":"::translation_utils::FuncIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a function (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":196261,"byte_end":196277,"line_start":22,"line_end":22,"column_start":12,"column_end":28},"name":"DefinedFuncIndex","qualname":"::translation_utils::DefinedFuncIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined function inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":794},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":196461,"byte_end":196478,"line_start":27,"line_end":27,"column_start":12,"column_end":29},"name":"DefinedTableIndex","qualname":"::translation_utils::DefinedTableIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined table inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":196664,"byte_end":196682,"line_start":32,"line_end":32,"column_start":12,"column_end":30},"name":"DefinedMemoryIndex","qualname":"::translation_utils::DefinedMemoryIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined memory inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":858},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":196869,"byte_end":196887,"line_start":37,"line_end":37,"column_start":12,"column_end":30},"name":"DefinedGlobalIndex","qualname":"::translation_utils::DefinedGlobalIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined global inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":890},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":197087,"byte_end":197097,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"TableIndex","qualname":"::translation_utils::TableIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a table (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":197299,"byte_end":197310,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"GlobalIndex","qualname":"::translation_utils::GlobalIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a global variable (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":954},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":197511,"byte_end":197522,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"MemoryIndex","qualname":"::translation_utils::MemoryIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a linear memory (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":986},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":197719,"byte_end":197733,"line_start":57,"line_end":57,"column_start":12,"column_end":26},"name":"SignatureIndex","qualname":"::translation_utils::SignatureIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a signature (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1018},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":197922,"byte_end":197938,"line_start":62,"line_end":62,"column_start":12,"column_end":28},"name":"PassiveDataIndex","qualname":"::translation_utils::PassiveDataIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a passive data segment inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198132,"byte_end":198148,"line_start":67,"line_end":67,"column_start":12,"column_end":28},"name":"PassiveElemIndex","qualname":"::translation_utils::PassiveElemIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a passive element segment inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1082},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198259,"byte_end":198265,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Global","qualname":"::translation_utils::Global","value":"Global { ty, mutability, initializer }","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085}],"decl_id":null,"docs":" WebAssembly global.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1083},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198328,"byte_end":198330,"line_start":74,"line_end":74,"column_start":9,"column_end":11},"name":"ty","qualname":"::translation_utils::Global::ty","value":"cranelift_codegen::ir::types::Type","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The type of the value stored in the global.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1084},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198417,"byte_end":198427,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"mutability","qualname":"::translation_utils::Global::mutability","value":"bool","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" A flag indicating whether the value may change at runtime.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1085},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198484,"byte_end":198495,"line_start":78,"line_end":78,"column_start":9,"column_end":20},"name":"initializer","qualname":"::translation_utils::Global::initializer","value":"translation_utils::GlobalInit","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The source of the initial value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1095},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198687,"byte_end":198695,"line_start":85,"line_end":85,"column_start":5,"column_end":13},"name":"I32Const","qualname":"::translation_utils::GlobalInit::I32Const","value":"GlobalInit::I32Const(i32)","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" An `i32.const`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1098},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198730,"byte_end":198738,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"I64Const","qualname":"::translation_utils::GlobalInit::I64Const","value":"GlobalInit::I64Const(i64)","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" An `i64.const`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1101},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198773,"byte_end":198781,"line_start":89,"line_end":89,"column_start":5,"column_end":13},"name":"F32Const","qualname":"::translation_utils::GlobalInit::F32Const","value":"GlobalInit::F32Const(u32)","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" An `f32.const`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1104},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198816,"byte_end":198824,"line_start":91,"line_end":91,"column_start":5,"column_end":13},"name":"F64Const","qualname":"::translation_utils::GlobalInit::F64Const","value":"GlobalInit::F64Const(u64)","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" An `f64.const`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1107},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198855,"byte_end":198864,"line_start":93,"line_end":93,"column_start":5,"column_end":14},"name":"V128Const","qualname":"::translation_utils::GlobalInit::V128Const","value":"GlobalInit::V128Const(V128Imm)","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" A `vconst`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1110},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198921,"byte_end":198930,"line_start":95,"line_end":95,"column_start":5,"column_end":14},"name":"GetGlobal","qualname":"::translation_utils::GlobalInit::GetGlobal","value":"GlobalInit::GetGlobal(GlobalIndex)","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" A `global.get` of another global.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1113},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198971,"byte_end":198983,"line_start":97,"line_end":97,"column_start":5,"column_end":17},"name":"RefNullConst","qualname":"::translation_utils::GlobalInit::RefNullConst","value":"GlobalInit::RefNullConst","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" A `ref.null`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1115},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199019,"byte_end":199026,"line_start":99,"line_end":99,"column_start":5,"column_end":12},"name":"RefFunc","qualname":"::translation_utils::GlobalInit::RefFunc","value":"GlobalInit::RefFunc(FuncIndex)","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":" A `ref.func <index>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1118},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199126,"byte_end":199132,"line_start":101,"line_end":101,"column_start":5,"column_end":11},"name":"Import","qualname":"::translation_utils::GlobalInit::Import","value":"GlobalInit::Import","parent":{"krate":0,"index":1094},"children":[],"decl_id":null,"docs":"< The global is imported from, and thus initialized by, a different module.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1094},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":198646,"byte_end":198656,"line_start":83,"line_end":83,"column_start":10,"column_end":20},"name":"GlobalInit","qualname":"::translation_utils::GlobalInit","value":"GlobalInit::{I32Const, I64Const, F32Const, F64Const, V128Const, GetGlobal, RefNullConst, RefFunc, Import}","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1118}],"decl_id":null,"docs":" Globals are initialized via the `const` operators or by referring to another import.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1128},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199207,"byte_end":199212,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"Table","qualname":"::translation_utils::Table","value":"Table { ty, minimum, maximum }","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"decl_id":null,"docs":" WebAssembly table.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1129},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199281,"byte_end":199283,"line_start":108,"line_end":108,"column_start":9,"column_end":11},"name":"ty","qualname":"::translation_utils::Table::ty","value":"translation_utils::TableElementType","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":" The type of data stored in elements of the table.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1130},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199364,"byte_end":199371,"line_start":110,"line_end":110,"column_start":9,"column_end":16},"name":"minimum","qualname":"::translation_utils::Table::minimum","value":"u32","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":" The minimum number of elements in the table.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1131},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199439,"byte_end":199446,"line_start":112,"line_end":112,"column_start":9,"column_end":16},"name":"maximum","qualname":"::translation_utils::Table::maximum","value":"core::option::Option<u32>","parent":{"krate":0,"index":1128},"children":[],"decl_id":null,"docs":" The maximum number of elements in the table.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1141},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199622,"byte_end":199625,"line_start":119,"line_end":119,"column_start":5,"column_end":8},"name":"Val","qualname":"::translation_utils::TableElementType::Val","value":"TableElementType::Val(ir::Type)","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":" A scalar type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1144},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199661,"byte_end":199665,"line_start":121,"line_end":121,"column_start":5,"column_end":9},"name":"Func","qualname":"::translation_utils::TableElementType::Func","value":"TableElementType::Func","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":" A function.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1140},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199576,"byte_end":199592,"line_start":117,"line_end":117,"column_start":10,"column_end":26},"name":"TableElementType","qualname":"::translation_utils::TableElementType","value":"TableElementType::{Val, Func}","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1144}],"decl_id":null,"docs":" WebAssembly table element. Can be a function or a scalar type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199748,"byte_end":199754,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"Memory","qualname":"::translation_utils::Memory","value":"Memory { minimum, maximum, shared }","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157}],"decl_id":null,"docs":" WebAssembly linear memory.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1155},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199816,"byte_end":199823,"line_start":128,"line_end":128,"column_start":9,"column_end":16},"name":"minimum","qualname":"::translation_utils::Memory::minimum","value":"u32","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" The minimum number of pages in the memory.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1156},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199889,"byte_end":199896,"line_start":130,"line_end":130,"column_start":9,"column_end":16},"name":"maximum","qualname":"::translation_utils::Memory::maximum","value":"core::option::Option<u32>","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" The maximum number of pages in the memory.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1157},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":199986,"byte_end":199992,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"name":"shared","qualname":"::translation_utils::Memory::shared","value":"bool","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" Whether the memory may be shared between multiple threads.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":610},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/translation_utils.rs","byte_start":204689,"byte_end":204710,"line_start":249,"line_end":249,"column_start":8,"column_end":29},"name":"get_vmctx_value_label","qualname":"::translation_utils::get_vmctx_value_label","value":"fn () -> ir::ValueLabel","parent":null,"children":[],"decl_id":null,"docs":" Special VMContext value label. It is tracked as 0xffff_fffe label.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":646},"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/lib.rs","byte_start":2521,"byte_end":2528,"line_start":76,"line_end":76,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Version number of this crate.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95181,"byte_end":95191,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96930,"byte_end":96945,"line_start":92,"line_end":92,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":98285,"byte_end":98301,"line_start":135,"line_end":135,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":99751,"byte_end":99771,"line_start":177,"line_end":177,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":100418,"byte_end":100438,"line_start":197,"line_end":197,"column_start":48,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":100598,"byte_end":100618,"line_start":203,"line_end":203,"column_start":46,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":110109,"byte_end":110125,"line_start":526,"line_end":526,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":110257,"byte_end":110273,"line_start":532,"line_end":532,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":119263,"byte_end":119272,"line_start":90,"line_end":90,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","byte_start":141227,"byte_end":141241,"line_start":31,"line_end":31,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":179901,"byte_end":179918,"line_start":91,"line_end":91,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":184042,"byte_end":184062,"line_start":219,"line_end":219,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":184254,"byte_end":184274,"line_start":227,"line_end":227,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":190531,"byte_end":190551,"line_start":415,"line_end":415,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/module_state.rs","byte_start":195210,"byte_end":195232,"line_start":24,"line_end":24,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":95181,"byte_end":95191,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":96930,"byte_end":96945,"line_start":92,"line_end":92,"column_start":6,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":98285,"byte_end":98301,"line_start":135,"line_end":135,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":99751,"byte_end":99771,"line_start":177,"line_end":177,"column_start":26,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":100418,"byte_end":100438,"line_start":197,"line_end":197,"column_start":48,"column_end":68},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":171},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":100598,"byte_end":100618,"line_start":203,"line_end":203,"column_start":46,"column_end":66},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":171},"to":{"krate":0,"index":270}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":110109,"byte_end":110125,"line_start":526,"line_end":526,"column_start":28,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":158},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/dummy.rs","byte_start":110257,"byte_end":110273,"line_start":532,"line_end":532,"column_start":42,"column_end":58},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":158},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":119263,"byte_end":119272,"line_start":90,"line_end":90,"column_start":34,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":2221}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":121291,"byte_end":121308,"line_start":146,"line_end":146,"column_start":28,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":265},"to":{"krate":0,"index":270}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/environ/spec.rs","byte_start":132878,"byte_end":132895,"line_start":467,"line_end":467,"column_start":37,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":265},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/func_translator.rs","byte_start":141227,"byte_end":141241,"line_start":31,"line_end":31,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":179901,"byte_end":179918,"line_start":91,"line_end":91,"column_start":6,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":184042,"byte_end":184062,"line_start":219,"line_end":219,"column_start":6,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":184254,"byte_end":184274,"line_start":227,"line_end":227,"column_start":6,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/func_state.rs","byte_start":190531,"byte_end":190551,"line_start":415,"line_end":415,"column_start":6,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hskang9/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.59.0/src/state/module_state.rs","byte_start":195210,"byte_end":195232,"line_start":24,"line_end":24,"column_start":6,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}}]}